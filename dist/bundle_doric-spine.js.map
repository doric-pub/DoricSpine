{"version":3,"file":"bundle_doric-spine.js","sources":["../node_modules/@esotericsoftware/spine-core/dist/Utils.js","../node_modules/@esotericsoftware/spine-core/dist/attachments/Attachment.js","../node_modules/@esotericsoftware/spine-core/dist/Animation.js","../node_modules/@esotericsoftware/spine-core/dist/AnimationState.js","../node_modules/@esotericsoftware/spine-core/dist/AnimationStateData.js","../node_modules/@esotericsoftware/spine-core/dist/attachments/BoundingBoxAttachment.js","../node_modules/@esotericsoftware/spine-core/dist/attachments/ClippingAttachment.js","../node_modules/@esotericsoftware/spine-core/dist/Texture.js","../node_modules/@esotericsoftware/spine-core/dist/TextureAtlas.js","../node_modules/@esotericsoftware/spine-core/dist/attachments/MeshAttachment.js","../node_modules/@esotericsoftware/spine-core/dist/attachments/PathAttachment.js","../node_modules/@esotericsoftware/spine-core/dist/attachments/PointAttachment.js","../node_modules/@esotericsoftware/spine-core/dist/attachments/RegionAttachment.js","../node_modules/@esotericsoftware/spine-core/dist/AtlasAttachmentLoader.js","../node_modules/@esotericsoftware/spine-core/dist/BoneData.js","../node_modules/@esotericsoftware/spine-core/dist/Bone.js","../node_modules/@esotericsoftware/spine-core/dist/ConstraintData.js","../node_modules/@esotericsoftware/spine-core/dist/AssetManagerBase.js","../node_modules/@esotericsoftware/spine-core/dist/Event.js","../node_modules/@esotericsoftware/spine-core/dist/EventData.js","../node_modules/@esotericsoftware/spine-core/dist/IkConstraint.js","../node_modules/@esotericsoftware/spine-core/dist/IkConstraintData.js","../node_modules/@esotericsoftware/spine-core/dist/PathConstraintData.js","../node_modules/@esotericsoftware/spine-core/dist/PathConstraint.js","../node_modules/@esotericsoftware/spine-core/dist/Slot.js","../node_modules/@esotericsoftware/spine-core/dist/TransformConstraint.js","../node_modules/@esotericsoftware/spine-core/dist/Skeleton.js","../node_modules/@esotericsoftware/spine-core/dist/SkeletonData.js","../node_modules/@esotericsoftware/spine-core/dist/Skin.js","../node_modules/@esotericsoftware/spine-core/dist/SlotData.js","../node_modules/@esotericsoftware/spine-core/dist/TransformConstraintData.js","../node_modules/@esotericsoftware/spine-core/dist/SkeletonBinary.js","../node_modules/@esotericsoftware/spine-core/dist/SkeletonBounds.js","../node_modules/@esotericsoftware/spine-core/dist/Triangulator.js","../node_modules/@esotericsoftware/spine-core/dist/SkeletonClipping.js","../node_modules/@esotericsoftware/spine-core/dist/SkeletonJson.js","../node_modules/@esotericsoftware/spine-core/dist/polyfills.js","../node_modules/@esotericsoftware/spine-core/dist/vertexeffects/JitterEffect.js","../node_modules/@esotericsoftware/spine-core/dist/vertexeffects/SwirlEffect.js","../build/lib/AssetManagerBase.js","../build/lib/WebGL.js","../build/lib/GLTexture.js","../build/lib/AssetManager.js","../build/lib/Input.js","../build/lib/Vector3.js","../build/lib/Matrix4.js","../build/lib/Shader.js","../build/lib/Mesh.js","../build/lib/PolygonBatcher.js","../build/lib/Camera.js","../build/lib/ShapeRenderer.js","../build/lib/SkeletonDebugRenderer.js","../build/lib/SkeletonRenderer.js","../build/lib/SceneRenderer.js","../node_modules/dangle/dist/bundle_dangle.js","../build/lib/SpineCanvas.js"],"sourcesContent":["/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class IntSet {\n    constructor() {\n        this.array = new Array();\n    }\n    add(value) {\n        let contains = this.contains(value);\n        this.array[value | 0] = value | 0;\n        return !contains;\n    }\n    contains(value) {\n        return this.array[value | 0] != undefined;\n    }\n    remove(value) {\n        this.array[value | 0] = undefined;\n    }\n    clear() {\n        this.array.length = 0;\n    }\n}\nexport class StringSet {\n    constructor() {\n        this.entries = {};\n        this.size = 0;\n    }\n    add(value) {\n        let contains = this.entries[value];\n        this.entries[value] = true;\n        if (!contains) {\n            this.size++;\n            return true;\n        }\n        return false;\n    }\n    addAll(values) {\n        let oldSize = this.size;\n        for (var i = 0, n = values.length; i < n; i++)\n            this.add(values[i]);\n        return oldSize != this.size;\n    }\n    contains(value) {\n        return this.entries[value];\n    }\n    clear() {\n        this.entries = {};\n        this.size = 0;\n    }\n}\nexport class Color {\n    constructor(r = 0, g = 0, b = 0, a = 0) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    set(r, g, b, a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n        return this.clamp();\n    }\n    setFromColor(c) {\n        this.r = c.r;\n        this.g = c.g;\n        this.b = c.b;\n        this.a = c.a;\n        return this;\n    }\n    setFromString(hex) {\n        hex = hex.charAt(0) == '#' ? hex.substr(1) : hex;\n        this.r = parseInt(hex.substr(0, 2), 16) / 255;\n        this.g = parseInt(hex.substr(2, 2), 16) / 255;\n        this.b = parseInt(hex.substr(4, 2), 16) / 255;\n        this.a = hex.length != 8 ? 1 : parseInt(hex.substr(6, 2), 16) / 255;\n        return this;\n    }\n    add(r, g, b, a) {\n        this.r += r;\n        this.g += g;\n        this.b += b;\n        this.a += a;\n        return this.clamp();\n    }\n    clamp() {\n        if (this.r < 0)\n            this.r = 0;\n        else if (this.r > 1)\n            this.r = 1;\n        if (this.g < 0)\n            this.g = 0;\n        else if (this.g > 1)\n            this.g = 1;\n        if (this.b < 0)\n            this.b = 0;\n        else if (this.b > 1)\n            this.b = 1;\n        if (this.a < 0)\n            this.a = 0;\n        else if (this.a > 1)\n            this.a = 1;\n        return this;\n    }\n    static rgba8888ToColor(color, value) {\n        color.r = ((value & 0xff000000) >>> 24) / 255;\n        color.g = ((value & 0x00ff0000) >>> 16) / 255;\n        color.b = ((value & 0x0000ff00) >>> 8) / 255;\n        color.a = ((value & 0x000000ff)) / 255;\n    }\n    static rgb888ToColor(color, value) {\n        color.r = ((value & 0x00ff0000) >>> 16) / 255;\n        color.g = ((value & 0x0000ff00) >>> 8) / 255;\n        color.b = ((value & 0x000000ff)) / 255;\n    }\n    static fromString(hex) {\n        return new Color().setFromString(hex);\n    }\n}\nColor.WHITE = new Color(1, 1, 1, 1);\nColor.RED = new Color(1, 0, 0, 1);\nColor.GREEN = new Color(0, 1, 0, 1);\nColor.BLUE = new Color(0, 0, 1, 1);\nColor.MAGENTA = new Color(1, 0, 1, 1);\nexport class MathUtils {\n    static clamp(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    }\n    static cosDeg(degrees) {\n        return Math.cos(degrees * MathUtils.degRad);\n    }\n    static sinDeg(degrees) {\n        return Math.sin(degrees * MathUtils.degRad);\n    }\n    static signum(value) {\n        return value > 0 ? 1 : value < 0 ? -1 : 0;\n    }\n    static toInt(x) {\n        return x > 0 ? Math.floor(x) : Math.ceil(x);\n    }\n    static cbrt(x) {\n        let y = Math.pow(Math.abs(x), 1 / 3);\n        return x < 0 ? -y : y;\n    }\n    static randomTriangular(min, max) {\n        return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\n    }\n    static randomTriangularWith(min, max, mode) {\n        let u = Math.random();\n        let d = max - min;\n        if (u <= (mode - min) / d)\n            return min + Math.sqrt(u * d * (mode - min));\n        return max - Math.sqrt((1 - u) * d * (max - mode));\n    }\n    static isPowerOfTwo(value) {\n        return value && (value & (value - 1)) === 0;\n    }\n}\nMathUtils.PI = 3.1415927;\nMathUtils.PI2 = MathUtils.PI * 2;\nMathUtils.radiansToDegrees = 180 / MathUtils.PI;\nMathUtils.radDeg = MathUtils.radiansToDegrees;\nMathUtils.degreesToRadians = MathUtils.PI / 180;\nMathUtils.degRad = MathUtils.degreesToRadians;\nexport class Interpolation {\n    apply(start, end, a) {\n        return start + (end - start) * this.applyInternal(a);\n    }\n}\nexport class Pow extends Interpolation {\n    constructor(power) {\n        super();\n        this.power = 2;\n        this.power = power;\n    }\n    applyInternal(a) {\n        if (a <= 0.5)\n            return Math.pow(a * 2, this.power) / 2;\n        return Math.pow((a - 1) * 2, this.power) / (this.power % 2 == 0 ? -2 : 2) + 1;\n    }\n}\nexport class PowOut extends Pow {\n    constructor(power) {\n        super(power);\n    }\n    applyInternal(a) {\n        return Math.pow(a - 1, this.power) * (this.power % 2 == 0 ? -1 : 1) + 1;\n    }\n}\nexport class Utils {\n    static arrayCopy(source, sourceStart, dest, destStart, numElements) {\n        for (let i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\n            dest[j] = source[i];\n        }\n    }\n    static arrayFill(array, fromIndex, toIndex, value) {\n        for (let i = fromIndex; i < toIndex; i++)\n            array[i] = value;\n    }\n    static setArraySize(array, size, value = 0) {\n        let oldSize = array.length;\n        if (oldSize == size)\n            return array;\n        array.length = size;\n        if (oldSize < size) {\n            for (let i = oldSize; i < size; i++)\n                array[i] = value;\n        }\n        return array;\n    }\n    static ensureArrayCapacity(array, size, value = 0) {\n        if (array.length >= size)\n            return array;\n        return Utils.setArraySize(array, size, value);\n    }\n    static newArray(size, defaultValue) {\n        let array = new Array(size);\n        for (let i = 0; i < size; i++)\n            array[i] = defaultValue;\n        return array;\n    }\n    static newFloatArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Float32Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static newShortArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Int16Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static toFloatArray(array) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\n    }\n    static toSinglePrecision(value) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\n    }\n    // This function is used to fix WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n    static webkit602BugfixHelper(alpha, blend) {\n    }\n    static contains(array, element, identity = true) {\n        for (var i = 0; i < array.length; i++)\n            if (array[i] == element)\n                return true;\n        return false;\n    }\n    static enumValue(type, name) {\n        return type[name[0].toUpperCase() + name.slice(1)];\n    }\n}\nUtils.SUPPORTS_TYPED_ARRAYS = typeof (Float32Array) !== \"undefined\";\nexport class DebugUtils {\n    static logBones(skeleton) {\n        for (let i = 0; i < skeleton.bones.length; i++) {\n            let bone = skeleton.bones[i];\n            console.log(bone.data.name + \", \" + bone.a + \", \" + bone.b + \", \" + bone.c + \", \" + bone.d + \", \" + bone.worldX + \", \" + bone.worldY);\n        }\n    }\n}\nexport class Pool {\n    constructor(instantiator) {\n        this.items = new Array();\n        this.instantiator = instantiator;\n    }\n    obtain() {\n        return this.items.length > 0 ? this.items.pop() : this.instantiator();\n    }\n    free(item) {\n        if (item.reset)\n            item.reset();\n        this.items.push(item);\n    }\n    freeAll(items) {\n        for (let i = 0; i < items.length; i++)\n            this.free(items[i]);\n    }\n    clear() {\n        this.items.length = 0;\n    }\n}\nexport class Vector2 {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    length() {\n        let x = this.x;\n        let y = this.y;\n        return Math.sqrt(x * x + y * y);\n    }\n    normalize() {\n        let len = this.length();\n        if (len != 0) {\n            this.x /= len;\n            this.y /= len;\n        }\n        return this;\n    }\n}\nexport class TimeKeeper {\n    constructor() {\n        this.maxDelta = 0.064;\n        this.framesPerSecond = 0;\n        this.delta = 0;\n        this.totalTime = 0;\n        this.lastTime = Date.now() / 1000;\n        this.frameCount = 0;\n        this.frameTime = 0;\n    }\n    update() {\n        let now = Date.now() / 1000;\n        this.delta = now - this.lastTime;\n        this.frameTime += this.delta;\n        this.totalTime += this.delta;\n        if (this.delta > this.maxDelta)\n            this.delta = this.maxDelta;\n        this.lastTime = now;\n        this.frameCount++;\n        if (this.frameTime > 1) {\n            this.framesPerSecond = this.frameCount / this.frameTime;\n            this.frameTime = 0;\n            this.frameCount = 0;\n        }\n    }\n}\nexport class WindowedMean {\n    constructor(windowSize = 32) {\n        this.addedValues = 0;\n        this.lastValue = 0;\n        this.mean = 0;\n        this.dirty = true;\n        this.values = new Array(windowSize);\n    }\n    hasEnoughData() {\n        return this.addedValues >= this.values.length;\n    }\n    addValue(value) {\n        if (this.addedValues < this.values.length)\n            this.addedValues++;\n        this.values[this.lastValue++] = value;\n        if (this.lastValue > this.values.length - 1)\n            this.lastValue = 0;\n        this.dirty = true;\n    }\n    getMean() {\n        if (this.hasEnoughData()) {\n            if (this.dirty) {\n                let mean = 0;\n                for (let i = 0; i < this.values.length; i++)\n                    mean += this.values[i];\n                this.mean = mean / this.values.length;\n                this.dirty = false;\n            }\n            return this.mean;\n        }\n        return 0;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils } from \"../Utils\";\n/** The base class for all attachments. */\nexport class Attachment {\n    constructor(name) {\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n    }\n}\n/** Base class for an attachment with vertices that are transformed by one or more bones and can be deformed by a slot's\n * {@link Slot#deform}. */\nexport class VertexAttachment extends Attachment {\n    constructor(name) {\n        super(name);\n        /** The unique ID for this attachment. */\n        this.id = VertexAttachment.nextID++;\n        /** The bones which affect the {@link #getVertices()}. The array entries are, for each vertex, the number of bones affecting\n         * the vertex followed by that many bone indices, which is the index of the bone in {@link Skeleton#bones}. Will be null\n         * if this attachment has no weights. */\n        this.bones = null;\n        /** The vertex positions in the bone's coordinate system. For a non-weighted attachment, the values are `x,y`\n         * entries for each vertex. For a weighted attachment, the values are `x,y,weight` entries for each bone affecting\n         * each vertex. */\n        this.vertices = null;\n        /** The maximum number of world vertex values that can be output by\n         * {@link #computeWorldVertices()} using the `count` parameter. */\n        this.worldVerticesLength = 0;\n        /** Deform keys for the deform attachment are also applied to this attachment. May be null if no deform keys should be applied. */\n        this.deformAttachment = this;\n    }\n    /** Transforms the attachment's local {@link #vertices} to world coordinates. If the slot's {@link Slot#deform} is\n     * not empty, it is used to deform the vertices.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide.\n     * @param start The index of the first {@link #vertices} value to transform. Each vertex has 2 values, x and y.\n     * @param count The number of world vertex values to output. Must be <= {@link #worldVerticesLength} - `start`.\n     * @param worldVertices The output world vertices. Must have a length >= `offset` + `count` *\n     *           `stride` / 2.\n     * @param offset The `worldVertices` index to begin writing values.\n     * @param stride The number of `worldVertices` entries between the value pairs written. */\n    computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n        count = offset + (count >> 1) * stride;\n        let skeleton = slot.bone.skeleton;\n        let deformArray = slot.deform;\n        let vertices = this.vertices;\n        let bones = this.bones;\n        if (!bones) {\n            if (deformArray.length > 0)\n                vertices = deformArray;\n            let bone = slot.bone;\n            let x = bone.worldX;\n            let y = bone.worldY;\n            let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n            for (let v = start, w = offset; w < count; v += 2, w += stride) {\n                let vx = vertices[v], vy = vertices[v + 1];\n                worldVertices[w] = vx * a + vy * b + x;\n                worldVertices[w + 1] = vx * c + vy * d + y;\n            }\n            return;\n        }\n        let v = 0, skip = 0;\n        for (let i = 0; i < start; i += 2) {\n            let n = bones[v];\n            v += n + 1;\n            skip += n;\n        }\n        let skeletonBones = skeleton.bones;\n        if (deformArray.length == 0) {\n            for (let w = offset, b = skip * 3; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3) {\n                    let bone = skeletonBones[bones[v]];\n                    let vx = vertices[b], vy = vertices[b + 1], weight = vertices[b + 2];\n                    wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;\n                    wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;\n                }\n                worldVertices[w] = wx;\n                worldVertices[w + 1] = wy;\n            }\n        }\n        else {\n            let deform = deformArray;\n            for (let w = offset, b = skip * 3, f = skip << 1; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3, f += 2) {\n                    let bone = skeletonBones[bones[v]];\n                    let vx = vertices[b] + deform[f], vy = vertices[b + 1] + deform[f + 1], weight = vertices[b + 2];\n                    wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;\n                    wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;\n                }\n                worldVertices[w] = wx;\n                worldVertices[w + 1] = wy;\n            }\n        }\n    }\n    /** Does not copy id (generated) or name (set on construction). **/\n    copyTo(attachment) {\n        if (this.bones) {\n            attachment.bones = new Array(this.bones.length);\n            Utils.arrayCopy(this.bones, 0, attachment.bones, 0, this.bones.length);\n        }\n        else\n            attachment.bones = null;\n        if (this.vertices) {\n            attachment.vertices = Utils.newFloatArray(this.vertices.length);\n            Utils.arrayCopy(this.vertices, 0, attachment.vertices, 0, this.vertices.length);\n        }\n        else\n            attachment.vertices = null;\n        attachment.worldVerticesLength = this.worldVerticesLength;\n        attachment.deformAttachment = this.deformAttachment;\n    }\n}\nVertexAttachment.nextID = 0;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXR0YWNobWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hdHRhY2htZW50cy9BdHRhY2htZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQW1CLEtBQUssRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUVsRCwwQ0FBMEM7QUFDMUMsTUFBTSxPQUFnQixVQUFVO0lBRy9CLFlBQWEsSUFBWTtRQUN4QixJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBR0Q7QUFFRDswQkFDMEI7QUFDMUIsTUFBTSxPQUFnQixnQkFBaUIsU0FBUSxVQUFVO0lBdUJ4RCxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBckJiLHlDQUF5QztRQUN6QyxPQUFFLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFL0I7O2dEQUV3QztRQUN4QyxVQUFLLEdBQWtCLElBQUksQ0FBQztRQUU1Qjs7MEJBRWtCO1FBQ2xCLGFBQVEsR0FBb0IsSUFBSSxDQUFDO1FBRWpDOzBFQUNrRTtRQUNsRSx3QkFBbUIsR0FBRyxDQUFDLENBQUM7UUFFeEIsa0lBQWtJO1FBQ2xJLHFCQUFnQixHQUFxQixJQUFJLENBQUM7SUFJMUMsQ0FBQztJQUVEOzs7Ozs7Ozs7OzhGQVUwRjtJQUMxRixvQkFBb0IsQ0FBRSxJQUFVLEVBQUUsS0FBYSxFQUFFLEtBQWEsRUFBRSxhQUE4QixFQUFFLE1BQWMsRUFBRSxNQUFjO1FBQzdILEtBQUssR0FBRyxNQUFNLEdBQUcsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ3ZDLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMs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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { VertexAttachment } from \"./attachments/Attachment\";\nimport { StringSet, Utils, MathUtils } from \"./Utils\";\n/** A simple container for a list of timelines and a name. */\nexport class Animation {\n    constructor(name, timelines, duration) {\n        this.timelines = null;\n        this.timelineIds = null;\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n        this.setTimelines(timelines);\n        this.duration = duration;\n    }\n    setTimelines(timelines) {\n        if (!timelines)\n            throw new Error(\"timelines cannot be null.\");\n        this.timelines = timelines;\n        this.timelineIds = new StringSet();\n        for (var i = 0; i < timelines.length; i++)\n            this.timelineIds.addAll(timelines[i].getPropertyIds());\n    }\n    hasTimeline(ids) {\n        for (let i = 0; i < ids.length; i++)\n            if (this.timelineIds.contains(ids[i]))\n                return true;\n        return false;\n    }\n    /** Applies all the animation's timelines to the specified skeleton.\n     *\n     * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}.\n     * @param loop If true, the animation repeats after {@link #getDuration()}.\n     * @param events May be null to ignore fired events. */\n    apply(skeleton, lastTime, time, loop, events, alpha, blend, direction) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        if (loop && this.duration != 0) {\n            time %= this.duration;\n            if (lastTime > 0)\n                lastTime %= this.duration;\n        }\n        let timelines = this.timelines;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            timelines[i].apply(skeleton, lastTime, time, events, alpha, blend, direction);\n    }\n}\n/** Controls how a timeline value is mixed with the setup pose value or current pose value when a timeline's `alpha`\n * < 1.\n *\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\nexport var MixBlend;\n(function (MixBlend) {\n    /** Transitions from the setup value to the timeline value (the current value is not used). Before the first key, the setup\n     * value is set. */\n    MixBlend[MixBlend[\"setup\"] = 0] = \"setup\";\n    /** Transitions from the current value to the timeline value. Before the first key, transitions from the current value to\n     * the setup value. Timelines which perform instant transitions, such as {@link DrawOrderTimeline} or\n     * {@link AttachmentTimeline}, use the setup value before the first key.\n     *\n     * `first` is intended for the first animations applied, not for animations layered on top of those. */\n    MixBlend[MixBlend[\"first\"] = 1] = \"first\";\n    /** Transitions from the current value to the timeline value. No change is made before the first key (the current value is\n     * kept until the first key).\n     *\n     * `replace` is intended for animations layered on top of others, not for the first animations applied. */\n    MixBlend[MixBlend[\"replace\"] = 2] = \"replace\";\n    /** Transitions from the current value to the current value plus the timeline value. No change is made before the first key\n     * (the current value is kept until the first key).\n     *\n     * `add` is intended for animations layered on top of others, not for the first animations applied. Properties\n     * keyed by additive animations must be set manually or by another animation before applying the additive animations, else\n     * the property values will increase continually. */\n    MixBlend[MixBlend[\"add\"] = 3] = \"add\";\n})(MixBlend || (MixBlend = {}));\n/** Indicates whether a timeline's `alpha` is mixing out over time toward 0 (the setup or current pose value) or\n * mixing in toward 1 (the timeline's value).\n *\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\nexport var MixDirection;\n(function (MixDirection) {\n    MixDirection[MixDirection[\"mixIn\"] = 0] = \"mixIn\";\n    MixDirection[MixDirection[\"mixOut\"] = 1] = \"mixOut\";\n})(MixDirection || (MixDirection = {}));\nconst Property = {\n    rotate: 0,\n    x: 1,\n    y: 2,\n    scaleX: 3,\n    scaleY: 4,\n    shearX: 5,\n    shearY: 6,\n    rgb: 7,\n    alpha: 8,\n    rgb2: 9,\n    attachment: 10,\n    deform: 11,\n    event: 12,\n    drawOrder: 13,\n    ikConstraint: 14,\n    transformConstraint: 15,\n    pathConstraintPosition: 16,\n    pathConstraintSpacing: 17,\n    pathConstraintMix: 18\n};\n/** The interface for all timelines. */\nexport class Timeline {\n    constructor(frameCount, propertyIds) {\n        this.propertyIds = null;\n        this.frames = null;\n        this.propertyIds = propertyIds;\n        this.frames = Utils.newFloatArray(frameCount * this.getFrameEntries());\n    }\n    getPropertyIds() {\n        return this.propertyIds;\n    }\n    getFrameEntries() {\n        return 1;\n    }\n    getFrameCount() {\n        return this.frames.length / this.getFrameEntries();\n    }\n    getDuration() {\n        return this.frames[this.frames.length - this.getFrameEntries()];\n    }\n    static search1(frames, time) {\n        let n = frames.length;\n        for (let i = 1; i < n; i++)\n            if (frames[i] > time)\n                return i - 1;\n        return n - 1;\n    }\n    static search(frames, time, step) {\n        let n = frames.length;\n        for (let i = step; i < n; i += step)\n            if (frames[i] > time)\n                return i - step;\n        return n - step;\n    }\n}\n/** The base class for timelines that use interpolation between key frame values. */\nexport class CurveTimeline extends Timeline {\n    constructor(frameCount, bezierCount, propertyIds) {\n        super(frameCount, propertyIds);\n        this.curves = null; // type, x, y, ...\n        this.curves = Utils.newFloatArray(frameCount + bezierCount * 18 /*BEZIER_SIZE*/);\n        this.curves[frameCount - 1] = 1 /*STEPPED*/;\n    }\n    /** Sets the specified key frame to linear interpolation. */\n    setLinear(frame) {\n        this.curves[frame] = 0 /*LINEAR*/;\n    }\n    /** Sets the specified key frame to stepped interpolation. */\n    setStepped(frame) {\n        this.curves[frame] = 1 /*STEPPED*/;\n    }\n    /** Shrinks the storage for Bezier curves, for use when <code>bezierCount</code> (specified in the constructor) was larger\n     * than the actual number of Bezier curves. */\n    shrink(bezierCount) {\n        let size = this.getFrameCount() + bezierCount * 18 /*BEZIER_SIZE*/;\n        if (this.curves.length > size) {\n            let newCurves = Utils.newFloatArray(size);\n            Utils.arrayCopy(this.curves, 0, newCurves, 0, size);\n            this.curves = newCurves;\n        }\n    }\n    /** Stores the segments for the specified Bezier curve. For timelines that modify multiple values, there may be more than\n     * one curve per frame.\n     * @param bezier The ordinal of this Bezier curve for this timeline, between 0 and <code>bezierCount - 1</code> (specified\n     *           in the constructor), inclusive.\n     * @param frame Between 0 and <code>frameCount - 1</code>, inclusive.\n     * @param value The index of the value for this frame that this curve is used for.\n     * @param time1 The time for the first key.\n     * @param value1 The value for the first key.\n     * @param cx1 The time for the first Bezier handle.\n     * @param cy1 The value for the first Bezier handle.\n     * @param cx2 The time of the second Bezier handle.\n     * @param cy2 The value for the second Bezier handle.\n     * @param time2 The time for the second key.\n     * @param value2 The value for the second key. */\n    setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n        let curves = this.curves;\n        let i = this.getFrameCount() + bezier * 18 /*BEZIER_SIZE*/;\n        if (value == 0)\n            curves[frame] = 2 /*BEZIER*/ + i;\n        let tmpx = (time1 - cx1 * 2 + cx2) * 0.03, tmpy = (value1 - cy1 * 2 + cy2) * 0.03;\n        let dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006, dddy = ((cy1 - cy2) * 3 - value1 + value2) * 0.006;\n        let ddx = tmpx * 2 + dddx, ddy = tmpy * 2 + dddy;\n        let dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667, dy = (cy1 - value1) * 0.3 + tmpy + dddy * 0.16666667;\n        let x = time1 + dx, y = value1 + dy;\n        for (let n = i + 18 /*BEZIER_SIZE*/; i < n; i += 2) {\n            curves[i] = x;\n            curves[i + 1] = y;\n            dx += ddx;\n            dy += ddy;\n            ddx += dddx;\n            ddy += dddy;\n            x += dx;\n            y += dy;\n        }\n    }\n    /** Returns the Bezier interpolated value for the specified time.\n     * @param frameIndex The index into {@link #getFrames()} for the values of the frame before <code>time</code>.\n     * @param valueOffset The offset from <code>frameIndex</code> to the value this curve is used for.\n     * @param i The index of the Bezier segments. See {@link #getCurveType(int)}. */\n    getBezierValue(time, frameIndex, valueOffset, i) {\n        let curves = this.curves;\n        if (curves[i] > time) {\n            let x = this.frames[frameIndex], y = this.frames[frameIndex + valueOffset];\n            return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n        }\n        let n = i + 18 /*BEZIER_SIZE*/;\n        for (i += 2; i < n; i += 2) {\n            if (curves[i] >= time) {\n                let x = curves[i - 2], y = curves[i - 1];\n                return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n            }\n        }\n        frameIndex += this.getFrameEntries();\n        let x = curves[n - 2], y = curves[n - 1];\n        return y + (time - x) / (this.frames[frameIndex] - x) * (this.frames[frameIndex + valueOffset] - y);\n    }\n}\nexport class CurveTimeline1 extends CurveTimeline {\n    constructor(frameCount, bezierCount, propertyId) {\n        super(frameCount, bezierCount, [propertyId]);\n    }\n    getFrameEntries() {\n        return 2 /*ENTRIES*/;\n    }\n    /** Sets the time and value for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, value) {\n        frame <<= 1;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*VALUE*/] = value;\n    }\n    /** Returns the interpolated value for the specified time. */\n    getCurveValue(time) {\n        let frames = this.frames;\n        let i = frames.length - 2;\n        for (let ii = 2; ii <= i; ii += 2) {\n            if (frames[ii] > time) {\n                i = ii - 2;\n                break;\n            }\n        }\n        let curveType = this.curves[i >> 1];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i], value = frames[i + 1 /*VALUE*/];\n                return value + (time - before) / (frames[i + 2 /*ENTRIES*/] - before) * (frames[i + 2 /*ENTRIES*/ + 1 /*VALUE*/] - value);\n            case 1 /*STEPPED*/:\n                return frames[i + 1 /*VALUE*/];\n        }\n        return this.getBezierValue(time, i, 1 /*VALUE*/, curveType - 2 /*BEZIER*/);\n    }\n}\n/** The base class for a {@link CurveTimeline} which sets two properties. */\nexport class CurveTimeline2 extends CurveTimeline {\n    /** @param bezierCount The maximum number of Bezier curves. See {@link #shrink(int)}.\n     * @param propertyIds Unique identifiers for the properties the timeline modifies. */\n    constructor(frameCount, bezierCount, propertyId1, propertyId2) {\n        super(frameCount, bezierCount, [propertyId1, propertyId2]);\n    }\n    getFrameEntries() {\n        return 3 /*ENTRIES*/;\n    }\n    /** Sets the time and values for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, value1, value2) {\n        frame *= 3 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*VALUE1*/] = value1;\n        this.frames[frame + 2 /*VALUE2*/] = value2;\n    }\n}\n/** Changes a bone's local {@link Bone#rotation}. */\nexport class RotateTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.rotate + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.rotation = bone.data.rotation;\n                    return;\n                case MixBlend.first:\n                    bone.rotation += (bone.data.rotation - bone.rotation) * alpha;\n            }\n            return;\n        }\n        let r = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.rotation = bone.data.rotation + r * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                r += bone.data.rotation - bone.rotation;\n            case MixBlend.add:\n                bone.rotation += r * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x} and {@link Bone#y}. */\nexport class TranslateTimeline extends CurveTimeline2 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.x + \"|\" + boneIndex, Property.y + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.x = bone.data.x;\n                    bone.y = bone.data.y;\n                    return;\n                case MixBlend.first:\n                    bone.x += (bone.data.x - bone.x) * alpha;\n                    bone.y += (bone.data.y - bone.y) * alpha;\n            }\n            return;\n        }\n        let x = 0, y = 0;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        switch (blend) {\n            case MixBlend.setup:\n                bone.x = bone.data.x + x * alpha;\n                bone.y = bone.data.y + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.x += (bone.data.x + x - bone.x) * alpha;\n                bone.y += (bone.data.y + y - bone.y) * alpha;\n                break;\n            case MixBlend.add:\n                bone.x += x * alpha;\n                bone.y += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x}. */\nexport class TranslateXTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.x + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.x = bone.data.x;\n                    return;\n                case MixBlend.first:\n                    bone.x += (bone.data.x - bone.x) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.x = bone.data.x + x * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.x += (bone.data.x + x - bone.x) * alpha;\n                break;\n            case MixBlend.add:\n                bone.x += x * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x}. */\nexport class TranslateYTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.y + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.y = bone.data.y;\n                    return;\n                case MixBlend.first:\n                    bone.y += (bone.data.y - bone.y) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.y = bone.data.y + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.y += (bone.data.y + y - bone.y) * alpha;\n                break;\n            case MixBlend.add:\n                bone.y += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleTimeline extends CurveTimeline2 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex, Property.scaleY + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleX = bone.data.scaleX;\n                    bone.scaleY = bone.data.scaleY;\n                    return;\n                case MixBlend.first:\n                    bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n                    bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n            }\n            return;\n        }\n        let x, y;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        x *= bone.data.scaleX;\n        y *= bone.data.scaleY;\n        if (alpha == 1) {\n            if (blend == MixBlend.add) {\n                bone.scaleX += x - bone.data.scaleX;\n                bone.scaleY += y - bone.data.scaleY;\n            }\n            else {\n                bone.scaleX = x;\n                bone.scaleY = y;\n            }\n        }\n        else {\n            let bx = 0, by = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = bone.data.scaleX;\n                        by = bone.data.scaleY;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = bone.scaleX;\n                        by = bone.scaleY;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = Math.abs(bone.data.scaleX) * MathUtils.signum(x);\n                        by = Math.abs(bone.data.scaleY) * MathUtils.signum(y);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = Math.abs(bone.scaleX) * MathUtils.signum(x);\n                        by = Math.abs(bone.scaleY) * MathUtils.signum(y);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleXTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleX = bone.data.scaleX;\n                    return;\n                case MixBlend.first:\n                    bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time) * bone.data.scaleX;\n        if (alpha == 1) {\n            if (blend == MixBlend.add)\n                bone.scaleX += x - bone.data.scaleX;\n            else\n                bone.scaleX = x;\n        }\n        else {\n            // Mixing out uses sign of setup or current pose, else use sign of key.\n            let bx = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = bone.data.scaleX;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = bone.scaleX;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = Math.abs(bone.data.scaleX) * MathUtils.signum(x);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = Math.abs(bone.scaleX) * MathUtils.signum(x);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleYTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleY + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleY = bone.data.scaleY;\n                    return;\n                case MixBlend.first:\n                    bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time) * bone.data.scaleY;\n        if (alpha == 1) {\n            if (blend == MixBlend.add)\n                bone.scaleY += y - bone.data.scaleY;\n            else\n                bone.scaleY = y;\n        }\n        else {\n            // Mixing out uses sign of setup or current pose, else use sign of key.\n            let by = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        by = bone.data.scaleY;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        by = bone.scaleY;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        by = Math.abs(bone.data.scaleY) * MathUtils.signum(y);\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        by = Math.abs(bone.scaleY) * MathUtils.signum(y);\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearTimeline extends CurveTimeline2 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearX + \"|\" + boneIndex, Property.shearY + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearX = bone.data.shearX;\n                    bone.shearY = bone.data.shearY;\n                    return;\n                case MixBlend.first:\n                    bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n                    bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n            }\n            return;\n        }\n        let x = 0, y = 0;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearX = bone.data.shearX + x * alpha;\n                bone.shearY = bone.data.shearY + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n                bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearX += x * alpha;\n                bone.shearY += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearXTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearX + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearX = bone.data.shearX;\n                    return;\n                case MixBlend.first:\n                    bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearX = bone.data.shearX + x * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearX += x * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearYTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearY + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearY = bone.data.shearY;\n                    return;\n                case MixBlend.first:\n                    bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearY = bone.data.shearY + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearY += y * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color}. */\nexport class RGBATimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.alpha + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 5 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n    setFrame(frame, time, r, g, b, a) {\n        frame *= 5 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*A*/] = a;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let color = slot.color;\n        if (time < frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.setFromColor(setup);\n                    return;\n                case MixBlend.first:\n                    color.add((setup.r - color.r) * alpha, (setup.g - color.g) * alpha, (setup.b - color.b) * alpha, (setup.a - color.a) * alpha);\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0;\n        let i = Timeline.search(frames, time, 5 /*ENTRIES*/);\n        let curveType = this.curves[i / 5 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                let t = (time - before) / (frames[i + 5 /*ENTRIES*/] - before);\n                r += (frames[i + 5 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 5 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 5 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                a += (frames[i + 5 /*ENTRIES*/ + 4 /*A*/] - a) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                a = this.getBezierValue(time, i, 4 /*A*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1)\n            color.set(r, g, b, a);\n        else {\n            if (blend == MixBlend.setup)\n                color.setFromColor(slot.data.color);\n            color.add((r - color.r) * alpha, (g - color.g) * alpha, (b - color.b) * alpha, (a - color.a) * alpha);\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color}. */\nexport class RGBTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 4 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n    setFrame(frame, time, r, g, b) {\n        frame <<= 2;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let color = slot.color;\n        if (time < frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.r = setup.r;\n                    color.g = setup.g;\n                    color.b = setup.b;\n                    return;\n                case MixBlend.first:\n                    color.r += (setup.r - color.r) * alpha;\n                    color.g += (setup.g - color.g) * alpha;\n                    color.b += (setup.b - color.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0;\n        let i = Timeline.search(frames, time, 4 /*ENTRIES*/);\n        let curveType = this.curves[i >> 2];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                let t = (time - before) / (frames[i + 4 /*ENTRIES*/] - before);\n                r += (frames[i + 4 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 4 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 4 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            color.r = r;\n            color.g = g;\n            color.b = b;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                let setup = slot.data.color;\n                color.r = setup.r;\n                color.g = setup.g;\n                color.b = setup.b;\n            }\n            color.r += (r - color.r) * alpha;\n            color.g += (g - color.g) * alpha;\n            color.b += (b - color.b) * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class AlphaTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, Property.alpha + \"|\" + slotIndex);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let color = slot.color;\n        if (time < this.frames[0]) { // Time is before first frame.\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.a = setup.a;\n                    return;\n                case MixBlend.first:\n                    color.a += (setup.a - color.a) * alpha;\n            }\n            return;\n        }\n        let a = this.getCurveValue(time);\n        if (alpha == 1)\n            color.a = a;\n        else {\n            if (blend == MixBlend.setup)\n                color.a = slot.data.color.a;\n            color.a += (a - color.a) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\nexport class RGBA2Timeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.alpha + \"|\" + slotIndex,\n            Property.rgb2 + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 8 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n    setFrame(frame, time, r, g, b, a, r2, g2, b2) {\n        frame <<= 3;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*A*/] = a;\n        this.frames[frame + 5 /*R2*/] = r2;\n        this.frames[frame + 6 /*G2*/] = g2;\n        this.frames[frame + 7 /*B2*/] = b2;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let light = slot.color, dark = slot.darkColor;\n        if (time < frames[0]) {\n            let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n            switch (blend) {\n                case MixBlend.setup:\n                    light.setFromColor(setupLight);\n                    dark.r = setupDark.r;\n                    dark.g = setupDark.g;\n                    dark.b = setupDark.b;\n                    return;\n                case MixBlend.first:\n                    light.add((setupLight.r - light.r) * alpha, (setupLight.g - light.g) * alpha, (setupLight.b - light.b) * alpha, (setupLight.a - light.a) * alpha);\n                    dark.r += (setupDark.r - dark.r) * alpha;\n                    dark.g += (setupDark.g - dark.g) * alpha;\n                    dark.b += (setupDark.b - dark.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0, r2 = 0, g2 = 0, b2 = 0;\n        let i = Timeline.search(frames, time, 8 /*ENTRIES*/);\n        let curveType = this.curves[i >> 3];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                r2 = frames[i + 5 /*R2*/];\n                g2 = frames[i + 6 /*G2*/];\n                b2 = frames[i + 7 /*B2*/];\n                let t = (time - before) / (frames[i + 8 /*ENTRIES*/] - before);\n                r += (frames[i + 8 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 8 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 8 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                a += (frames[i + 8 /*ENTRIES*/ + 4 /*A*/] - a) * t;\n                r2 += (frames[i + 8 /*ENTRIES*/ + 5 /*R2*/] - r2) * t;\n                g2 += (frames[i + 8 /*ENTRIES*/ + 6 /*G2*/] - g2) * t;\n                b2 += (frames[i + 8 /*ENTRIES*/ + 7 /*B2*/] - b2) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                r2 = frames[i + 5 /*R2*/];\n                g2 = frames[i + 6 /*G2*/];\n                b2 = frames[i + 7 /*B2*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                a = this.getBezierValue(time, i, 4 /*A*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                r2 = this.getBezierValue(time, i, 5 /*R2*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                g2 = this.getBezierValue(time, i, 6 /*G2*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n                b2 = this.getBezierValue(time, i, 7 /*B2*/, curveType + 18 /*BEZIER_SIZE*/ * 6 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            light.set(r, g, b, a);\n            dark.r = r2;\n            dark.g = g2;\n            dark.b = b2;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                light.setFromColor(slot.data.color);\n                let setupDark = slot.data.darkColor;\n                dark.r = setupDark.r;\n                dark.g = setupDark.g;\n                dark.b = setupDark.b;\n            }\n            light.add((r - light.r) * alpha, (g - light.g) * alpha, (b - light.b) * alpha, (a - light.a) * alpha);\n            dark.r += (r2 - dark.r) * alpha;\n            dark.g += (g2 - dark.g) * alpha;\n            dark.b += (b2 - dark.b) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\nexport class RGB2Timeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.rgb2 + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 7 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n    setFrame(frame, time, r, g, b, r2, g2, b2) {\n        frame *= 7 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*R2*/] = r2;\n        this.frames[frame + 5 /*G2*/] = g2;\n        this.frames[frame + 6 /*B2*/] = b2;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let light = slot.color, dark = slot.darkColor;\n        if (time < frames[0]) {\n            let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n            switch (blend) {\n                case MixBlend.setup:\n                    light.r = setupLight.r;\n                    light.g = setupLight.g;\n                    light.b = setupLight.b;\n                    dark.r = setupDark.r;\n                    dark.g = setupDark.g;\n                    dark.b = setupDark.b;\n                    return;\n                case MixBlend.first:\n                    light.r += (setupLight.r - light.r) * alpha;\n                    light.g += (setupLight.g - light.g) * alpha;\n                    light.b += (setupLight.b - light.b) * alpha;\n                    dark.r += (setupDark.r - dark.r) * alpha;\n                    dark.g += (setupDark.g - dark.g) * alpha;\n                    dark.b += (setupDark.b - dark.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0, r2 = 0, g2 = 0, b2 = 0;\n        let i = Timeline.search(frames, time, 7 /*ENTRIES*/);\n        let curveType = this.curves[i / 7 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                r2 = frames[i + 4 /*R2*/];\n                g2 = frames[i + 5 /*G2*/];\n                b2 = frames[i + 6 /*B2*/];\n                let t = (time - before) / (frames[i + 7 /*ENTRIES*/] - before);\n                r += (frames[i + 7 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 7 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 7 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                r2 += (frames[i + 7 /*ENTRIES*/ + 4 /*R2*/] - r2) * t;\n                g2 += (frames[i + 7 /*ENTRIES*/ + 5 /*G2*/] - g2) * t;\n                b2 += (frames[i + 7 /*ENTRIES*/ + 6 /*B2*/] - b2) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                r2 = frames[i + 4 /*R2*/];\n                g2 = frames[i + 5 /*G2*/];\n                b2 = frames[i + 6 /*B2*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                r2 = this.getBezierValue(time, i, 4 /*R2*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                g2 = this.getBezierValue(time, i, 5 /*G2*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                b2 = this.getBezierValue(time, i, 6 /*B2*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            light.r = r;\n            light.g = g;\n            light.b = b;\n            dark.r = r2;\n            dark.g = g2;\n            dark.b = b2;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n                light.r = setupLight.r;\n                light.g = setupLight.g;\n                light.b = setupLight.b;\n                dark.r = setupDark.r;\n                dark.g = setupDark.g;\n                dark.b = setupDark.b;\n            }\n            light.r += (r - light.r) * alpha;\n            light.g += (g - light.g) * alpha;\n            light.b += (b - light.b) * alpha;\n            dark.r += (r2 - dark.r) * alpha;\n            dark.g += (g2 - dark.g) * alpha;\n            dark.b += (b2 - dark.b) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#attachment}. */\nexport class AttachmentTimeline extends Timeline {\n    constructor(frameCount, slotIndex) {\n        super(frameCount, [\n            Property.attachment + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n        this.attachmentNames = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the attachment name for the specified key frame. */\n    setFrame(frame, time, attachmentName) {\n        this.frames[frame] = time;\n        this.attachmentNames[frame] = attachmentName;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        if (direction == MixDirection.mixOut) {\n            if (blend == MixBlend.setup)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName);\n            return;\n        }\n        if (time < this.frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName);\n            return;\n        }\n        this.setAttachment(skeleton, slot, this.attachmentNames[Timeline.search1(this.frames, time)]);\n    }\n    setAttachment(skeleton, slot, attachmentName) {\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(this.slotIndex, attachmentName));\n    }\n}\n/** Changes a slot's {@link Slot#deform} to deform a {@link VertexAttachment}. */\nexport class DeformTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex, attachment) {\n        super(frameCount, bezierCount, [\n            Property.deform + \"|\" + slotIndex + \"|\" + attachment.id\n        ]);\n        this.slotIndex = 0;\n        /** The attachment that will be deformed. */\n        this.attachment = null;\n        /** The vertices for each key frame. */\n        this.vertices = null;\n        this.slotIndex = slotIndex;\n        this.attachment = attachment;\n        this.vertices = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the vertices for the specified key frame.\n     * @param vertices Vertex positions for an unweighted VertexAttachment, or deform offsets if it has weights. */\n    setFrame(frame, time, vertices) {\n        this.frames[frame] = time;\n        this.vertices[frame] = vertices;\n    }\n    /** @param value1 Ignored (0 is used for a deform timeline).\n     * @param value2 Ignored (1 is used for a deform timeline). */\n    setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n        let curves = this.curves;\n        let i = this.getFrameCount() + bezier * 18 /*BEZIER_SIZE*/;\n        if (value == 0)\n            curves[frame] = 2 /*BEZIER*/ + i;\n        let tmpx = (time1 - cx1 * 2 + cx2) * 0.03, tmpy = cy2 * 0.03 - cy1 * 0.06;\n        let dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006, dddy = (cy1 - cy2 + 0.33333333) * 0.018;\n        let ddx = tmpx * 2 + dddx, ddy = tmpy * 2 + dddy;\n        let dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667, dy = cy1 * 0.3 + tmpy + dddy * 0.16666667;\n        let x = time1 + dx, y = dy;\n        for (let n = i + 18 /*BEZIER_SIZE*/; i < n; i += 2) {\n            curves[i] = x;\n            curves[i + 1] = y;\n            dx += ddx;\n            dy += ddy;\n            ddx += dddx;\n            ddy += dddy;\n            x += dx;\n            y += dy;\n        }\n    }\n    getCurvePercent(time, frame) {\n        let curves = this.curves;\n        let i = curves[frame];\n        switch (i) {\n            case 0 /*LINEAR*/:\n                let x = this.frames[frame];\n                return (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n            case 1 /*STEPPED*/:\n                return 0;\n        }\n        i -= 2 /*BEZIER*/;\n        if (curves[i] > time) {\n            let x = this.frames[frame];\n            return curves[i + 1] * (time - x) / (curves[i] - x);\n        }\n        let n = i + 18 /*BEZIER_SIZE*/;\n        for (i += 2; i < n; i += 2) {\n            if (curves[i] >= time) {\n                let x = curves[i - 2], y = curves[i - 1];\n                return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n            }\n        }\n        let x = curves[n - 2], y = curves[n - 1];\n        return y + (1 - y) * (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let slotAttachment = slot.getAttachment();\n        if (!(slotAttachment instanceof VertexAttachment) || slotAttachment.deformAttachment != this.attachment)\n            return;\n        let deform = slot.deform;\n        if (deform.length == 0)\n            blend = MixBlend.setup;\n        let vertices = this.vertices;\n        let vertexCount = vertices[0].length;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            let vertexAttachment = slotAttachment;\n            switch (blend) {\n                case MixBlend.setup:\n                    deform.length = 0;\n                    return;\n                case MixBlend.first:\n                    if (alpha == 1) {\n                        deform.length = 0;\n                        return;\n                    }\n                    deform.length = vertexCount;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (var i = 0; i < vertexCount; i++)\n                            deform[i] += (setupVertices[i] - deform[i]) * alpha;\n                    }\n                    else {\n                        // Weighted deform offsets.\n                        alpha = 1 - alpha;\n                        for (var i = 0; i < vertexCount; i++)\n                            deform[i] *= alpha;\n                    }\n            }\n            return;\n        }\n        deform.length = vertexCount;\n        if (time >= frames[frames.length - 1]) { // Time is after last frame.\n            let lastVertices = vertices[frames.length - 1];\n            if (alpha == 1) {\n                if (blend == MixBlend.add) {\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += lastVertices[i] - setupVertices[i];\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += lastVertices[i];\n                    }\n                }\n                else\n                    Utils.arrayCopy(lastVertices, 0, deform, 0, vertexCount);\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup: {\n                        let vertexAttachment = slotAttachment;\n                        if (!vertexAttachment.bones) {\n                            // Unweighted vertex positions, with alpha.\n                            let setupVertices = vertexAttachment.vertices;\n                            for (let i = 0; i < vertexCount; i++) {\n                                let setup = setupVertices[i];\n                                deform[i] = setup + (lastVertices[i] - setup) * alpha;\n                            }\n                        }\n                        else {\n                            // Weighted deform offsets, with alpha.\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] = lastVertices[i] * alpha;\n                        }\n                        break;\n                    }\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += (lastVertices[i] - deform[i]) * alpha;\n                        break;\n                    case MixBlend.add:\n                        let vertexAttachment = slotAttachment;\n                        if (!vertexAttachment.bones) {\n                            // Unweighted vertex positions, with alpha.\n                            let setupVertices = vertexAttachment.vertices;\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] += (lastVertices[i] - setupVertices[i]) * alpha;\n                        }\n                        else {\n                            // Weighted deform offsets, with alpha.\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] += lastVertices[i] * alpha;\n                        }\n                }\n            }\n            return;\n        }\n        // Interpolate between the previous frame and the current frame.\n        let frame = Timeline.search1(frames, time);\n        let percent = this.getCurvePercent(time, frame);\n        let prevVertices = vertices[frame];\n        let nextVertices = vertices[frame + 1];\n        if (alpha == 1) {\n            if (blend == MixBlend.add) {\n                let vertexAttachment = slotAttachment;\n                if (!vertexAttachment.bones) {\n                    // Unweighted vertex positions, with alpha.\n                    let setupVertices = vertexAttachment.vertices;\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += prev + (nextVertices[i] - prev) * percent - setupVertices[i];\n                    }\n                }\n                else {\n                    // Weighted deform offsets, with alpha.\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += prev + (nextVertices[i] - prev) * percent;\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < vertexCount; i++) {\n                    let prev = prevVertices[i];\n                    deform[i] = prev + (nextVertices[i] - prev) * percent;\n                }\n            }\n        }\n        else {\n            switch (blend) {\n                case MixBlend.setup: {\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i], setup = setupVertices[i];\n                            deform[i] = setup + (prev + (nextVertices[i] - prev) * percent - setup) * alpha;\n                        }\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] = (prev + (nextVertices[i] - prev) * percent) * alpha;\n                        }\n                    }\n                    break;\n                }\n                case MixBlend.first:\n                case MixBlend.replace:\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += (prev + (nextVertices[i] - prev) * percent - deform[i]) * alpha;\n                    }\n                    break;\n                case MixBlend.add:\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] += (prev + (nextVertices[i] - prev) * percent - setupVertices[i]) * alpha;\n                        }\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] += (prev + (nextVertices[i] - prev) * percent) * alpha;\n                        }\n                    }\n            }\n        }\n    }\n}\n/** Fires an {@link Event} when specific animation times are reached. */\nexport class EventTimeline extends Timeline {\n    constructor(frameCount) {\n        super(frameCount, EventTimeline.propertyIds);\n        /** The event for each key frame. */\n        this.events = null;\n        this.events = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the event for the specified key frame. */\n    setFrame(frame, event) {\n        this.frames[frame] = event.time;\n        this.events[frame] = event;\n    }\n    /** Fires events for frames > `lastTime` and <= `time`. */\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        if (!firedEvents)\n            return;\n        let frames = this.frames;\n        let frameCount = this.frames.length;\n        if (lastTime > time) { // Fire events after last time for looped animations.\n            this.apply(skeleton, lastTime, Number.MAX_VALUE, firedEvents, alpha, blend, direction);\n            lastTime = -1;\n        }\n        else if (lastTime >= frames[frameCount - 1]) // Last time is after last frame.\n            return;\n        if (time < frames[0])\n            return; // Time is before first frame.\n        let i = 0;\n        if (lastTime < frames[0])\n            i = 0;\n        else {\n            i = Timeline.search1(frames, lastTime) + 1;\n            let frameTime = frames[i];\n            while (i > 0) { // Fire multiple events with the same frame.\n                if (frames[i - 1] != frameTime)\n                    break;\n                i--;\n            }\n        }\n        for (; i < frameCount && time >= frames[i]; i++)\n            firedEvents.push(this.events[i]);\n    }\n}\nEventTimeline.propertyIds = [\"\" + Property.event];\n/** Changes a skeleton's {@link Skeleton#drawOrder}. */\nexport class DrawOrderTimeline extends Timeline {\n    constructor(frameCount) {\n        super(frameCount, DrawOrderTimeline.propertyIds);\n        /** The draw order for each key frame. See {@link #setFrame(int, float, int[])}. */\n        this.drawOrders = null;\n        this.drawOrders = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the draw order for the specified key frame.\n     * @param drawOrder For each slot in {@link Skeleton#slots}, the index of the new draw order. May be null to use setup pose\n     *           draw order. */\n    setFrame(frame, time, drawOrder) {\n        this.frames[frame] = time;\n        this.drawOrders[frame] = drawOrder;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        if (direction == MixDirection.mixOut) {\n            if (blend == MixBlend.setup)\n                Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n            return;\n        }\n        if (time < this.frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n            return;\n        }\n        let drawOrderToSetupIndex = this.drawOrders[Timeline.search1(this.frames, time)];\n        if (!drawOrderToSetupIndex)\n            Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n        else {\n            let drawOrder = skeleton.drawOrder;\n            let slots = skeleton.slots;\n            for (let i = 0, n = drawOrderToSetupIndex.length; i < n; i++)\n                drawOrder[i] = slots[drawOrderToSetupIndex[i]];\n        }\n    }\n}\nDrawOrderTimeline.propertyIds = [\"\" + Property.drawOrder];\n/** Changes an IK constraint's {@link IkConstraint#mix}, {@link IkConstraint#softness},\n * {@link IkConstraint#bendDirection}, {@link IkConstraint#stretch}, and {@link IkConstraint#compress}. */\nexport class IkConstraintTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, ikConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.ikConstraint + \"|\" + ikConstraintIndex\n        ]);\n        /** The index of the IK constraint slot in {@link Skeleton#ikConstraints} that will be changed. */\n        this.ikConstraintIndex = 0;\n        this.ikConstraintIndex = ikConstraintIndex;\n    }\n    getFrameEntries() {\n        return 6 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, mix, softness, bend direction, compress, and stretch for the specified key frame. */\n    setFrame(frame, time, mix, softness, bendDirection, compress, stretch) {\n        frame *= 6 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*MIX*/] = mix;\n        this.frames[frame + 2 /*SOFTNESS*/] = softness;\n        this.frames[frame + 3 /*BEND_DIRECTION*/] = bendDirection;\n        this.frames[frame + 4 /*COMPRESS*/] = compress ? 1 : 0;\n        this.frames[frame + 5 /*STRETCH*/] = stretch ? 1 : 0;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.ikConstraints[this.ikConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mix = constraint.data.mix;\n                    constraint.softness = constraint.data.softness;\n                    constraint.bendDirection = constraint.data.bendDirection;\n                    constraint.compress = constraint.data.compress;\n                    constraint.stretch = constraint.data.stretch;\n                    return;\n                case MixBlend.first:\n                    constraint.mix += (constraint.data.mix - constraint.mix) * alpha;\n                    constraint.softness += (constraint.data.softness - constraint.softness) * alpha;\n                    constraint.bendDirection = constraint.data.bendDirection;\n                    constraint.compress = constraint.data.compress;\n                    constraint.stretch = constraint.data.stretch;\n            }\n            return;\n        }\n        let mix = 0, softness = 0;\n        let i = Timeline.search(frames, time, 6 /*ENTRIES*/);\n        let curveType = this.curves[i / 6 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                mix = frames[i + 1 /*MIX*/];\n                softness = frames[i + 2 /*SOFTNESS*/];\n                let t = (time - before) / (frames[i + 6 /*ENTRIES*/] - before);\n                mix += (frames[i + 6 /*ENTRIES*/ + 1 /*MIX*/] - mix) * t;\n                softness += (frames[i + 6 /*ENTRIES*/ + 2 /*SOFTNESS*/] - softness) * t;\n                break;\n            case 1 /*STEPPED*/:\n                mix = frames[i + 1 /*MIX*/];\n                softness = frames[i + 2 /*SOFTNESS*/];\n                break;\n            default:\n                mix = this.getBezierValue(time, i, 1 /*MIX*/, curveType - 2 /*BEZIER*/);\n                softness = this.getBezierValue(time, i, 2 /*SOFTNESS*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            constraint.mix = constraint.data.mix + (mix - constraint.data.mix) * alpha;\n            constraint.softness = constraint.data.softness + (softness - constraint.data.softness) * alpha;\n            if (direction == MixDirection.mixOut) {\n                constraint.bendDirection = constraint.data.bendDirection;\n                constraint.compress = constraint.data.compress;\n                constraint.stretch = constraint.data.stretch;\n            }\n            else {\n                constraint.bendDirection = frames[i + 3 /*BEND_DIRECTION*/];\n                constraint.compress = frames[i + 4 /*COMPRESS*/] != 0;\n                constraint.stretch = frames[i + 5 /*STRETCH*/] != 0;\n            }\n        }\n        else {\n            constraint.mix += (mix - constraint.mix) * alpha;\n            constraint.softness += (softness - constraint.softness) * alpha;\n            if (direction == MixDirection.mixIn) {\n                constraint.bendDirection = frames[i + 3 /*BEND_DIRECTION*/];\n                constraint.compress = frames[i + 4 /*COMPRESS*/] != 0;\n                constraint.stretch = frames[i + 5 /*STRETCH*/] != 0;\n            }\n        }\n    }\n}\n/** Changes a transform constraint's {@link TransformConstraint#rotateMix}, {@link TransformConstraint#translateMix},\n * {@link TransformConstraint#scaleMix}, and {@link TransformConstraint#shearMix}. */\nexport class TransformConstraintTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, transformConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.transformConstraint + \"|\" + transformConstraintIndex\n        ]);\n        /** The index of the transform constraint slot in {@link Skeleton#transformConstraints} that will be changed. */\n        this.transformConstraintIndex = 0;\n        this.transformConstraintIndex = transformConstraintIndex;\n    }\n    getFrameEntries() {\n        return 7 /*ENTRIES*/;\n    }\n    /** The time in seconds, rotate mix, translate mix, scale mix, and shear mix for the specified key frame. */\n    setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY) {\n        let frames = this.frames;\n        frame *= 7 /*ENTRIES*/;\n        frames[frame] = time;\n        frames[frame + 1 /*ROTATE*/] = mixRotate;\n        frames[frame + 2 /*X*/] = mixX;\n        frames[frame + 3 /*Y*/] = mixY;\n        frames[frame + 4 /*SCALEX*/] = mixScaleX;\n        frames[frame + 5 /*SCALEY*/] = mixScaleY;\n        frames[frame + 6 /*SHEARY*/] = mixShearY;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.transformConstraints[this.transformConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            let data = constraint.data;\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mixRotate = data.mixRotate;\n                    constraint.mixX = data.mixX;\n                    constraint.mixY = data.mixY;\n                    constraint.mixScaleX = data.mixScaleX;\n                    constraint.mixScaleY = data.mixScaleY;\n                    constraint.mixShearY = data.mixShearY;\n                    return;\n                case MixBlend.first:\n                    constraint.mixRotate += (data.mixRotate - constraint.mixRotate) * alpha;\n                    constraint.mixX += (data.mixX - constraint.mixX) * alpha;\n                    constraint.mixY += (data.mixY - constraint.mixY) * alpha;\n                    constraint.mixScaleX += (data.mixScaleX - constraint.mixScaleX) * alpha;\n                    constraint.mixScaleY += (data.mixScaleY - constraint.mixScaleY) * alpha;\n                    constraint.mixShearY += (data.mixShearY - constraint.mixShearY) * alpha;\n            }\n            return;\n        }\n        let rotate, x, y, scaleX, scaleY, shearY;\n        let i = Timeline.search(frames, time, 7 /*ENTRIES*/);\n        let curveType = this.curves[i / 7 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                scaleX = frames[i + 4 /*SCALEX*/];\n                scaleY = frames[i + 5 /*SCALEY*/];\n                shearY = frames[i + 6 /*SHEARY*/];\n                let t = (time - before) / (frames[i + 7 /*ENTRIES*/] - before);\n                rotate += (frames[i + 7 /*ENTRIES*/ + 1 /*ROTATE*/] - rotate) * t;\n                x += (frames[i + 7 /*ENTRIES*/ + 2 /*X*/] - x) * t;\n                y += (frames[i + 7 /*ENTRIES*/ + 3 /*Y*/] - y) * t;\n                scaleX += (frames[i + 7 /*ENTRIES*/ + 4 /*SCALEX*/] - scaleX) * t;\n                scaleY += (frames[i + 7 /*ENTRIES*/ + 5 /*SCALEY*/] - scaleY) * t;\n                shearY += (frames[i + 7 /*ENTRIES*/ + 6 /*SHEARY*/] - shearY) * t;\n                break;\n            case 1 /*STEPPED*/:\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                scaleX = frames[i + 4 /*SCALEX*/];\n                scaleY = frames[i + 5 /*SCALEY*/];\n                shearY = frames[i + 6 /*SHEARY*/];\n                break;\n            default:\n                rotate = this.getBezierValue(time, i, 1 /*ROTATE*/, curveType - 2 /*BEZIER*/);\n                x = this.getBezierValue(time, i, 2 /*X*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 3 /*Y*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                scaleX = this.getBezierValue(time, i, 4 /*SCALEX*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                scaleY = this.getBezierValue(time, i, 5 /*SCALEY*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                shearY = this.getBezierValue(time, i, 6 /*SHEARY*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n            constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n            constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n            constraint.mixScaleX = data.mixScaleX + (scaleX - data.mixScaleX) * alpha;\n            constraint.mixScaleY = data.mixScaleY + (scaleY - data.mixScaleY) * alpha;\n            constraint.mixShearY = data.mixShearY + (shearY - data.mixShearY) * alpha;\n        }\n        else {\n            constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n            constraint.mixX += (x - constraint.mixX) * alpha;\n            constraint.mixY += (y - constraint.mixY) * alpha;\n            constraint.mixScaleX += (scaleX - constraint.mixScaleX) * alpha;\n            constraint.mixScaleY += (scaleY - constraint.mixScaleY) * alpha;\n            constraint.mixShearY += (shearY - constraint.mixShearY) * alpha;\n        }\n    }\n}\n/** Changes a path constraint's {@link PathConstraint#position}. */\nexport class PathConstraintPositionTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, Property.pathConstraintPosition + \"|\" + pathConstraintIndex);\n        /** The index of the path constraint slot in {@link Skeleton#pathConstraints} that will be changed. */\n        this.pathConstraintIndex = 0;\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.position = constraint.data.position;\n                    return;\n                case MixBlend.first:\n                    constraint.position += (constraint.data.position - constraint.position) * alpha;\n            }\n            return;\n        }\n        let position = this.getCurveValue(time);\n        if (blend == MixBlend.setup)\n            constraint.position = constraint.data.position + (position - constraint.data.position) * alpha;\n        else\n            constraint.position += (position - constraint.position) * alpha;\n    }\n}\n/** Changes a path constraint's {@link PathConstraint#spacing}. */\nexport class PathConstraintSpacingTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, Property.pathConstraintSpacing + \"|\" + pathConstraintIndex);\n        /** The index of the path constraint slot in {@link Skeleton#getPathConstraints()} that will be changed. */\n        this.pathConstraintIndex = 0;\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.spacing = constraint.data.spacing;\n                    return;\n                case MixBlend.first:\n                    constraint.spacing += (constraint.data.spacing - constraint.spacing) * alpha;\n            }\n            return;\n        }\n        let spacing = this.getCurveValue(time);\n        if (blend == MixBlend.setup)\n            constraint.spacing = constraint.data.spacing + (spacing - constraint.data.spacing) * alpha;\n        else\n            constraint.spacing += (spacing - constraint.spacing) * alpha;\n    }\n}\n/** Changes a transform constraint's {@link PathConstraint#getMixRotate()}, {@link PathConstraint#getMixX()}, and\n * {@link PathConstraint#getMixY()}. */\nexport class PathConstraintMixTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.pathConstraintMix + \"|\" + pathConstraintIndex\n        ]);\n        /** The index of the path constraint slot in {@link Skeleton#getPathConstraints()} that will be changed. */\n        this.pathConstraintIndex = 0;\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    getFrameEntries() {\n        return 4 /*ENTRIES*/;\n    }\n    setFrame(frame, time, mixRotate, mixX, mixY) {\n        let frames = this.frames;\n        frame <<= 2;\n        frames[frame] = time;\n        frames[frame + 1 /*ROTATE*/] = mixRotate;\n        frames[frame + 2 /*X*/] = mixX;\n        frames[frame + 3 /*Y*/] = mixY;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mixRotate = constraint.data.mixRotate;\n                    constraint.mixX = constraint.data.mixX;\n                    constraint.mixY = constraint.data.mixY;\n                    return;\n                case MixBlend.first:\n                    constraint.mixRotate += (constraint.data.mixRotate - constraint.mixRotate) * alpha;\n                    constraint.mixX += (constraint.data.mixX - constraint.mixX) * alpha;\n                    constraint.mixY += (constraint.data.mixY - constraint.mixY) * alpha;\n            }\n            return;\n        }\n        let rotate, x, y;\n        let i = Timeline.search(frames, time, 4 /*ENTRIES*/);\n        let curveType = this.curves[i >> 2];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                let t = (time - before) / (frames[i + 4 /*ENTRIES*/] - before);\n                rotate += (frames[i + 4 /*ENTRIES*/ + 1 /*ROTATE*/] - rotate) * t;\n                x += (frames[i + 4 /*ENTRIES*/ + 2 /*X*/] - x) * t;\n                y += (frames[i + 4 /*ENTRIES*/ + 3 /*Y*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                break;\n            default:\n                rotate = this.getBezierValue(time, i, 1 /*ROTATE*/, curveType - 2 /*BEZIER*/);\n                x = this.getBezierValue(time, i, 2 /*X*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 3 /*Y*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n            constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n            constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n        }\n        else {\n            constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n            constraint.mixX += (x - constraint.mixX) * alpha;\n            constraint.mixY += (y - constraint.mixY) * alpha;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, MixBlend, AttachmentTimeline, MixDirection, RotateTimeline, DrawOrderTimeline, Timeline, EventTimeline } from \"./Animation\";\nimport { StringSet, Pool, Utils, MathUtils } from \"./Utils\";\n/** Applies animations over time, queues animations for later playback, mixes (crossfading) between animations, and applies\n * multiple animations on top of each other (layering).\n *\n * See [Applying Animations](http://esotericsoftware.com/spine-applying-animations/) in the Spine Runtimes Guide. */\nexport class AnimationState {\n    constructor(data) {\n        /** The AnimationStateData to look up mix durations. */\n        this.data = null;\n        /** The list of tracks that currently have animations, which may contain null entries. */\n        this.tracks = new Array();\n        /** Multiplier for the delta time when the animation state is updated, causing time for all animations and mixes to play slower\n         * or faster. Defaults to 1.\n         *\n         * See TrackEntry {@link TrackEntry#timeScale} for affecting a single animation. */\n        this.timeScale = 1;\n        this.unkeyedState = 0;\n        this.events = new Array();\n        this.listeners = new Array();\n        this.queue = new EventQueue(this);\n        this.propertyIDs = new StringSet();\n        this.animationsChanged = false;\n        this.trackEntryPool = new Pool(() => new TrackEntry());\n        this.data = data;\n    }\n    static emptyAnimation() {\n        if (!_emptyAnimation)\n            _emptyAnimation = new Animation(\"<empty>\", [], 0);\n        return _emptyAnimation;\n    }\n    /** Increments each track entry {@link TrackEntry#trackTime()}, setting queued animations as current if needed. */\n    update(delta) {\n        delta *= this.timeScale;\n        let tracks = this.tracks;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let current = tracks[i];\n            if (!current)\n                continue;\n            current.animationLast = current.nextAnimationLast;\n            current.trackLast = current.nextTrackLast;\n            let currentDelta = delta * current.timeScale;\n            if (current.delay > 0) {\n                current.delay -= currentDelta;\n                if (current.delay > 0)\n                    continue;\n                currentDelta = -current.delay;\n                current.delay = 0;\n            }\n            let next = current.next;\n            if (next) {\n                // When the next entry's delay is passed, change to the next entry, preserving leftover time.\n                let nextTime = current.trackLast - next.delay;\n                if (nextTime >= 0) {\n                    next.delay = 0;\n                    next.trackTime += current.timeScale == 0 ? 0 : (nextTime / current.timeScale + delta) * next.timeScale;\n                    current.trackTime += currentDelta;\n                    this.setCurrent(i, next, true);\n                    while (next.mixingFrom) {\n                        next.mixTime += delta;\n                        next = next.mixingFrom;\n                    }\n                    continue;\n                }\n            }\n            else if (current.trackLast >= current.trackEnd && !current.mixingFrom) {\n                tracks[i] = null;\n                this.queue.end(current);\n                this.clearNext(current);\n                continue;\n            }\n            if (current.mixingFrom && this.updateMixingFrom(current, delta)) {\n                // End mixing from entries once all have completed.\n                let from = current.mixingFrom;\n                current.mixingFrom = null;\n                if (from)\n                    from.mixingTo = null;\n                while (from) {\n                    this.queue.end(from);\n                    from = from.mixingFrom;\n                }\n            }\n            current.trackTime += currentDelta;\n        }\n        this.queue.drain();\n    }\n    /** Returns true when all mixing from entries are complete. */\n    updateMixingFrom(to, delta) {\n        let from = to.mixingFrom;\n        if (!from)\n            return true;\n        let finished = this.updateMixingFrom(from, delta);\n        from.animationLast = from.nextAnimationLast;\n        from.trackLast = from.nextTrackLast;\n        // Require mixTime > 0 to ensure the mixing from entry was applied at least once.\n        if (to.mixTime > 0 && to.mixTime >= to.mixDuration) {\n            // Require totalAlpha == 0 to ensure mixing is complete, unless mixDuration == 0 (the transition is a single frame).\n            if (from.totalAlpha == 0 || to.mixDuration == 0) {\n                to.mixingFrom = from.mixingFrom;\n                if (from.mixingFrom)\n                    from.mixingFrom.mixingTo = to;\n                to.interruptAlpha = from.interruptAlpha;\n                this.queue.end(from);\n            }\n            return finished;\n        }\n        from.trackTime += delta * from.timeScale;\n        to.mixTime += delta;\n        return false;\n    }\n    /** Poses the skeleton using the track entry animations. There are no side effects other than invoking listeners, so the\n     * animation state can be applied to multiple skeletons to pose them identically.\n     * @returns True if any animations were applied. */\n    apply(skeleton) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        if (this.animationsChanged)\n            this._animationsChanged();\n        let events = this.events;\n        let tracks = this.tracks;\n        let applied = false;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let current = tracks[i];\n            if (!current || current.delay > 0)\n                continue;\n            applied = true;\n            let blend = i == 0 ? MixBlend.first : current.mixBlend;\n            // Apply mixing from entries first.\n            let mix = current.alpha;\n            if (current.mixingFrom)\n                mix *= this.applyMixingFrom(current, skeleton, blend);\n            else if (current.trackTime >= current.trackEnd && !current.next)\n                mix = 0;\n            // Apply current entry.\n            let animationLast = current.animationLast, animationTime = current.getAnimationTime(), applyTime = animationTime;\n            let applyEvents = events;\n            if (current.reverse) {\n                applyTime = current.animation.duration - applyTime;\n                applyEvents = null;\n            }\n            let timelines = current.animation.timelines;\n            let timelineCount = timelines.length;\n            if ((i == 0 && mix == 1) || blend == MixBlend.add) {\n                for (let ii = 0; ii < timelineCount; ii++) {\n                    // Fixes issue #302 on IOS9 where mix, blend sometimes became undefined and caused assets\n                    // to sometimes stop rendering when using color correction, as their RGBA values become NaN.\n                    // (https://github.com/pixijs/pixi-spine/issues/302)\n                    Utils.webkit602BugfixHelper(mix, blend);\n                    var timeline = timelines[ii];\n                    if (timeline instanceof AttachmentTimeline)\n                        this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, true);\n                    else\n                        timeline.apply(skeleton, animationLast, applyTime, applyEvents, mix, blend, MixDirection.mixIn);\n                }\n            }\n            else {\n                let timelineMode = current.timelineMode;\n                let firstFrame = current.timelinesRotation.length != timelineCount << 1;\n                if (firstFrame)\n                    current.timelinesRotation.length = timelineCount << 1;\n                for (let ii = 0; ii < timelineCount; ii++) {\n                    let timeline = timelines[ii];\n                    let timelineBlend = timelineMode[ii] == SUBSEQUENT ? blend : MixBlend.setup;\n                    if (timeline instanceof RotateTimeline) {\n                        this.applyRotateTimeline(timeline, skeleton, applyTime, mix, timelineBlend, current.timelinesRotation, ii << 1, firstFrame);\n                    }\n                    else if (timeline instanceof AttachmentTimeline) {\n                        this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, true);\n                    }\n                    else {\n                        // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n                        Utils.webkit602BugfixHelper(mix, blend);\n                        timeline.apply(skeleton, animationLast, applyTime, applyEvents, mix, timelineBlend, MixDirection.mixIn);\n                    }\n                }\n            }\n            this.queueEvents(current, animationTime);\n            events.length = 0;\n            current.nextAnimationLast = animationTime;\n            current.nextTrackLast = current.trackTime;\n        }\n        // Set slots attachments to the setup pose, if needed. This occurs if an animation that is mixing out sets attachments so\n        // subsequent timelines see any deform, but the subsequent timelines don't set an attachment (eg they are also mixing out or\n        // the time is before the first key).\n        var setupState = this.unkeyedState + SETUP;\n        var slots = skeleton.slots;\n        for (var i = 0, n = skeleton.slots.length; i < n; i++) {\n            var slot = slots[i];\n            if (slot.attachmentState == setupState) {\n                var attachmentName = slot.data.attachmentName;\n                slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n            }\n        }\n        this.unkeyedState += 2; // Increasing after each use avoids the need to reset attachmentState for every slot.\n        this.queue.drain();\n        return applied;\n    }\n    applyMixingFrom(to, skeleton, blend) {\n        let from = to.mixingFrom;\n        if (from.mixingFrom)\n            this.applyMixingFrom(from, skeleton, blend);\n        let mix = 0;\n        if (to.mixDuration == 0) { // Single frame mix to undo mixingFrom changes.\n            mix = 1;\n            if (blend == MixBlend.first)\n                blend = MixBlend.setup;\n        }\n        else {\n            mix = to.mixTime / to.mixDuration;\n            if (mix > 1)\n                mix = 1;\n            if (blend != MixBlend.first)\n                blend = from.mixBlend;\n        }\n        let attachments = mix < from.attachmentThreshold, drawOrder = mix < from.drawOrderThreshold;\n        let timelines = from.animation.timelines;\n        let timelineCount = timelines.length;\n        let alphaHold = from.alpha * to.interruptAlpha, alphaMix = alphaHold * (1 - mix);\n        let animationLast = from.animationLast, animationTime = from.getAnimationTime(), applyTime = animationTime;\n        let events = null;\n        if (from.reverse)\n            applyTime = from.animation.duration - applyTime;\n        else if (mix < from.eventThreshold)\n            events = this.events;\n        if (blend == MixBlend.add) {\n            for (let i = 0; i < timelineCount; i++)\n                timelines[i].apply(skeleton, animationLast, applyTime, events, alphaMix, blend, MixDirection.mixOut);\n        }\n        else {\n            let timelineMode = from.timelineMode;\n            let timelineHoldMix = from.timelineHoldMix;\n            let firstFrame = from.timelinesRotation.length != timelineCount << 1;\n            if (firstFrame)\n                from.timelinesRotation.length = timelineCount << 1;\n            from.totalAlpha = 0;\n            for (let i = 0; i < timelineCount; i++) {\n                let timeline = timelines[i];\n                let direction = MixDirection.mixOut;\n                let timelineBlend;\n                let alpha = 0;\n                switch (timelineMode[i]) {\n                    case SUBSEQUENT:\n                        if (!drawOrder && timeline instanceof DrawOrderTimeline)\n                            continue;\n                        timelineBlend = blend;\n                        alpha = alphaMix;\n                        break;\n                    case FIRST:\n                        timelineBlend = MixBlend.setup;\n                        alpha = alphaMix;\n                        break;\n                    case HOLD_SUBSEQUENT:\n                        timelineBlend = blend;\n                        alpha = alphaHold;\n                        break;\n                    case HOLD_FIRST:\n                        timelineBlend = MixBlend.setup;\n                        alpha = alphaHold;\n                        break;\n                    default:\n                        timelineBlend = MixBlend.setup;\n                        let holdMix = timelineHoldMix[i];\n                        alpha = alphaHold * Math.max(0, 1 - holdMix.mixTime / holdMix.mixDuration);\n                        break;\n                }\n                from.totalAlpha += alpha;\n                if (timeline instanceof RotateTimeline)\n                    this.applyRotateTimeline(timeline, skeleton, applyTime, alpha, timelineBlend, from.timelinesRotation, i << 1, firstFrame);\n                else if (timeline instanceof AttachmentTimeline)\n                    this.applyAttachmentTimeline(timeline, skeleton, applyTime, timelineBlend, attachments);\n                else {\n                    // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n                    Utils.webkit602BugfixHelper(alpha, blend);\n                    if (drawOrder && timeline instanceof DrawOrderTimeline && timelineBlend == MixBlend.setup)\n                        direction = MixDirection.mixIn;\n                    timeline.apply(skeleton, animationLast, applyTime, events, alpha, timelineBlend, direction);\n                }\n            }\n        }\n        if (to.mixDuration > 0)\n            this.queueEvents(from, animationTime);\n        this.events.length = 0;\n        from.nextAnimationLast = animationTime;\n        from.nextTrackLast = from.trackTime;\n        return mix;\n    }\n    applyAttachmentTimeline(timeline, skeleton, time, blend, attachments) {\n        var slot = skeleton.slots[timeline.slotIndex];\n        if (!slot.bone.active)\n            return;\n        if (time < timeline.frames[0]) { // Time is before first frame.\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName, attachments);\n        }\n        else\n            this.setAttachment(skeleton, slot, timeline.attachmentNames[Timeline.search1(timeline.frames, time)], attachments);\n        // If an attachment wasn't set (ie before the first frame or attachments is false), set the setup attachment later.\n        if (slot.attachmentState <= this.unkeyedState)\n            slot.attachmentState = this.unkeyedState + SETUP;\n    }\n    setAttachment(skeleton, slot, attachmentName, attachments) {\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n        if (attachments)\n            slot.attachmentState = this.unkeyedState + CURRENT;\n    }\n    applyRotateTimeline(timeline, skeleton, time, alpha, blend, timelinesRotation, i, firstFrame) {\n        if (firstFrame)\n            timelinesRotation[i] = 0;\n        if (alpha == 1) {\n            timeline.apply(skeleton, 0, time, null, 1, blend, MixDirection.mixIn);\n            return;\n        }\n        let bone = skeleton.bones[timeline.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = timeline.frames;\n        let r1 = 0, r2 = 0;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.rotation = bone.data.rotation;\n                default:\n                    return;\n                case MixBlend.first:\n                    r1 = bone.rotation;\n                    r2 = bone.data.rotation;\n            }\n        }\n        else {\n            r1 = blend == MixBlend.setup ? bone.data.rotation : bone.rotation;\n            r2 = bone.data.rotation + timeline.getCurveValue(time);\n        }\n        // Mix between rotations using the direction of the shortest route on the first frame while detecting crosses.\n        let total = 0, diff = r2 - r1;\n        diff -= (16384 - ((16384.499999999996 - diff / 360) | 0)) * 360;\n        if (diff == 0) {\n            total = timelinesRotation[i];\n        }\n        else {\n            let lastTotal = 0, lastDiff = 0;\n            if (firstFrame) {\n                lastTotal = 0;\n                lastDiff = diff;\n            }\n            else {\n                lastTotal = timelinesRotation[i]; // Angle and direction of mix, including loops.\n                lastDiff = timelinesRotation[i + 1]; // Difference between bones.\n            }\n            let current = diff > 0, dir = lastTotal >= 0;\n            // Detect cross at 0 (not 180).\n            if (MathUtils.signum(lastDiff) != MathUtils.signum(diff) && Math.abs(lastDiff) <= 90) {\n                // A cross after a 360 rotation is a loop.\n                if (Math.abs(lastTotal) > 180)\n                    lastTotal += 360 * MathUtils.signum(lastTotal);\n                dir = current;\n            }\n            total = diff + lastTotal - lastTotal % 360; // Store loops as part of lastTotal.\n            if (dir != current)\n                total += 360 * MathUtils.signum(lastTotal);\n            timelinesRotation[i] = total;\n        }\n        timelinesRotation[i + 1] = diff;\n        bone.rotation = r1 + total * alpha;\n    }\n    queueEvents(entry, animationTime) {\n        let animationStart = entry.animationStart, animationEnd = entry.animationEnd;\n        let duration = animationEnd - animationStart;\n        let trackLastWrapped = entry.trackLast % duration;\n        // Queue events before complete.\n        let events = this.events;\n        let i = 0, n = events.length;\n        for (; i < n; i++) {\n            let event = events[i];\n            if (event.time < trackLastWrapped)\n                break;\n            if (event.time > animationEnd)\n                continue; // Discard events outside animation start/end.\n            this.queue.event(entry, event);\n        }\n        // Queue complete if completed a loop iteration or the animation.\n        let complete = false;\n        if (entry.loop)\n            complete = duration == 0 || trackLastWrapped > entry.trackTime % duration;\n        else\n            complete = animationTime >= animationEnd && entry.animationLast < animationEnd;\n        if (complete)\n            this.queue.complete(entry);\n        // Queue events after complete.\n        for (; i < n; i++) {\n            let event = events[i];\n            if (event.time < animationStart)\n                continue; // Discard events outside animation start/end.\n            this.queue.event(entry, event);\n        }\n    }\n    /** Removes all animations from all tracks, leaving skeletons in their current pose.\n     *\n     * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\n     * rather than leaving them in their current pose. */\n    clearTracks() {\n        let oldDrainDisabled = this.queue.drainDisabled;\n        this.queue.drainDisabled = true;\n        for (let i = 0, n = this.tracks.length; i < n; i++)\n            this.clearTrack(i);\n        this.tracks.length = 0;\n        this.queue.drainDisabled = oldDrainDisabled;\n        this.queue.drain();\n    }\n    /** Removes all animations from the track, leaving skeletons in their current pose.\n     *\n     * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\n     * rather than leaving them in their current pose. */\n    clearTrack(trackIndex) {\n        if (trackIndex >= this.tracks.length)\n            return;\n        let current = this.tracks[trackIndex];\n        if (!current)\n            return;\n        this.queue.end(current);\n        this.clearNext(current);\n        let entry = current;\n        while (true) {\n            let from = entry.mixingFrom;\n            if (!from)\n                break;\n            this.queue.end(from);\n            entry.mixingFrom = null;\n            entry.mixingTo = null;\n            entry = from;\n        }\n        this.tracks[current.trackIndex] = null;\n        this.queue.drain();\n    }\n    setCurrent(index, current, interrupt) {\n        let from = this.expandToIndex(index);\n        this.tracks[index] = current;\n        current.previous = null;\n        if (from) {\n            if (interrupt)\n                this.queue.interrupt(from);\n            current.mixingFrom = from;\n            from.mixingTo = current;\n            current.mixTime = 0;\n            // Store the interrupted mix percentage.\n            if (from.mixingFrom && from.mixDuration > 0)\n                current.interruptAlpha *= Math.min(1, from.mixTime / from.mixDuration);\n            from.timelinesRotation.length = 0; // Reset rotation for mixing out, in case entry was mixed in.\n        }\n        this.queue.start(current);\n    }\n    /** Sets an animation by name.\n      *\n      * See {@link #setAnimationWith()}. */\n    setAnimation(trackIndex, animationName, loop = false) {\n        let animation = this.data.skeletonData.findAnimation(animationName);\n        if (!animation)\n            throw new Error(\"Animation not found: \" + animationName);\n        return this.setAnimationWith(trackIndex, animation, loop);\n    }\n    /** Sets the current animation for a track, discarding any queued animations. If the formerly current track entry was never\n     * applied to a skeleton, it is replaced (not mixed from).\n     * @param loop If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\n     *           duration. In either case {@link TrackEntry#trackEnd} determines when the track is cleared.\n     * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    setAnimationWith(trackIndex, animation, loop = false) {\n        if (!animation)\n            throw new Error(\"animation cannot be null.\");\n        let interrupt = true;\n        let current = this.expandToIndex(trackIndex);\n        if (current) {\n            if (current.nextTrackLast == -1) {\n                // Don't mix from an entry that was never applied.\n                this.tracks[trackIndex] = current.mixingFrom;\n                this.queue.interrupt(current);\n                this.queue.end(current);\n                this.clearNext(current);\n                current = current.mixingFrom;\n                interrupt = false;\n            }\n            else\n                this.clearNext(current);\n        }\n        let entry = this.trackEntry(trackIndex, animation, loop, current);\n        this.setCurrent(trackIndex, entry, interrupt);\n        this.queue.drain();\n        return entry;\n    }\n    /** Queues an animation by name.\n     *\n     * See {@link #addAnimationWith()}. */\n    addAnimation(trackIndex, animationName, loop = false, delay = 0) {\n        let animation = this.data.skeletonData.findAnimation(animationName);\n        if (!animation)\n            throw new Error(\"Animation not found: \" + animationName);\n        return this.addAnimationWith(trackIndex, animation, loop, delay);\n    }\n    /** Adds an animation to be played after the current or last queued animation for a track. If the track is empty, it is\n     * equivalent to calling {@link #setAnimationWith()}.\n     * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\n     *           minus any mix duration (from the {@link AnimationStateData}) plus the specified `delay` (ie the mix\n     *           ends at (`delay` = 0) or before (`delay` < 0) the previous track entry duration). If the\n     *           previous entry is looping, its next loop completion is used instead of its duration.\n     * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    addAnimationWith(trackIndex, animation, loop = false, delay = 0) {\n        if (!animation)\n            throw new Error(\"animation cannot be null.\");\n        let last = this.expandToIndex(trackIndex);\n        if (last) {\n            while (last.next)\n                last = last.next;\n        }\n        let entry = this.trackEntry(trackIndex, animation, loop, last);\n        if (!last) {\n            this.setCurrent(trackIndex, entry, true);\n            this.queue.drain();\n        }\n        else {\n            last.next = entry;\n            entry.previous = last;\n            if (delay <= 0)\n                delay += last.getTrackComplete() - entry.mixDuration;\n        }\n        entry.delay = delay;\n        return entry;\n    }\n    /** Sets an empty animation for a track, discarding any queued animations, and sets the track entry's\n     * {@link TrackEntry#mixduration}. An empty animation has no timelines and serves as a placeholder for mixing in or out.\n     *\n     * Mixing out is done by setting an empty animation with a mix duration using either {@link #setEmptyAnimation()},\n     * {@link #setEmptyAnimations()}, or {@link #addEmptyAnimation()}. Mixing to an empty animation causes\n     * the previous animation to be applied less and less over the mix duration. Properties keyed in the previous animation\n     * transition to the value from lower tracks or to the setup pose value if no lower tracks key the property. A mix duration of\n     * 0 still mixes out over one frame.\n     *\n     * Mixing in is done by first setting an empty animation, then adding an animation using\n     * {@link #addAnimation()} and on the returned track entry, set the\n     * {@link TrackEntry#setMixDuration()}. Mixing from an empty animation causes the new animation to be applied more and\n     * more over the mix duration. Properties keyed in the new animation transition from the value from lower tracks or from the\n     * setup pose value if no lower tracks key the property to the value keyed in the new animation. */\n    setEmptyAnimation(trackIndex, mixDuration = 0) {\n        let entry = this.setAnimationWith(trackIndex, AnimationState.emptyAnimation(), false);\n        entry.mixDuration = mixDuration;\n        entry.trackEnd = mixDuration;\n        return entry;\n    }\n    /** Adds an empty animation to be played after the current or last queued animation for a track, and sets the track entry's\n     * {@link TrackEntry#mixDuration}. If the track is empty, it is equivalent to calling\n     * {@link #setEmptyAnimation()}.\n     *\n     * See {@link #setEmptyAnimation()}.\n     * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\n     *           minus any mix duration plus the specified `delay` (ie the mix ends at (`delay` = 0) or\n     *           before (`delay` < 0) the previous track entry duration). If the previous entry is looping, its next\n     *           loop completion is used instead of its duration.\n     * @return A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    addEmptyAnimation(trackIndex, mixDuration = 0, delay = 0) {\n        let entry = this.addAnimationWith(trackIndex, AnimationState.emptyAnimation(), false, delay);\n        if (delay <= 0)\n            entry.delay += entry.mixDuration - mixDuration;\n        entry.mixDuration = mixDuration;\n        entry.trackEnd = mixDuration;\n        return entry;\n    }\n    /** Sets an empty animation for every track, discarding any queued animations, and mixes to it over the specified mix\n      * duration. */\n    setEmptyAnimations(mixDuration = 0) {\n        let oldDrainDisabled = this.queue.drainDisabled;\n        this.queue.drainDisabled = true;\n        for (let i = 0, n = this.tracks.length; i < n; i++) {\n            let current = this.tracks[i];\n            if (current)\n                this.setEmptyAnimation(current.trackIndex, mixDuration);\n        }\n        this.queue.drainDisabled = oldDrainDisabled;\n        this.queue.drain();\n    }\n    expandToIndex(index) {\n        if (index < this.tracks.length)\n            return this.tracks[index];\n        Utils.ensureArrayCapacity(this.tracks, index + 1, null);\n        this.tracks.length = index + 1;\n        return null;\n    }\n    /** @param last May be null. */\n    trackEntry(trackIndex, animation, loop, last) {\n        let entry = this.trackEntryPool.obtain();\n        entry.reset();\n        entry.trackIndex = trackIndex;\n        entry.animation = animation;\n        entry.loop = loop;\n        entry.holdPrevious = false;\n        entry.eventThreshold = 0;\n        entry.attachmentThreshold = 0;\n        entry.drawOrderThreshold = 0;\n        entry.animationStart = 0;\n        entry.animationEnd = animation.duration;\n        entry.animationLast = -1;\n        entry.nextAnimationLast = -1;\n        entry.delay = 0;\n        entry.trackTime = 0;\n        entry.trackLast = -1;\n        entry.nextTrackLast = -1;\n        entry.trackEnd = Number.MAX_VALUE;\n        entry.timeScale = 1;\n        entry.alpha = 1;\n        entry.interruptAlpha = 1;\n        entry.mixTime = 0;\n        entry.mixDuration = !last ? 0 : this.data.getMix(last.animation, animation);\n        entry.mixBlend = MixBlend.replace;\n        return entry;\n    }\n    /** Removes the {@link TrackEntry#getNext() next entry} and all entries after it for the specified entry. */\n    clearNext(entry) {\n        let next = entry.next;\n        while (next) {\n            this.queue.dispose(next);\n            next = next.next;\n        }\n        entry.next = null;\n    }\n    _animationsChanged() {\n        this.animationsChanged = false;\n        this.propertyIDs.clear();\n        let tracks = this.tracks;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let entry = tracks[i];\n            if (!entry)\n                continue;\n            while (entry.mixingFrom)\n                entry = entry.mixingFrom;\n            do {\n                if (!entry.mixingTo || entry.mixBlend != MixBlend.add)\n                    this.computeHold(entry);\n                entry = entry.mixingTo;\n            } while (entry);\n        }\n    }\n    computeHold(entry) {\n        let to = entry.mixingTo;\n        let timelines = entry.animation.timelines;\n        let timelinesCount = entry.animation.timelines.length;\n        let timelineMode = entry.timelineMode;\n        timelineMode.length = timelinesCount;\n        let timelineHoldMix = entry.timelineHoldMix;\n        timelineHoldMix.length = 0;\n        let propertyIDs = this.propertyIDs;\n        if (to && to.holdPrevious) {\n            for (let i = 0; i < timelinesCount; i++)\n                timelineMode[i] = propertyIDs.addAll(timelines[i].getPropertyIds()) ? HOLD_FIRST : HOLD_SUBSEQUENT;\n            return;\n        }\n        outer: for (let i = 0; i < timelinesCount; i++) {\n            let timeline = timelines[i];\n            let ids = timeline.getPropertyIds();\n            if (!propertyIDs.addAll(ids))\n                timelineMode[i] = SUBSEQUENT;\n            else if (!to || timeline instanceof AttachmentTimeline || timeline instanceof DrawOrderTimeline\n                || timeline instanceof EventTimeline || !to.animation.hasTimeline(ids)) {\n                timelineMode[i] = FIRST;\n            }\n            else {\n                for (let next = to.mixingTo; next; next = next.mixingTo) {\n                    if (next.animation.hasTimeline(ids))\n                        continue;\n                    if (entry.mixDuration > 0) {\n                        timelineMode[i] = HOLD_MIX;\n                        timelineHoldMix[i] = next;\n                        continue outer;\n                    }\n                    break;\n                }\n                timelineMode[i] = HOLD_FIRST;\n            }\n        }\n    }\n    /** Returns the track entry for the animation currently playing on the track, or null if no animation is currently playing. */\n    getCurrent(trackIndex) {\n        if (trackIndex >= this.tracks.length)\n            return null;\n        return this.tracks[trackIndex];\n    }\n    /** Adds a listener to receive events for all track entries. */\n    addListener(listener) {\n        if (!listener)\n            throw new Error(\"listener cannot be null.\");\n        this.listeners.push(listener);\n    }\n    /** Removes the listener added with {@link #addListener()}. */\n    removeListener(listener) {\n        let index = this.listeners.indexOf(listener);\n        if (index >= 0)\n            this.listeners.splice(index, 1);\n    }\n    /** Removes all listeners added with {@link #addListener()}. */\n    clearListeners() {\n        this.listeners.length = 0;\n    }\n    /** Discards all listener notifications that have not yet been delivered. This can be useful to call from an\n     * {@link AnimationStateListener} when it is known that further notifications that may have been already queued for delivery\n     * are not wanted because new animations are being set. */\n    clearListenerNotifications() {\n        this.queue.clear();\n    }\n}\n/** Stores settings and other state for the playback of an animation on an {@link AnimationState} track.\n *\n * References to a track entry must not be kept after the {@link AnimationStateListener#dispose()} event occurs. */\nexport class TrackEntry {\n    constructor() {\n        /** The animation to apply for this track entry. */\n        this.animation = null;\n        this.previous = null;\n        /** The animation queued to start after this animation, or null. `next` makes up a linked list. */\n        this.next = null;\n        /** The track entry for the previous animation when mixing from the previous animation to this animation, or null if no\n         * mixing is currently occuring. When mixing from multiple animations, `mixingFrom` makes up a linked list. */\n        this.mixingFrom = null;\n        /** The track entry for the next animation when mixing from this animation to the next animation, or null if no mixing is\n         * currently occuring. When mixing to multiple animations, `mixingTo` makes up a linked list. */\n        this.mixingTo = null;\n        /** The listener for events generated by this track entry, or null.\n         *\n         * A track entry returned from {@link AnimationState#setAnimation()} is already the current animation\n         * for the track, so the track entry listener {@link AnimationStateListener#start()} will not be called. */\n        this.listener = null;\n        /** The index of the track where this track entry is either current or queued.\n         *\n         * See {@link AnimationState#getCurrent()}. */\n        this.trackIndex = 0;\n        /** If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\n         * duration. */\n        this.loop = false;\n        /** If true, when mixing from the previous animation to this animation, the previous animation is applied as normal instead\n         * of being mixed out.\n         *\n         * When mixing between animations that key the same property, if a lower track also keys that property then the value will\n         * briefly dip toward the lower track value during the mix. This happens because the first animation mixes from 100% to 0%\n         * while the second animation mixes from 0% to 100%. Setting `holdPrevious` to true applies the first animation\n         * at 100% during the mix so the lower track value is overwritten. Such dipping does not occur on the lowest track which\n         * keys the property, only when a higher track also keys the property.\n         *\n         * Snapping will occur if `holdPrevious` is true and this animation does not key all the same properties as the\n         * previous animation. */\n        this.holdPrevious = false;\n        this.reverse = false;\n        /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\n         * `eventThreshold`, event timelines are applied while this animation is being mixed out. Defaults to 0, so event\n         * timelines are not applied while this animation is being mixed out. */\n        this.eventThreshold = 0;\n        /** When the mix percentage ({@link #mixtime} / {@link #mixDuration}) is less than the\n         * `attachmentThreshold`, attachment timelines are applied while this animation is being mixed out. Defaults to\n         * 0, so attachment timelines are not applied while this animation is being mixed out. */\n        this.attachmentThreshold = 0;\n        /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\n         * `drawOrderThreshold`, draw order timelines are applied while this animation is being mixed out. Defaults to 0,\n         * so draw order timelines are not applied while this animation is being mixed out. */\n        this.drawOrderThreshold = 0;\n        /** Seconds when this animation starts, both initially and after looping. Defaults to 0.\n         *\n         * When changing the `animationStart` time, it often makes sense to set {@link #animationLast} to the same\n         * value to prevent timeline keys before the start time from triggering. */\n        this.animationStart = 0;\n        /** Seconds for the last frame of this animation. Non-looping animations won't play past this time. Looping animations will\n         * loop back to {@link #animationStart} at this time. Defaults to the animation {@link Animation#duration}. */\n        this.animationEnd = 0;\n        /** The time in seconds this animation was last applied. Some timelines use this for one-time triggers. Eg, when this\n         * animation is applied, event timelines will fire all events between the `animationLast` time (exclusive) and\n         * `animationTime` (inclusive). Defaults to -1 to ensure triggers on frame 0 happen the first time this animation\n         * is applied. */\n        this.animationLast = 0;\n        this.nextAnimationLast = 0;\n        /** Seconds to postpone playing the animation. When this track entry is the current track entry, `delay`\n         * postpones incrementing the {@link #trackTime}. When this track entry is queued, `delay` is the time from\n         * the start of the previous animation to when this track entry will become the current track entry (ie when the previous\n         * track entry {@link TrackEntry#trackTime} >= this track entry's `delay`).\n         *\n         * {@link #timeScale} affects the delay. */\n        this.delay = 0;\n        /** Current time in seconds this track entry has been the current track entry. The track time determines\n         * {@link #animationTime}. The track time can be set to start the animation at a time other than 0, without affecting\n         * looping. */\n        this.trackTime = 0;\n        this.trackLast = 0;\n        this.nextTrackLast = 0;\n        /** The track time in seconds when this animation will be removed from the track. Defaults to the highest possible float\n         * value, meaning the animation will be applied until a new animation is set or the track is cleared. If the track end time\n         * is reached, no other animations are queued for playback, and mixing from any previous animations is complete, then the\n         * properties keyed by the animation are set to the setup pose and the track is cleared.\n         *\n         * It may be desired to use {@link AnimationState#addEmptyAnimation()} rather than have the animation\n         * abruptly cease being applied. */\n        this.trackEnd = 0;\n        /** Multiplier for the delta time when this track entry is updated, causing time for this animation to pass slower or\n         * faster. Defaults to 1.\n         *\n         * {@link #mixTime} is not affected by track entry time scale, so {@link #mixDuration} may need to be adjusted to\n         * match the animation speed.\n         *\n         * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\n         * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, assuming time scale to be 1. If\n         * the time scale is not 1, the delay may need to be adjusted.\n         *\n         * See AnimationState {@link AnimationState#timeScale} for affecting all animations. */\n        this.timeScale = 0;\n        /** Values < 1 mix this animation with the skeleton's current pose (usually the pose resulting from lower tracks). Defaults\n         * to 1, which overwrites the skeleton's current pose with this animation.\n         *\n         * Typically track 0 is used to completely pose the skeleton, then alpha is used on higher tracks. It doesn't make sense to\n         * use alpha on track 0 if the skeleton pose is from the last frame render. */\n        this.alpha = 0;\n        /** Seconds from 0 to the {@link #getMixDuration()} when mixing from the previous animation to this animation. May be\n         * slightly more than `mixDuration` when the mix is complete. */\n        this.mixTime = 0;\n        /** Seconds for mixing from the previous animation to this animation. Defaults to the value provided by AnimationStateData\n         * {@link AnimationStateData#getMix()} based on the animation before this animation (if any).\n         *\n         * A mix duration of 0 still mixes out over one frame to provide the track entry being mixed out a chance to revert the\n         * properties it was animating.\n         *\n         * The `mixDuration` can be set manually rather than use the value from\n         * {@link AnimationStateData#getMix()}. In that case, the `mixDuration` can be set for a new\n         * track entry only before {@link AnimationState#update(float)} is first called.\n         *\n         * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\n         * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, not a mix duration set\n         * afterward. */\n        this.mixDuration = 0;\n        this.interruptAlpha = 0;\n        this.totalAlpha = 0;\n        /** Controls how properties keyed in the animation are mixed with lower tracks. Defaults to {@link MixBlend#replace}, which\n         * replaces the values from the lower tracks with the animation values. {@link MixBlend#add} adds the animation values to\n         * the values from the lower tracks.\n         *\n         * The `mixBlend` can be set for a new track entry only before {@link AnimationState#apply()} is first\n         * called. */\n        this.mixBlend = MixBlend.replace;\n        this.timelineMode = new Array();\n        this.timelineHoldMix = new Array();\n        this.timelinesRotation = new Array();\n    }\n    reset() {\n        this.next = null;\n        this.previous = null;\n        this.mixingFrom = null;\n        this.mixingTo = null;\n        this.animation = null;\n        this.listener = null;\n        this.timelineMode.length = 0;\n        this.timelineHoldMix.length = 0;\n        this.timelinesRotation.length = 0;\n    }\n    /** Uses {@link #trackTime} to compute the `animationTime`, which is between {@link #animationStart}\n     * and {@link #animationEnd}. When the `trackTime` is 0, the `animationTime` is equal to the\n     * `animationStart` time. */\n    getAnimationTime() {\n        if (this.loop) {\n            let duration = this.animationEnd - this.animationStart;\n            if (duration == 0)\n                return this.animationStart;\n            return (this.trackTime % duration) + this.animationStart;\n        }\n        return Math.min(this.trackTime + this.animationStart, this.animationEnd);\n    }\n    setAnimationLast(animationLast) {\n        this.animationLast = animationLast;\n        this.nextAnimationLast = animationLast;\n    }\n    /** Returns true if at least one loop has been completed.\n     *\n     * See {@link AnimationStateListener#complete()}. */\n    isComplete() {\n        return this.trackTime >= this.animationEnd - this.animationStart;\n    }\n    /** Resets the rotation directions for mixing this entry's rotate timelines. This can be useful to avoid bones rotating the\n     * long way around when using {@link #alpha} and starting animations on other tracks.\n     *\n     * Mixing with {@link MixBlend#replace} involves finding a rotation between two others, which has two possible solutions:\n     * the short way or the long way around. The two rotations likely change over time, so which direction is the short or long\n     * way also changes. If the short way was always chosen, bones would flip to the other side when that direction became the\n     * long way. TrackEntry chooses the short way the first time it is applied and remembers that direction. */\n    resetRotationDirections() {\n        this.timelinesRotation.length = 0;\n    }\n    getTrackComplete() {\n        let duration = this.animationEnd - this.animationStart;\n        if (duration != 0) {\n            if (this.loop)\n                return duration * (1 + ((this.trackTime / duration) | 0)); // Completion of next loop.\n            if (this.trackTime < duration)\n                return duration; // Before duration.\n        }\n        return this.trackTime; // Next update.\n    }\n}\nexport class EventQueue {\n    constructor(animState) {\n        this.objects = [];\n        this.drainDisabled = false;\n        this.animState = null;\n        this.animState = animState;\n    }\n    start(entry) {\n        this.objects.push(EventType.start);\n        this.objects.push(entry);\n        this.animState.animationsChanged = true;\n    }\n    interrupt(entry) {\n        this.objects.push(EventType.interrupt);\n        this.objects.push(entry);\n    }\n    end(entry) {\n        this.objects.push(EventType.end);\n        this.objects.push(entry);\n        this.animState.animationsChanged = true;\n    }\n    dispose(entry) {\n        this.objects.push(EventType.dispose);\n        this.objects.push(entry);\n    }\n    complete(entry) {\n        this.objects.push(EventType.complete);\n        this.objects.push(entry);\n    }\n    event(entry, event) {\n        this.objects.push(EventType.event);\n        this.objects.push(entry);\n        this.objects.push(event);\n    }\n    drain() {\n        if (this.drainDisabled)\n            return;\n        this.drainDisabled = true;\n        let objects = this.objects;\n        let listeners = this.animState.listeners;\n        for (let i = 0; i < objects.length; i += 2) {\n            let type = objects[i];\n            let entry = objects[i + 1];\n            switch (type) {\n                case EventType.start:\n                    if (entry.listener && entry.listener.start)\n                        entry.listener.start(entry);\n                    for (let ii = 0; ii < listeners.length; ii++)\n                        if (listeners[ii].start)\n                            listeners[ii].start(entry);\n                    break;\n                case EventType.interrupt:\n                    if (entry.listener && entry.listener.interrupt)\n                        entry.listener.interrupt(entry);\n                    for (let ii = 0; ii < listeners.length; ii++)\n                        if (listeners[ii].interrupt)\n                            listeners[ii].interrupt(entry);\n                    break;\n                case EventType.end:\n                    if (entry.listener && entry.listener.end)\n                        entry.listener.end(entry);\n                    for (let ii = 0; ii < listeners.length; ii++)\n                        if (listeners[ii].end)\n                            listeners[ii].end(entry);\n                // Fall through.\n                case EventType.dispose:\n                    if (entry.listener && entry.listener.dispose)\n                        entry.listener.dispose(entry);\n                    for (let ii = 0; ii < listeners.length; ii++)\n                        if (listeners[ii].dispose)\n                            listeners[ii].dispose(entry);\n                    this.animState.trackEntryPool.free(entry);\n                    break;\n                case EventType.complete:\n                    if (entry.listener && entry.listener.complete)\n                        entry.listener.complete(entry);\n                    for (let ii = 0; ii < listeners.length; ii++)\n                        if (listeners[ii].complete)\n                            listeners[ii].complete(entry);\n                    break;\n                case EventType.event:\n                    let event = objects[i++ + 2];\n                    if (entry.listener && entry.listener.event)\n                        entry.listener.event(entry, event);\n                    for (let ii = 0; ii < listeners.length; ii++)\n                        if (listeners[ii].event)\n                            listeners[ii].event(entry, event);\n                    break;\n            }\n        }\n        this.clear();\n        this.drainDisabled = false;\n    }\n    clear() {\n        this.objects.length = 0;\n    }\n}\nexport var EventType;\n(function (EventType) {\n    EventType[EventType[\"start\"] = 0] = \"start\";\n    EventType[EventType[\"interrupt\"] = 1] = \"interrupt\";\n    EventType[EventType[\"end\"] = 2] = \"end\";\n    EventType[EventType[\"dispose\"] = 3] = \"dispose\";\n    EventType[EventType[\"complete\"] = 4] = \"complete\";\n    EventType[EventType[\"event\"] = 5] = \"event\";\n})(EventType || (EventType = {}));\nexport class AnimationStateAdapter {\n    start(entry) {\n    }\n    interrupt(entry) {\n    }\n    end(entry) {\n    }\n    dispose(entry) {\n    }\n    complete(entry) {\n    }\n    event(entry, event) {\n    }\n}\n/** 1. A previously applied timeline has set this property.\n *\n * Result: Mix from the current pose to the timeline pose. */\nexport const SUBSEQUENT = 0;\n/** 1. This is the first timeline to set this property.\n * 2. The next track entry applied after this one does not have a timeline to set this property.\n *\n * Result: Mix from the setup pose to the timeline pose. */\nexport const FIRST = 1;\n/** 1) A previously applied timeline has set this property.<br>\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\n * Result: Mix from the current pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading\n * animations that key the same property. A subsequent timeline will set this property using a mix. */\nexport const HOLD_SUBSEQUENT = 2;\n/** 1) This is the first timeline to set this property.<br>\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\n * Result: Mix from the setup pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading animations\n * that key the same property. A subsequent timeline will set this property using a mix. */\nexport const HOLD_FIRST = 3;\n/** 1. This is the first timeline to set this property.\n * 2. The next track entry to be applied does have a timeline to set this property.\n * 3. The next track entry after that one does have a timeline to set this property.\n * 4. timelineHoldMix stores the first subsequent track entry that does not have a timeline to set this property.\n *\n * Result: The same as HOLD except the mix percentage from the timelineHoldMix track entry is used. This handles when more than\n * 2 track entries in a row have a timeline that sets the same property.\n *\n * Eg, A -> B -> C -> D where A, B, and C have a timeline setting same property, but D does not. When A is applied, to avoid\n * \"dipping\" A is not mixed out, however D (the first entry that doesn't set the property) mixing in is used to mix out A\n * (which affects B and C). Without using D to mix out, A would be applied fully until mixing completes, then snap into\n * place. */\nexport const HOLD_MIX = 4;\nexport const SETUP = 1;\nexport const CURRENT = 2;\nlet _emptyAnimation = null;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores mix (crossfade) durations to be applied when {@link AnimationState} animations are changed. */\nexport class AnimationStateData {\n    constructor(skeletonData) {\n        /** The SkeletonData to look up animations when they are specified by name. */\n        this.skeletonData = null;\n        this.animationToMixTime = {};\n        /** The mix duration to use when no mix duration has been defined between two animations. */\n        this.defaultMix = 0;\n        if (!skeletonData)\n            throw new Error(\"skeletonData cannot be null.\");\n        this.skeletonData = skeletonData;\n    }\n    /** Sets a mix duration by animation name.\n     *\n     * See {@link #setMixWith()}. */\n    setMix(fromName, toName, duration) {\n        let from = this.skeletonData.findAnimation(fromName);\n        if (!from)\n            throw new Error(\"Animation not found: \" + fromName);\n        let to = this.skeletonData.findAnimation(toName);\n        if (!to)\n            throw new Error(\"Animation not found: \" + toName);\n        this.setMixWith(from, to, duration);\n    }\n    /** Sets the mix duration when changing from the specified animation to the other.\n     *\n     * See {@link TrackEntry#mixDuration}. */\n    setMixWith(from, to, duration) {\n        if (!from)\n            throw new Error(\"from cannot be null.\");\n        if (!to)\n            throw new Error(\"to cannot be null.\");\n        let key = from.name + \".\" + to.name;\n        this.animationToMixTime[key] = duration;\n    }\n    /** Returns the mix duration to use when changing from the specified animation to the other, or the {@link #defaultMix} if\n      * no mix duration has been set. */\n    getMix(from, to) {\n        let key = from.name + \".\" + to.name;\n        let value = this.animationToMixTime[key];\n        return value === undefined ? this.defaultMix : value;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5pbWF0aW9uU3RhdGVEYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FuaW1hdGlvblN0YXRlRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFPL0UseUdBQXlHO0FBQ3pHLE1BQU0sT0FBTyxrQkFBa0I7SUFTOUIsWUFBYSxZQUEwQjtRQVJ2Qyw4RUFBOEU7UUFDOUUsaUJBQVksR0FBaUIsSUFBSSxDQUFDO1FBRWxDLHVCQUFrQixHQUFzQixFQUFFLENBQUM7UUFFM0MsNEZBQTRGO1FBQzVGLGVBQVUsR0FBRyxDQUFDLENBQUM7UUFHZCxJQUFJLENBQUMsWUFBWTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztJQUNsQyxDQUFDO0lBRUQ7O29DQUVnQztJQUNoQyxNQUFNLENBQUUsUUFBZ0IsRUFBRSxNQUFjLEVBQUUsUUFBZ0I7UUFDekQsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixHQUFHLFFBQVEsQ0FBQyxDQUFDO1FBQy9ELElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxFQUFFO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsR0FBRyxNQUFNLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVEOzs2Q0FFeUM7SUFDekMsVUFBVSxDQUFFLElBQWUsRUFBRSxFQUFhLEVBQUUsUUFBZ0I7UUFDM0QsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDL0MsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDO0lBQ3pDLENBQUM7SUFFRDt3Q0FDb0M7SUFDcEMsTUFBTSxDQUFFLElBQWUsRUFBRSxFQUFhO1FBQ3JDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFDcEMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pDLE9BQU8sS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RELENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment with vertices that make up a polygon. Can be used for hit detection, creating physics bodies, spawning particle\n * effects, and more.\n *\n * See {@link SkeletonBounds} and [Bounding Boxes](http://esotericsoftware.com/spine-bounding-boxes) in the Spine User\n * Guide. */\nexport class BoundingBoxAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        this.color = new Color(1, 1, 1, 1);\n    }\n    copy() {\n        let copy = new BoundingBoxAttachment(this.name);\n        this.copyTo(copy);\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm91bmRpbmdCb3hBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL0JvdW5kaW5nQm94QXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNqQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxjQUFjLENBQUM7QUFFNUQ7Ozs7WUFJWTtBQUNaLE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxnQkFBZ0I7SUFHMUQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUhiLFVBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUk5QixDQUFDO0lBRUQsSUFBSTtRQUNILElBQUksSUFBSSxHQUFHLElBQUkscUJBQXFCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment with vertices that make up a polygon used for clipping the rendering of other attachments. */\nexport class ClippingAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        /** Clipping is performed between the clipping polygon's slot and the end slot. Returns null if clipping is done until the end of\n         * the skeleton's rendering. */\n        this.endSlot = null;\n        // Nonessential.\n        /** The color of the clipping polygon as it was in Spine. Available only when nonessential data was exported. Clipping polygons\n         * are not usually rendered at runtime. */\n        this.color = new Color(0.2275, 0.2275, 0.8078, 1); // ce3a3aff\n    }\n    copy() {\n        let copy = new ClippingAttachment(this.name);\n        this.copyTo(copy);\n        copy.endSlot = this.endSlot;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpcHBpbmdBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL0NsaXBwaW5nQXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNqQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxjQUFjLENBQUM7QUFFNUQsK0dBQStHO0FBQy9HLE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxnQkFBZ0I7SUFVdkQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQVZiO3VDQUMrQjtRQUMvQixZQUFPLEdBQWEsSUFBSSxDQUFDO1FBRXpCLGdCQUFnQjtRQUNoQjtrREFDMEM7UUFDMUMsVUFBSyxHQUFHLElBQUksS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVztJQUl6RCxDQUFDO0lBRUQsSUFBSTtRQUNILElBQUksSUFBSSxHQUFHLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNwQyxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class Texture {\n    constructor(image) {\n        this._image = image;\n    }\n    getImage() {\n        return this._image;\n    }\n}\nexport var TextureFilter;\n(function (TextureFilter) {\n    TextureFilter[TextureFilter[\"Nearest\"] = 9728] = \"Nearest\";\n    TextureFilter[TextureFilter[\"Linear\"] = 9729] = \"Linear\";\n    TextureFilter[TextureFilter[\"MipMap\"] = 9987] = \"MipMap\";\n    TextureFilter[TextureFilter[\"MipMapNearestNearest\"] = 9984] = \"MipMapNearestNearest\";\n    TextureFilter[TextureFilter[\"MipMapLinearNearest\"] = 9985] = \"MipMapLinearNearest\";\n    TextureFilter[TextureFilter[\"MipMapNearestLinear\"] = 9986] = \"MipMapNearestLinear\";\n    TextureFilter[TextureFilter[\"MipMapLinearLinear\"] = 9987] = \"MipMapLinearLinear\"; // WebGLRenderingContext.LINEAR_MIPMAP_LINEAR\n})(TextureFilter || (TextureFilter = {}));\nexport var TextureWrap;\n(function (TextureWrap) {\n    TextureWrap[TextureWrap[\"MirroredRepeat\"] = 33648] = \"MirroredRepeat\";\n    TextureWrap[TextureWrap[\"ClampToEdge\"] = 33071] = \"ClampToEdge\";\n    TextureWrap[TextureWrap[\"Repeat\"] = 10497] = \"Repeat\"; // WebGLRenderingContext.REPEAT\n})(TextureWrap || (TextureWrap = {}));\nexport class TextureRegion {\n    constructor() {\n        this.u = 0;\n        this.v = 0;\n        this.u2 = 0;\n        this.v2 = 0;\n        this.width = 0;\n        this.height = 0;\n        this.degrees = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.originalWidth = 0;\n        this.originalHeight = 0;\n    }\n}\nexport class FakeTexture extends Texture {\n    setFilters(minFilter, magFilter) { }\n    setWraps(uWrap, vWrap) { }\n    dispose() { }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9UZXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxNQUFNLE9BQWdCLE9BQU87SUFHNUIsWUFBYSxLQUFxQztRQUNqRCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDO0lBRUQsUUFBUTtRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNwQixDQUFDO0NBS0Q7QUFFRCxNQUFNLENBQU4sSUFBWSxhQVFYO0FBUkQsV0FBWSxhQUFhO0lBQ3hCLDBEQUFjLENBQUE7SUFDZCx3REFBYSxDQUFBO0lBQ2Isd0RBQWEsQ0FBQTtJQUNiLG9GQUEyQixDQUFBO0lBQzNCLGtGQUEwQixDQUFBO0lBQzFCLGtGQUEwQixDQUFBO0lBQzFCLGdGQUF5QixDQUFBLENBQUMsNkNBQTZDO0FBQ3hFLENBQUMsRUFSVyxhQUFhLEtBQWIsYUFBYSxRQVF4QjtBQUVELE1BQU0sQ0FBTixJQUFZLFdBSVg7QUFKRCxXQUFZLFdBQVc7SUFDdEIscUVBQXNCLENBQUE7SUFDdEIsK0RBQW1CLENBQUE7SUFDbkIscURBQWMsQ0FBQSxDQUFDLCtCQUErQjtBQUMvQyxDQUFDLEVBSlcsV0FBVyxLQUFYLFdBQVcsUUFJdEI7QUFFRCxNQUFNLE9BQU8sYUFBYTtJQUExQjtRQUVDLE1BQUMsR0FBRyxDQUFDLENBQUM7UUFBQyxNQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsT0FBRSxHQUFHLENBQUMsQ0FBQztRQUFDLE9BQUUsR0FBRyxDQUFDLENBQUM7UUFDZixVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQUMsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUN0QixZQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ1osWUFBTyxHQUFHLENBQUMsQ0FBQztRQUFDLFlBQU8sR0FBRyxDQUFDLENBQUM7UUFDekIsa0JBQWEsR0FBRyxDQUFDLENBQUM7UUFBQyxtQkFBYyxHQUFHLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQUE7QUFFRCxNQUFNLE9BQU8sV0FBWSxTQUFRLE9BQU87SUFDdkMsVUFBVSxDQUFFLFNBQXdCLEVBQUUsU0FBd0IsSUFBSSxDQUFDO0lBQ25FLFFBQVEsQ0FBRSxLQUFrQixFQUFFLEtBQWtCLElBQUksQ0FBQztJQUNyRCxPQUFPLEtBQU0sQ0FBQztDQUNkIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureFilter, TextureWrap, TextureRegion } from \"./Texture\";\nimport { Utils } from \"./Utils\";\nexport class TextureAtlas {\n    constructor(atlasText) {\n        this.pages = new Array();\n        this.regions = new Array();\n        let reader = new TextureAtlasReader(atlasText);\n        let entry = new Array(4);\n        let page = null;\n        let region = null;\n        let pageFields = {};\n        pageFields[\"size\"] = () => {\n            page.width = parseInt(entry[1]);\n            page.height = parseInt(entry[2]);\n        };\n        pageFields[\"format\"] = () => {\n            // page.format = Format[tuple[0]]; we don't need format in WebGL\n        };\n        pageFields[\"filter\"] = () => {\n            page.minFilter = Utils.enumValue(TextureFilter, entry[1]);\n            page.magFilter = Utils.enumValue(TextureFilter, entry[2]);\n        };\n        pageFields[\"repeat\"] = () => {\n            if (entry[1].indexOf('x') != -1)\n                page.uWrap = TextureWrap.Repeat;\n            if (entry[1].indexOf('y') != -1)\n                page.vWrap = TextureWrap.Repeat;\n        };\n        pageFields[\"pma\"] = () => {\n            page.pma = entry[1] == \"true\";\n        };\n        var regionFields = {};\n        regionFields[\"xy\"] = () => {\n            region.x = parseInt(entry[1]);\n            region.y = parseInt(entry[2]);\n        };\n        regionFields[\"size\"] = () => {\n            region.width = parseInt(entry[1]);\n            region.height = parseInt(entry[2]);\n        };\n        regionFields[\"bounds\"] = () => {\n            region.x = parseInt(entry[1]);\n            region.y = parseInt(entry[2]);\n            region.width = parseInt(entry[3]);\n            region.height = parseInt(entry[4]);\n        };\n        regionFields[\"offset\"] = () => {\n            region.offsetX = parseInt(entry[1]);\n            region.offsetY = parseInt(entry[2]);\n        };\n        regionFields[\"orig\"] = () => {\n            region.originalWidth = parseInt(entry[1]);\n            region.originalHeight = parseInt(entry[2]);\n        };\n        regionFields[\"offsets\"] = () => {\n            region.offsetX = parseInt(entry[1]);\n            region.offsetY = parseInt(entry[2]);\n            region.originalWidth = parseInt(entry[3]);\n            region.originalHeight = parseInt(entry[4]);\n        };\n        regionFields[\"rotate\"] = () => {\n            let value = entry[1];\n            if (value == \"true\")\n                region.degrees = 90;\n            else if (value != \"false\")\n                region.degrees = parseInt(value);\n        };\n        regionFields[\"index\"] = () => {\n            region.index = parseInt(entry[1]);\n        };\n        let line = reader.readLine();\n        // Ignore empty lines before first entry.\n        while (line && line.trim().length == 0)\n            line = reader.readLine();\n        // Header entries.\n        while (true) {\n            if (!line || line.trim().length == 0)\n                break;\n            if (reader.readEntry(entry, line) == 0)\n                break; // Silently ignore all header fields.\n            line = reader.readLine();\n        }\n        // Page and region entries.\n        let names = null;\n        let values = null;\n        while (true) {\n            if (line === null)\n                break;\n            if (line.trim().length == 0) {\n                page = null;\n                line = reader.readLine();\n            }\n            else if (!page) {\n                page = new TextureAtlasPage();\n                page.name = line.trim();\n                while (true) {\n                    if (reader.readEntry(entry, line = reader.readLine()) == 0)\n                        break;\n                    let field = pageFields[entry[0]];\n                    if (field)\n                        field();\n                }\n                this.pages.push(page);\n            }\n            else {\n                region = new TextureAtlasRegion();\n                region.page = page;\n                region.name = line;\n                while (true) {\n                    let count = reader.readEntry(entry, line = reader.readLine());\n                    if (count == 0)\n                        break;\n                    let field = regionFields[entry[0]];\n                    if (field)\n                        field();\n                    else {\n                        if (!names) {\n                            names = [];\n                            values = [];\n                        }\n                        names.push(entry[0]);\n                        let entryValues = [];\n                        for (let i = 0; i < count; i++)\n                            entryValues.push(parseInt(entry[i + 1]));\n                        values.push(entryValues);\n                    }\n                }\n                if (region.originalWidth == 0 && region.originalHeight == 0) {\n                    region.originalWidth = region.width;\n                    region.originalHeight = region.height;\n                }\n                if (names && names.length > 0) {\n                    region.names = names;\n                    region.values = values;\n                    names = null;\n                    values = null;\n                }\n                region.u = region.x / page.width;\n                region.v = region.y / page.height;\n                if (region.degrees == 90) {\n                    region.u2 = (region.x + region.height) / page.width;\n                    region.v2 = (region.y + region.width) / page.height;\n                }\n                else {\n                    region.u2 = (region.x + region.width) / page.width;\n                    region.v2 = (region.y + region.height) / page.height;\n                }\n                this.regions.push(region);\n            }\n        }\n    }\n    findRegion(name) {\n        for (let i = 0; i < this.regions.length; i++) {\n            if (this.regions[i].name == name) {\n                return this.regions[i];\n            }\n        }\n        return null;\n    }\n    setTextures(assetManager, pathPrefix = \"\") {\n        for (let page of this.pages)\n            page.setTexture(assetManager.get(pathPrefix + page.name));\n    }\n    dispose() {\n        for (let i = 0; i < this.pages.length; i++) {\n            this.pages[i].texture.dispose();\n        }\n    }\n}\nclass TextureAtlasReader {\n    constructor(text) {\n        this.lines = null;\n        this.index = 0;\n        this.lines = text.split(/\\r\\n|\\r|\\n/);\n    }\n    readLine() {\n        if (this.index >= this.lines.length)\n            return null;\n        return this.lines[this.index++];\n    }\n    readEntry(entry, line) {\n        if (!line)\n            return 0;\n        line = line.trim();\n        if (line.length == 0)\n            return 0;\n        let colon = line.indexOf(':');\n        if (colon == -1)\n            return 0;\n        entry[0] = line.substr(0, colon).trim();\n        for (let i = 1, lastMatch = colon + 1;; i++) {\n            let comma = line.indexOf(',', lastMatch);\n            if (comma == -1) {\n                entry[i] = line.substr(lastMatch).trim();\n                return i;\n            }\n            entry[i] = line.substr(lastMatch, comma - lastMatch).trim();\n            lastMatch = comma + 1;\n            if (i == 4)\n                return 4;\n        }\n    }\n}\nexport class TextureAtlasPage {\n    constructor() {\n        this.name = null;\n        this.minFilter = TextureFilter.Nearest;\n        this.magFilter = TextureFilter.Nearest;\n        this.uWrap = TextureWrap.ClampToEdge;\n        this.vWrap = TextureWrap.ClampToEdge;\n        this.texture = null;\n        this.width = 0;\n        this.height = 0;\n        this.pma = false;\n    }\n    setTexture(texture) {\n        this.texture = texture;\n        texture.setFilters(this.minFilter, this.magFilter);\n        texture.setWraps(this.uWrap, this.vWrap);\n    }\n}\nexport class TextureAtlasRegion extends TextureRegion {\n    constructor() {\n        super(...arguments);\n        this.page = null;\n        this.name = null;\n        this.x = 0;\n        this.y = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.originalWidth = 0;\n        this.originalHeight = 0;\n        this.index = 0;\n        this.degrees = 0;\n        this.names = null;\n        this.values = null;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlasRegion } from \"../TextureAtlas\";\nimport { Color, Utils } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment that displays a textured mesh. A mesh has hull vertices and internal vertices within the hull. Holes are not\n * supported. Each vertex has UVs (texture coordinates) and triangles are used to map an image on to the mesh.\n *\n * See [Mesh attachments](http://esotericsoftware.com/spine-meshes) in the Spine User Guide. */\nexport class MeshAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        this.region = null;\n        /** The name of the texture region for this attachment. */\n        this.path = null;\n        /** The UV pair for each vertex, normalized within the texture region. */\n        this.regionUVs = null;\n        /** The UV pair for each vertex, normalized within the entire texture.\n         *\n         * See {@link #updateUVs}. */\n        this.uvs = null;\n        /** Triplets of vertex indices which describe the mesh's triangulation. */\n        this.triangles = null;\n        /** The color to tint the mesh. */\n        this.color = new Color(1, 1, 1, 1);\n        /** The width of the mesh's image. Available only when nonessential data was exported. */\n        this.width = 0;\n        /** The height of the mesh's image. Available only when nonessential data was exported. */\n        this.height = 0;\n        /** The number of entries at the beginning of {@link #vertices} that make up the mesh hull. */\n        this.hullLength = 0;\n        /** Vertex index pairs describing edges for controling triangulation. Mesh triangles will never cross edges. Only available if\n         * nonessential data was exported. Triangulation is not performed at runtime. */\n        this.edges = null;\n        this.parentMesh = null;\n        this.tempColor = new Color(0, 0, 0, 0);\n    }\n    /** Calculates {@link #uvs} using {@link #regionUVs} and the {@link #region}. Must be called after changing the region UVs or\n     * region. */\n    updateUVs() {\n        let regionUVs = this.regionUVs;\n        if (!this.uvs || this.uvs.length != regionUVs.length)\n            this.uvs = Utils.newFloatArray(regionUVs.length);\n        let uvs = this.uvs;\n        let n = this.uvs.length;\n        let u = this.region.u, v = this.region.v, width = 0, height = 0;\n        if (this.region instanceof TextureAtlasRegion) {\n            let region = this.region, image = region.page.texture.getImage();\n            let textureWidth = image.width, textureHeight = image.height;\n            switch (region.degrees) {\n                case 90:\n                    u -= (region.originalHeight - region.offsetY - region.height) / textureWidth;\n                    v -= (region.originalWidth - region.offsetX - region.width) / textureHeight;\n                    width = region.originalHeight / textureWidth;\n                    height = region.originalWidth / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + regionUVs[i + 1] * width;\n                        uvs[i + 1] = v + (1 - regionUVs[i]) * height;\n                    }\n                    return;\n                case 180:\n                    u -= (region.originalWidth - region.offsetX - region.width) / textureWidth;\n                    v -= region.offsetY / textureHeight;\n                    width = region.originalWidth / textureWidth;\n                    height = region.originalHeight / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + (1 - regionUVs[i]) * width;\n                        uvs[i + 1] = v + (1 - regionUVs[i + 1]) * height;\n                    }\n                    return;\n                case 270:\n                    u -= region.offsetY / textureWidth;\n                    v -= region.offsetX / textureHeight;\n                    width = region.originalHeight / textureWidth;\n                    height = region.originalWidth / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + (1 - regionUVs[i + 1]) * width;\n                        uvs[i + 1] = v + regionUVs[i] * height;\n                    }\n                    return;\n            }\n            u -= region.offsetX / textureWidth;\n            v -= (region.originalHeight - region.offsetY - region.height) / textureHeight;\n            width = region.originalWidth / textureWidth;\n            height = region.originalHeight / textureHeight;\n        }\n        else if (!this.region) {\n            u = v = 0;\n            width = height = 1;\n        }\n        else {\n            width = this.region.u2 - u;\n            height = this.region.v2 - v;\n        }\n        for (let i = 0; i < n; i += 2) {\n            uvs[i] = u + regionUVs[i] * width;\n            uvs[i + 1] = v + regionUVs[i + 1] * height;\n        }\n    }\n    /** The parent mesh if this is a linked mesh, else null. A linked mesh shares the {@link #bones}, {@link #vertices},\n     * {@link #regionUVs}, {@link #triangles}, {@link #hullLength}, {@link #edges}, {@link #width}, and {@link #height} with the\n     * parent mesh, but may have a different {@link #name} or {@link #path} (and therefore a different texture). */\n    getParentMesh() {\n        return this.parentMesh;\n    }\n    /** @param parentMesh May be null. */\n    setParentMesh(parentMesh) {\n        this.parentMesh = parentMesh;\n        if (parentMesh) {\n            this.bones = parentMesh.bones;\n            this.vertices = parentMesh.vertices;\n            this.worldVerticesLength = parentMesh.worldVerticesLength;\n            this.regionUVs = parentMesh.regionUVs;\n            this.triangles = parentMesh.triangles;\n            this.hullLength = parentMesh.hullLength;\n            this.worldVerticesLength = parentMesh.worldVerticesLength;\n        }\n    }\n    copy() {\n        if (this.parentMesh)\n            return this.newLinkedMesh();\n        let copy = new MeshAttachment(this.name);\n        copy.region = this.region;\n        copy.path = this.path;\n        copy.color.setFromColor(this.color);\n        this.copyTo(copy);\n        copy.regionUVs = new Array(this.regionUVs.length);\n        Utils.arrayCopy(this.regionUVs, 0, copy.regionUVs, 0, this.regionUVs.length);\n        copy.uvs = new Array(this.uvs.length);\n        Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, this.uvs.length);\n        copy.triangles = new Array(this.triangles.length);\n        Utils.arrayCopy(this.triangles, 0, copy.triangles, 0, this.triangles.length);\n        copy.hullLength = this.hullLength;\n        // Nonessential.\n        if (this.edges) {\n            copy.edges = new Array(this.edges.length);\n            Utils.arrayCopy(this.edges, 0, copy.edges, 0, this.edges.length);\n        }\n        copy.width = this.width;\n        copy.height = this.height;\n        return copy;\n    }\n    /** Returns a new mesh with the {@link #parentMesh} set to this mesh's parent mesh, if any, else to this mesh. **/\n    newLinkedMesh() {\n        let copy = new MeshAttachment(this.name);\n        copy.region = this.region;\n        copy.path = this.path;\n        copy.color.setFromColor(this.color);\n        copy.deformAttachment = this.deformAttachment;\n        copy.setParentMesh(this.parentMesh ? this.parentMesh : this);\n        copy.updateUVs();\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Utils } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment whose vertices make up a composite Bezier curve.\n *\n * See {@link PathConstraint} and [Paths](http://esotericsoftware.com/spine-paths) in the Spine User Guide. */\nexport class PathAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        /** The lengths along the path in the setup pose from the start of the path to the end of each Bezier curve. */\n        this.lengths = null;\n        /** If true, the start and end knots are connected. */\n        this.closed = false;\n        /** If true, additional calculations are performed to make calculating positions along the path more accurate. If false, fewer\n         * calculations are performed but calculating positions along the path is less accurate. */\n        this.constantSpeed = false;\n        /** The color of the path as it was in Spine. Available only when nonessential data was exported. Paths are not usually\n         * rendered at runtime. */\n        this.color = new Color(1, 1, 1, 1);\n    }\n    copy() {\n        let copy = new PathAttachment(this.name);\n        this.copyTo(copy);\n        copy.lengths = new Array(this.lengths.length);\n        Utils.arrayCopy(this.lengths, 0, copy.lengths, 0, this.lengths.length);\n        copy.closed = closed;\n        copy.constantSpeed = this.constantSpeed;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aEF0dGFjaG1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvUGF0aEF0dGFjaG1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBYyxNQUFNLGNBQWMsQ0FBQztBQUU1RDs7OEdBRThHO0FBQzlHLE1BQU0sT0FBTyxjQUFlLFNBQVEsZ0JBQWdCO0lBZ0JuRCxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBZmIsK0dBQStHO1FBQy9HLFlBQU8sR0FBa0IsSUFBSSxDQUFDO1FBRTlCLHNEQUFzRDtRQUN0RCxXQUFNLEdBQUcsS0FBSyxDQUFDO1FBRWY7bUdBQzJGO1FBQzNGLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBRXRCO2tDQUMwQjtRQUMxQixVQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFJOUIsQ0FBQztJQUVELElBQUk7UUFDSCxJQUFJLElBQUksR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxDQUFTLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, MathUtils } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment which is a single point and a rotation. This can be used to spawn projectiles, particles, etc. A bone can be\n * used in similar ways, but a PointAttachment is slightly less expensive to compute and can be hidden, shown, and placed in a\n * skin.\n *\n * See [Point Attachments](http://esotericsoftware.com/spine-point-attachments) in the Spine User Guide. */\nexport class PointAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        /** The color of the point attachment as it was in Spine. Available only when nonessential data was exported. Point attachments\n         * are not usually rendered at runtime. */\n        this.color = new Color(0.38, 0.94, 0, 1);\n    }\n    computeWorldPosition(bone, point) {\n        point.x = this.x * bone.a + this.y * bone.b + bone.worldX;\n        point.y = this.x * bone.c + this.y * bone.d + bone.worldY;\n        return point;\n    }\n    computeWorldRotation(bone) {\n        let cos = MathUtils.cosDeg(this.rotation), sin = MathUtils.sinDeg(this.rotation);\n        let x = cos * bone.a + sin * bone.b;\n        let y = cos * bone.c + sin * bone.d;\n        return Math.atan2(y, x) * MathUtils.radDeg;\n    }\n    copy() {\n        let copy = new PointAttachment(this.name);\n        copy.x = this.x;\n        copy.y = this.y;\n        copy.rotation = this.rotation;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9pbnRBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL1BvaW50QXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLEtBQUssRUFBVyxTQUFTLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDckQsT0FBTyxFQUFFLGdCQUFnQixFQUFjLE1BQU0sY0FBYyxDQUFDO0FBRTVEOzs7OzJHQUkyRztBQUMzRyxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxnQkFBZ0I7SUFTcEQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQVRiLE1BQUMsR0FBVyxDQUFDLENBQUM7UUFDZCxNQUFDLEdBQVcsQ0FBQyxDQUFDO1FBQ2QsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUVyQjtrREFDMEM7UUFDMUMsVUFBSyxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBSXBDLENBQUM7SUFFRCxvQkFBb0IsQ0FBRSxJQUFVLEVBQUUsS0FBYztRQUMvQyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxRCxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxRCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFFRCxvQkFBb0IsQ0FBRSxJQUFVO1FBQy9CLElBQUksR0FBRyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEdBQUcsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqRixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUM7SUFDNUMsQ0FBQztJQUVELElBQUk7UUFDSCxJQUFJLElBQUksR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDOUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Utils } from \"../Utils\";\nimport { Attachment } from \"./Attachment\";\n/** An attachment that displays a textured quadrilateral.\n *\n * See [Region attachments](http://esotericsoftware.com/spine-regions) in the Spine User Guide. */\nexport class RegionAttachment extends Attachment {\n    constructor(name) {\n        super(name);\n        /** The local x translation. */\n        this.x = 0;\n        /** The local y translation. */\n        this.y = 0;\n        /** The local scaleX. */\n        this.scaleX = 1;\n        /** The local scaleY. */\n        this.scaleY = 1;\n        /** The local rotation. */\n        this.rotation = 0;\n        /** The width of the region attachment in Spine. */\n        this.width = 0;\n        /** The height of the region attachment in Spine. */\n        this.height = 0;\n        /** The color to tint the region attachment. */\n        this.color = new Color(1, 1, 1, 1);\n        /** The name of the texture region for this attachment. */\n        this.path = null;\n        this.rendererObject = null;\n        this.region = null;\n        /** For each of the 4 vertices, a pair of <code>x,y</code> values that is the local position of the vertex.\n         *\n         * See {@link #updateOffset()}. */\n        this.offset = Utils.newFloatArray(8);\n        this.uvs = Utils.newFloatArray(8);\n        this.tempColor = new Color(1, 1, 1, 1);\n    }\n    /** Calculates the {@link #offset} using the region settings. Must be called after changing region settings. */\n    updateOffset() {\n        let region = this.region;\n        let regionScaleX = this.width / this.region.originalWidth * this.scaleX;\n        let regionScaleY = this.height / this.region.originalHeight * this.scaleY;\n        let localX = -this.width / 2 * this.scaleX + this.region.offsetX * regionScaleX;\n        let localY = -this.height / 2 * this.scaleY + this.region.offsetY * regionScaleY;\n        let localX2 = localX + this.region.width * regionScaleX;\n        let localY2 = localY + this.region.height * regionScaleY;\n        let radians = this.rotation * Math.PI / 180;\n        let cos = Math.cos(radians);\n        let sin = Math.sin(radians);\n        let x = this.x, y = this.y;\n        let localXCos = localX * cos + x;\n        let localXSin = localX * sin;\n        let localYCos = localY * cos + y;\n        let localYSin = localY * sin;\n        let localX2Cos = localX2 * cos + x;\n        let localX2Sin = localX2 * sin;\n        let localY2Cos = localY2 * cos + y;\n        let localY2Sin = localY2 * sin;\n        let offset = this.offset;\n        offset[0] = localXCos - localYSin;\n        offset[1] = localYCos + localXSin;\n        offset[2] = localXCos - localY2Sin;\n        offset[3] = localY2Cos + localXSin;\n        offset[4] = localX2Cos - localY2Sin;\n        offset[5] = localY2Cos + localX2Sin;\n        offset[6] = localX2Cos - localYSin;\n        offset[7] = localYCos + localX2Sin;\n    }\n    setRegion(region) {\n        this.region = region;\n        let uvs = this.uvs;\n        if (region.degrees == 90) {\n            uvs[2] = region.u;\n            uvs[3] = region.v2;\n            uvs[4] = region.u;\n            uvs[5] = region.v;\n            uvs[6] = region.u2;\n            uvs[7] = region.v;\n            uvs[0] = region.u2;\n            uvs[1] = region.v2;\n        }\n        else {\n            uvs[0] = region.u;\n            uvs[1] = region.v2;\n            uvs[2] = region.u;\n            uvs[3] = region.v;\n            uvs[4] = region.u2;\n            uvs[5] = region.v;\n            uvs[6] = region.u2;\n            uvs[7] = region.v2;\n        }\n    }\n    /** Transforms the attachment's four vertices to world coordinates.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide.\n     * @param worldVertices The output world vertices. Must have a length >= `offset` + 8.\n     * @param offset The `worldVertices` index to begin writing values.\n     * @param stride The number of `worldVertices` entries between the value pairs written. */\n    computeWorldVertices(bone, worldVertices, offset, stride) {\n        let vertexOffset = this.offset;\n        let x = bone.worldX, y = bone.worldY;\n        let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n        let offsetX = 0, offsetY = 0;\n        offsetX = vertexOffset[0];\n        offsetY = vertexOffset[1];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // br\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[2];\n        offsetY = vertexOffset[3];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // bl\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[4];\n        offsetY = vertexOffset[5];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // ul\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[6];\n        offsetY = vertexOffset[7];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // ur\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n    }\n    copy() {\n        let copy = new RegionAttachment(this.name);\n        copy.region = this.region;\n        copy.rendererObject = this.rendererObject;\n        copy.path = this.path;\n        copy.x = this.x;\n        copy.y = this.y;\n        copy.scaleX = this.scaleX;\n        copy.scaleY = this.scaleY;\n        copy.rotation = this.rotation;\n        copy.width = this.width;\n        copy.height = this.height;\n        Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, 8);\n        Utils.arrayCopy(this.offset, 0, copy.offset, 0, 8);\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\nRegionAttachment.X1 = 0;\nRegionAttachment.Y1 = 1;\nRegionAttachment.C1R = 2;\nRegionAttachment.C1G = 3;\nRegionAttachment.C1B = 4;\nRegionAttachment.C1A = 5;\nRegionAttachment.U1 = 6;\nRegionAttachment.V1 = 7;\nRegionAttachment.X2 = 8;\nRegionAttachment.Y2 = 9;\nRegionAttachment.C2R = 10;\nRegionAttachment.C2G = 11;\nRegionAttachment.C2B = 12;\nRegionAttachment.C2A = 13;\nRegionAttachment.U2 = 14;\nRegionAttachment.V2 = 15;\nRegionAttachment.X3 = 16;\nRegionAttachment.Y3 = 17;\nRegionAttachment.C3R = 18;\nRegionAttachment.C3G = 19;\nRegionAttachment.C3B = 20;\nRegionAttachment.C3A = 21;\nRegionAttachment.U3 = 22;\nRegionAttachment.V3 = 23;\nRegionAttachment.X4 = 24;\nRegionAttachment.Y4 = 25;\nRegionAttachment.C4R = 26;\nRegionAttachment.C4G = 27;\nRegionAttachment.C4B = 28;\nRegionAttachment.C4A = 29;\nRegionAttachment.U4 = 30;\nRegionAttachment.V4 = 31;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BoundingBoxAttachment } from \"./attachments/BoundingBoxAttachment\";\nimport { ClippingAttachment } from \"./attachments/ClippingAttachment\";\nimport { MeshAttachment } from \"./attachments/MeshAttachment\";\nimport { PathAttachment } from \"./attachments/PathAttachment\";\nimport { PointAttachment } from \"./attachments/PointAttachment\";\nimport { RegionAttachment } from \"./attachments/RegionAttachment\";\n/** An {@link AttachmentLoader} that configures attachments using texture regions from an {@link TextureAtlas}.\n *\n * See [Loading skeleton data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the\n * Spine Runtimes Guide. */\nexport class AtlasAttachmentLoader {\n    constructor(atlas) {\n        this.atlas = null;\n        this.atlas = atlas;\n    }\n    newRegionAttachment(skin, name, path) {\n        let region = this.atlas.findRegion(path);\n        if (!region)\n            throw new Error(\"Region not found in atlas: \" + path + \" (region attachment: \" + name + \")\");\n        region.renderObject = region;\n        let attachment = new RegionAttachment(name);\n        attachment.setRegion(region);\n        return attachment;\n    }\n    newMeshAttachment(skin, name, path) {\n        let region = this.atlas.findRegion(path);\n        if (!region)\n            throw new Error(\"Region not found in atlas: \" + path + \" (mesh attachment: \" + name + \")\");\n        region.renderObject = region;\n        let attachment = new MeshAttachment(name);\n        attachment.region = region;\n        return attachment;\n    }\n    newBoundingBoxAttachment(skin, name) {\n        return new BoundingBoxAttachment(name);\n    }\n    newPathAttachment(skin, name) {\n        return new PathAttachment(name);\n    }\n    newPointAttachment(skin, name) {\n        return new PointAttachment(name);\n    }\n    newClippingAttachment(skin, name) {\n        return new ClippingAttachment(name);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXRsYXNBdHRhY2htZW50TG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0F0bGFzQXR0YWNobWVudExvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzlELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFJbEU7OzsyQkFHMkI7QUFDM0IsTUFBTSxPQUFPLHFCQUFxQjtJQUdqQyxZQUFhLEtBQW1CO1FBRmhDLFVBQUssR0FBaUIsSUFBSSxDQUFDO1FBRzFCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFRCxtQkFBbUIsQ0FBRSxJQUFVLEVBQUUsSUFBWSxFQUFFLElBQVk7UUFDMUQsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU07WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixHQUFHLElBQUksR0FBRyx1QkFBdUIsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDMUcsTUFBTSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUM7UUFDN0IsSUFBSSxVQUFVLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QyxVQUFVLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdCLE9BQU8sVUFBVSxDQUFDO0lBQ25CLENBQUM7SUFFRCxpQkFBaUIsQ0FBRSxJQUFVLEVBQUUsSUFBWSxFQUFFLElBQVk7UUFDeEQsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU07WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixHQUFHLElBQUksR0FBRyxxQkFBcUIsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDeEcsTUFBTSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUM7UUFDN0IsSUFBSSxVQUFVLEdBQUcsSUFBSSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDM0IsT0FBTyxVQUFVLENBQUM7SUFDbkIsQ0FBQztJQUVELHdCQUF3QixDQUFFLElBQVUsRUFBRSxJQUFZO1FBQ2pELE9BQU8sSUFBSSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsaUJBQWlCLENBQUUsSUFBVSxFQUFFLElBQVk7UUFDMUMsT0FBTyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsa0JBQWtCLENBQUUsSUFBVSxFQUFFLElBQVk7UUFDM0MsT0FBTyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQscUJBQXFCLENBQUUsSUFBVSxFQUFFLElBQVk7UUFDOUMsT0FBTyxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"./Utils\";\n/** Stores the setup pose for a {@link Bone}. */\nexport class BoneData {\n    constructor(index, name, parent) {\n        /** The index of the bone in {@link Skeleton#getBones()}. */\n        this.index = 0;\n        /** The name of the bone, which is unique across all bones in the skeleton. */\n        this.name = null;\n        /** @returns May be null. */\n        this.parent = null;\n        /** The bone's length. */\n        this.length = 0;\n        /** The local x translation. */\n        this.x = 0;\n        /** The local y translation. */\n        this.y = 0;\n        /** The local rotation. */\n        this.rotation = 0;\n        /** The local scaleX. */\n        this.scaleX = 1;\n        /** The local scaleY. */\n        this.scaleY = 1;\n        /** The local shearX. */\n        this.shearX = 0;\n        /** The local shearX. */\n        this.shearY = 0;\n        /** The transform mode for how parent world transforms affect this bone. */\n        this.transformMode = TransformMode.Normal;\n        /** When true, {@link Skeleton#updateWorldTransform()} only updates this bone if the {@link Skeleton#skin} contains this\n          * bone.\n          * @see Skin#bones */\n        this.skinRequired = false;\n        /** The color of the bone as it was in Spine. Available only when nonessential data was exported. Bones are not usually\n         * rendered at runtime. */\n        this.color = new Color();\n        if (index < 0)\n            throw new Error(\"index must be >= 0.\");\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.index = index;\n        this.name = name;\n        this.parent = parent;\n    }\n}\n/** Determines how a bone inherits world transforms from parent bones. */\nexport var TransformMode;\n(function (TransformMode) {\n    TransformMode[TransformMode[\"Normal\"] = 0] = \"Normal\";\n    TransformMode[TransformMode[\"OnlyTranslation\"] = 1] = \"OnlyTranslation\";\n    TransformMode[TransformMode[\"NoRotationOrReflection\"] = 2] = \"NoRotationOrReflection\";\n    TransformMode[TransformMode[\"NoScale\"] = 3] = \"NoScale\";\n    TransformMode[TransformMode[\"NoScaleOrReflection\"] = 4] = \"NoScaleOrReflection\";\n})(TransformMode || (TransformMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm9uZURhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQm9uZURhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFaEMsZ0RBQWdEO0FBQ2hELE1BQU0sT0FBTyxRQUFRO0lBOENwQixZQUFhLEtBQWEsRUFBRSxJQUFZLEVBQUUsTUFBZ0I7UUE3QzFELDREQUE0RDtRQUM1RCxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBRWxCLDhFQUE4RTtRQUM5RSxTQUFJLEdBQVcsSUFBSSxDQUFDO1FBRXBCLDRCQUE0QjtRQUM1QixXQUFNLEdBQWEsSUFBSSxDQUFDO1FBRXhCLHlCQUF5QjtRQUN6QixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBRW5CLCtCQUErQjtRQUMvQixNQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRU4sK0JBQStCO1FBQy9CLE1BQUMsR0FBRyxDQUFDLENBQUM7UUFFTiwwQkFBMEI7UUFDMUIsYUFBUSxHQUFHLENBQUMsQ0FBQztRQUViLHdCQUF3QjtRQUN4QixXQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRVgsd0JBQXdCO1FBQ3hCLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFFWCx3QkFBd0I7UUFDeEIsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUVYLHdCQUF3QjtRQUN4QixXQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRVgsMkVBQTJFO1FBQzNFLGtCQUFhLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQztRQUVyQzs7OEJBRXNCO1FBQ3RCLGlCQUFZLEdBQUcsS0FBSyxDQUFDO1FBRXJCO2tDQUMwQjtRQUMxQixVQUFLLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUduQixJQUFJLEtBQUssR0FBRyxDQUFDO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQ3RELElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3RCLENBQUM7Q0FDRDtBQUVELHlFQUF5RTtBQUN6RSxNQUFNLENBQU4sSUFBWSxhQUErRjtBQUEzRyxXQUFZLGFBQWE7SUFBRyxxREFBTSxDQUFBO0lBQUUsdUVBQWUsQ0FBQTtJQUFFLHFGQUFzQixDQUFBO0lBQUUsdURBQU8sQ0FBQTtJQUFFLCtFQUFtQixDQUFBO0FBQUMsQ0FBQyxFQUEvRixhQUFhLEtBQWIsYUFBYSxRQUFrRiJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TransformMode } from \"./BoneData\";\nimport { MathUtils } from \"./Utils\";\n/** Stores a bone's current pose.\n *\n * A bone has a local transform which is used to compute its world transform. A bone also has an applied transform, which is a\n * local transform that can be applied to compute the world transform. The local transform and applied transform may differ if a\n * constraint or application code modifies the world transform after it was computed from the local transform. */\nexport class Bone {\n    /** @param parent May be null. */\n    constructor(data, skeleton, parent) {\n        /** The bone's setup pose data. */\n        this.data = null;\n        /** The skeleton this bone belongs to. */\n        this.skeleton = null;\n        /** The parent bone, or null if this is the root bone. */\n        this.parent = null;\n        /** The immediate children of this bone. */\n        this.children = new Array();\n        /** The local x translation. */\n        this.x = 0;\n        /** The local y translation. */\n        this.y = 0;\n        /** The local rotation in degrees, counter clockwise. */\n        this.rotation = 0;\n        /** The local scaleX. */\n        this.scaleX = 0;\n        /** The local scaleY. */\n        this.scaleY = 0;\n        /** The local shearX. */\n        this.shearX = 0;\n        /** The local shearY. */\n        this.shearY = 0;\n        /** The applied local x translation. */\n        this.ax = 0;\n        /** The applied local y translation. */\n        this.ay = 0;\n        /** The applied local rotation in degrees, counter clockwise. */\n        this.arotation = 0;\n        /** The applied local scaleX. */\n        this.ascaleX = 0;\n        /** The applied local scaleY. */\n        this.ascaleY = 0;\n        /** The applied local shearX. */\n        this.ashearX = 0;\n        /** The applied local shearY. */\n        this.ashearY = 0;\n        /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.a = 0;\n        /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.b = 0;\n        /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.c = 0;\n        /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.d = 0;\n        /** The world X position. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.worldY = 0;\n        /** The world Y position. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.worldX = 0;\n        this.sorted = false;\n        this.active = false;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.skeleton = skeleton;\n        this.parent = parent;\n        this.setToSetupPose();\n    }\n    /** Returns false when the bone has not been computed because {@link BoneData#skinRequired} is true and the\n      * {@link Skeleton#skin active skin} does not {@link Skin#bones contain} this bone. */\n    isActive() {\n        return this.active;\n    }\n    /** Computes the world transform using the parent bone and this bone's local applied transform. */\n    update() {\n        this.updateWorldTransformWith(this.ax, this.ay, this.arotation, this.ascaleX, this.ascaleY, this.ashearX, this.ashearY);\n    }\n    /** Computes the world transform using the parent bone and this bone's local transform.\n     *\n     * See {@link #updateWorldTransformWith()}. */\n    updateWorldTransform() {\n        this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);\n    }\n    /** Computes the world transform using the parent bone and the specified local transform. The applied transform is set to the\n     * specified local transform. Child bones are not updated.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide. */\n    updateWorldTransformWith(x, y, rotation, scaleX, scaleY, shearX, shearY) {\n        this.ax = x;\n        this.ay = y;\n        this.arotation = rotation;\n        this.ascaleX = scaleX;\n        this.ascaleY = scaleY;\n        this.ashearX = shearX;\n        this.ashearY = shearY;\n        let parent = this.parent;\n        if (!parent) { // Root bone.\n            let skeleton = this.skeleton;\n            let rotationY = rotation + 90 + shearY;\n            let sx = skeleton.scaleX;\n            let sy = skeleton.scaleY;\n            this.a = MathUtils.cosDeg(rotation + shearX) * scaleX * sx;\n            this.b = MathUtils.cosDeg(rotationY) * scaleY * sx;\n            this.c = MathUtils.sinDeg(rotation + shearX) * scaleX * sy;\n            this.d = MathUtils.sinDeg(rotationY) * scaleY * sy;\n            this.worldX = x * sx + skeleton.x;\n            this.worldY = y * sy + skeleton.y;\n            return;\n        }\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        this.worldX = pa * x + pb * y + parent.worldX;\n        this.worldY = pc * x + pd * y + parent.worldY;\n        switch (this.data.transformMode) {\n            case TransformMode.Normal: {\n                let rotationY = rotation + 90 + shearY;\n                let la = MathUtils.cosDeg(rotation + shearX) * scaleX;\n                let lb = MathUtils.cosDeg(rotationY) * scaleY;\n                let lc = MathUtils.sinDeg(rotation + shearX) * scaleX;\n                let ld = MathUtils.sinDeg(rotationY) * scaleY;\n                this.a = pa * la + pb * lc;\n                this.b = pa * lb + pb * ld;\n                this.c = pc * la + pd * lc;\n                this.d = pc * lb + pd * ld;\n                return;\n            }\n            case TransformMode.OnlyTranslation: {\n                let rotationY = rotation + 90 + shearY;\n                this.a = MathUtils.cosDeg(rotation + shearX) * scaleX;\n                this.b = MathUtils.cosDeg(rotationY) * scaleY;\n                this.c = MathUtils.sinDeg(rotation + shearX) * scaleX;\n                this.d = MathUtils.sinDeg(rotationY) * scaleY;\n                break;\n            }\n            case TransformMode.NoRotationOrReflection: {\n                let s = pa * pa + pc * pc;\n                let prx = 0;\n                if (s > 0.0001) {\n                    s = Math.abs(pa * pd - pb * pc) / s;\n                    pa /= this.skeleton.scaleX;\n                    pc /= this.skeleton.scaleY;\n                    pb = pc * s;\n                    pd = pa * s;\n                    prx = Math.atan2(pc, pa) * MathUtils.radDeg;\n                }\n                else {\n                    pa = 0;\n                    pc = 0;\n                    prx = 90 - Math.atan2(pd, pb) * MathUtils.radDeg;\n                }\n                let rx = rotation + shearX - prx;\n                let ry = rotation + shearY - prx + 90;\n                let la = MathUtils.cosDeg(rx) * scaleX;\n                let lb = MathUtils.cosDeg(ry) * scaleY;\n                let lc = MathUtils.sinDeg(rx) * scaleX;\n                let ld = MathUtils.sinDeg(ry) * scaleY;\n                this.a = pa * la - pb * lc;\n                this.b = pa * lb - pb * ld;\n                this.c = pc * la + pd * lc;\n                this.d = pc * lb + pd * ld;\n                break;\n            }\n            case TransformMode.NoScale:\n            case TransformMode.NoScaleOrReflection: {\n                let cos = MathUtils.cosDeg(rotation);\n                let sin = MathUtils.sinDeg(rotation);\n                let za = (pa * cos + pb * sin) / this.skeleton.scaleX;\n                let zc = (pc * cos + pd * sin) / this.skeleton.scaleY;\n                let s = Math.sqrt(za * za + zc * zc);\n                if (s > 0.00001)\n                    s = 1 / s;\n                za *= s;\n                zc *= s;\n                s = Math.sqrt(za * za + zc * zc);\n                if (this.data.transformMode == TransformMode.NoScale\n                    && (pa * pd - pb * pc < 0) != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0))\n                    s = -s;\n                let r = Math.PI / 2 + Math.atan2(zc, za);\n                let zb = Math.cos(r) * s;\n                let zd = Math.sin(r) * s;\n                let la = MathUtils.cosDeg(shearX) * scaleX;\n                let lb = MathUtils.cosDeg(90 + shearY) * scaleY;\n                let lc = MathUtils.sinDeg(shearX) * scaleX;\n                let ld = MathUtils.sinDeg(90 + shearY) * scaleY;\n                this.a = za * la + zb * lc;\n                this.b = za * lb + zb * ld;\n                this.c = zc * la + zd * lc;\n                this.d = zc * lb + zd * ld;\n                break;\n            }\n        }\n        this.a *= this.skeleton.scaleX;\n        this.b *= this.skeleton.scaleX;\n        this.c *= this.skeleton.scaleY;\n        this.d *= this.skeleton.scaleY;\n    }\n    /** Sets this bone's local transform to the setup pose. */\n    setToSetupPose() {\n        let data = this.data;\n        this.x = data.x;\n        this.y = data.y;\n        this.rotation = data.rotation;\n        this.scaleX = data.scaleX;\n        this.scaleY = data.scaleY;\n        this.shearX = data.shearX;\n        this.shearY = data.shearY;\n    }\n    /** The world rotation for the X axis, calculated using {@link #a} and {@link #c}. */\n    getWorldRotationX() {\n        return Math.atan2(this.c, this.a) * MathUtils.radDeg;\n    }\n    /** The world rotation for the Y axis, calculated using {@link #b} and {@link #d}. */\n    getWorldRotationY() {\n        return Math.atan2(this.d, this.b) * MathUtils.radDeg;\n    }\n    /** The magnitude (always positive) of the world scale X, calculated using {@link #a} and {@link #c}. */\n    getWorldScaleX() {\n        return Math.sqrt(this.a * this.a + this.c * this.c);\n    }\n    /** The magnitude (always positive) of the world scale Y, calculated using {@link #b} and {@link #d}. */\n    getWorldScaleY() {\n        return Math.sqrt(this.b * this.b + this.d * this.d);\n    }\n    /** Computes the applied transform values from the world transform.\n     *\n     * If the world transform is modified (by a constraint, {@link #rotateWorld(float)}, etc) then this method should be called so\n     * the applied transform matches the world transform. The applied transform may be needed by other code (eg to apply other\n     * constraints).\n     *\n     * Some information is ambiguous in the world transform, such as -1,-1 scale versus 180 rotation. The applied transform after\n     * calling this method is equivalent to the local transform used to compute the world transform, but may not be identical. */\n    updateAppliedTransform() {\n        let parent = this.parent;\n        if (!parent) {\n            this.ax = this.worldX - this.skeleton.x;\n            this.ay = this.worldY - this.skeleton.y;\n            this.arotation = Math.atan2(this.c, this.a) * MathUtils.radDeg;\n            this.ascaleX = Math.sqrt(this.a * this.a + this.c * this.c);\n            this.ascaleY = Math.sqrt(this.b * this.b + this.d * this.d);\n            this.ashearX = 0;\n            this.ashearY = Math.atan2(this.a * this.b + this.c * this.d, this.a * this.d - this.b * this.c) * MathUtils.radDeg;\n            return;\n        }\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        let pid = 1 / (pa * pd - pb * pc);\n        let dx = this.worldX - parent.worldX, dy = this.worldY - parent.worldY;\n        this.ax = (dx * pd * pid - dy * pb * pid);\n        this.ay = (dy * pa * pid - dx * pc * pid);\n        let ia = pid * pd;\n        let id = pid * pa;\n        let ib = pid * pb;\n        let ic = pid * pc;\n        let ra = ia * this.a - ib * this.c;\n        let rb = ia * this.b - ib * this.d;\n        let rc = id * this.c - ic * this.a;\n        let rd = id * this.d - ic * this.b;\n        this.ashearX = 0;\n        this.ascaleX = Math.sqrt(ra * ra + rc * rc);\n        if (this.ascaleX > 0.0001) {\n            let det = ra * rd - rb * rc;\n            this.ascaleY = det / this.ascaleX;\n            this.ashearY = Math.atan2(ra * rb + rc * rd, det) * MathUtils.radDeg;\n            this.arotation = Math.atan2(rc, ra) * MathUtils.radDeg;\n        }\n        else {\n            this.ascaleX = 0;\n            this.ascaleY = Math.sqrt(rb * rb + rd * rd);\n            this.ashearY = 0;\n            this.arotation = 90 - Math.atan2(rd, rb) * MathUtils.radDeg;\n        }\n    }\n    /** Transforms a point from world coordinates to the bone's local coordinates. */\n    worldToLocal(world) {\n        let invDet = 1 / (this.a * this.d - this.b * this.c);\n        let x = world.x - this.worldX, y = world.y - this.worldY;\n        world.x = x * this.d * invDet - y * this.b * invDet;\n        world.y = y * this.a * invDet - x * this.c * invDet;\n        return world;\n    }\n    /** Transforms a point from the bone's local coordinates to world coordinates. */\n    localToWorld(local) {\n        let x = local.x, y = local.y;\n        local.x = x * this.a + y * this.b + this.worldX;\n        local.y = x * this.c + y * this.d + this.worldY;\n        return local;\n    }\n    /** Transforms a world rotation to a local rotation. */\n    worldToLocalRotation(worldRotation) {\n        let sin = MathUtils.sinDeg(worldRotation), cos = MathUtils.cosDeg(worldRotation);\n        return Math.atan2(this.a * sin - this.c * cos, this.d * cos - this.b * sin) * MathUtils.radDeg + this.rotation - this.shearX;\n    }\n    /** Transforms a local rotation to a world rotation. */\n    localToWorldRotation(localRotation) {\n        localRotation -= this.rotation - this.shearX;\n        let sin = MathUtils.sinDeg(localRotation), cos = MathUtils.cosDeg(localRotation);\n        return Math.atan2(cos * this.c + sin * this.d, cos * this.a + sin * this.b) * MathUtils.radDeg;\n    }\n    /** Rotates the world transform the specified amount.\n     * <p>\n     * After changes are made to the world transform, {@link #updateAppliedTransform()} should be called and {@link #update()} will\n     * need to be called on any child bones, recursively. */\n    rotateWorld(degrees) {\n        let a = this.a, b = this.b, c = this.c, d = this.d;\n        let cos = MathUtils.cosDeg(degrees), sin = MathUtils.sinDeg(degrees);\n        this.a = cos * a - sin * c;\n        this.b = cos * b - sin * d;\n        this.c = sin * a + cos * c;\n        this.d = sin * b + cos * d;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** The base class for all constraint datas. */\nexport class ConstraintData {\n    constructor(name, order, skinRequired) {\n        this.name = name;\n        this.order = order;\n        this.skinRequired = skinRequired;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc3RyYWludERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ29uc3RyYWludERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLCtDQUErQztBQUMvQyxNQUFNLE9BQWdCLGNBQWM7SUFDbkMsWUFBb0IsSUFBWSxFQUFTLEtBQWEsRUFBUyxZQUFxQjtRQUFoRSxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQVMsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUFTLGlCQUFZLEdBQVosWUFBWSxDQUFTO0lBQUksQ0FBQztDQUN6RiJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlas } from \"./TextureAtlas\";\nexport class AssetManagerBase {\n    constructor(textureLoader, pathPrefix = \"\", downloader = null) {\n        this.pathPrefix = null;\n        this.assets = {};\n        this.errors = {};\n        this.toLoad = 0;\n        this.loaded = 0;\n        this.textureLoader = textureLoader;\n        this.pathPrefix = pathPrefix;\n        this.downloader = downloader || new Downloader();\n    }\n    start(path) {\n        this.toLoad++;\n        return this.pathPrefix + path;\n    }\n    success(callback, path, asset) {\n        this.toLoad--;\n        this.loaded++;\n        this.assets[path] = asset;\n        if (callback)\n            callback(path, asset);\n    }\n    error(callback, path, message) {\n        this.toLoad--;\n        this.loaded++;\n        this.errors[path] = message;\n        if (callback)\n            callback(path, message);\n    }\n    setRawDataURI(path, data) {\n        this.downloader.rawDataUris[this.pathPrefix + path] = data;\n    }\n    loadBinary(path, success = null, error = null) {\n        path = this.start(path);\n        this.downloader.downloadBinary(path, (data) => {\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            this.error(error, path, `Couldn't load binary ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadText(path, success = null, error = null) {\n        path = this.start(path);\n        this.downloader.downloadText(path, (data) => {\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            this.error(error, path, `Couldn't load text ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadJson(path, success = null, error = null) {\n        path = this.start(path);\n        this.downloader.downloadJson(path, (data) => {\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            this.error(error, path, `Couldn't load JSON ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadTexture(path, success = null, error = null) {\n        path = this.start(path);\n        let isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document);\n        let isWebWorker = !isBrowser; // && typeof importScripts !== 'undefined';\n        if (isWebWorker) {\n            fetch(path, { mode: \"cors\" }).then((response) => {\n                if (response.ok)\n                    return response.blob();\n                this.error(error, path, `Couldn't load image: ${path}`);\n                return null;\n            }).then((blob) => {\n                return blob ? createImageBitmap(blob, { premultiplyAlpha: \"none\", colorSpaceConversion: \"none\" }) : null;\n            }).then((bitmap) => {\n                if (bitmap)\n                    this.success(success, path, this.textureLoader(bitmap));\n            });\n        }\n        else {\n            let image = new Image();\n            image.crossOrigin = \"anonymous\";\n            image.onload = () => {\n                this.success(success, path, this.textureLoader(image));\n            };\n            image.onerror = () => {\n                this.error(error, path, `Couldn't load image: ${path}`);\n            };\n            if (this.downloader.rawDataUris[path])\n                path = this.downloader.rawDataUris[path];\n            image.src = path;\n        }\n    }\n    loadTextureAtlas(path, success = null, error = null, fileAlias = null) {\n        let index = path.lastIndexOf(\"/\");\n        let parent = index >= 0 ? path.substring(0, index + 1) : \"\";\n        path = this.start(path);\n        this.downloader.downloadText(path, (atlasText) => {\n            try {\n                let atlas = new TextureAtlas(atlasText);\n                let toLoad = atlas.pages.length, abort = false;\n                for (let page of atlas.pages) {\n                    this.loadTexture(fileAlias == null ? parent + page.name : fileAlias[page.name], (imagePath, texture) => {\n                        if (!abort) {\n                            page.setTexture(texture);\n                            if (--toLoad == 0)\n                                this.success(success, path, atlas);\n                        }\n                    }, (imagePath, message) => {\n                        if (!abort)\n                            this.error(error, path, `Couldn't load texture atlas ${path} page image: ${imagePath}`);\n                        abort = true;\n                    });\n                }\n            }\n            catch (e) {\n                this.error(error, path, `Couldn't parse texture atlas ${path}: ${e.message}`);\n            }\n        }, (status, responseText) => {\n            this.error(error, path, `Couldn't load texture atlas ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    get(path) {\n        return this.assets[this.pathPrefix + path];\n    }\n    require(path) {\n        path = this.pathPrefix + path;\n        let asset = this.assets[path];\n        if (asset)\n            return asset;\n        let error = this.errors[path];\n        throw Error(\"Asset not found: \" + path + (error ? \"\\n\" + error : \"\"));\n    }\n    remove(path) {\n        path = this.pathPrefix + path;\n        let asset = this.assets[path];\n        if (asset.dispose)\n            asset.dispose();\n        delete this.assets[path];\n        return asset;\n    }\n    removeAll() {\n        for (let key in this.assets) {\n            let asset = this.assets[key];\n            if (asset.dispose)\n                asset.dispose();\n        }\n        this.assets = {};\n    }\n    isLoadingComplete() {\n        return this.toLoad == 0;\n    }\n    getToLoad() {\n        return this.toLoad;\n    }\n    getLoaded() {\n        return this.loaded;\n    }\n    dispose() {\n        this.removeAll();\n    }\n    hasErrors() {\n        return Object.keys(this.errors).length > 0;\n    }\n    getErrors() {\n        return this.errors;\n    }\n}\nexport class Downloader {\n    constructor() {\n        this.callbacks = {};\n        this.rawDataUris = {};\n    }\n    dataUriToString(dataUri) {\n        if (!dataUri.startsWith(\"data:\")) {\n            throw new Error(\"Not a data URI.\");\n        }\n        let base64Idx = dataUri.indexOf(\"base64,\");\n        if (base64Idx != -1) {\n            base64Idx += \"base64,\".length;\n            return atob(dataUri.substr(base64Idx));\n        }\n        else {\n            return dataUri.substr(dataUri.indexOf(\",\") + 1);\n        }\n    }\n    base64ToUint8Array(base64) {\n        var binary_string = window.atob(base64);\n        var len = binary_string.length;\n        var bytes = new Uint8Array(len);\n        for (var i = 0; i < len; i++) {\n            bytes[i] = binary_string.charCodeAt(i);\n        }\n        return bytes;\n    }\n    dataUriToUint8Array(dataUri) {\n        if (!dataUri.startsWith(\"data:\")) {\n            throw new Error(\"Not a data URI.\");\n        }\n        let base64Idx = dataUri.indexOf(\"base64,\");\n        if (base64Idx == -1)\n            throw new Error(\"Not a binary data URI.\");\n        base64Idx += \"base64,\".length;\n        return this.base64ToUint8Array(dataUri.substr(base64Idx));\n    }\n    downloadText(url, success, error) {\n        if (this.start(url, success, error))\n            return;\n        if (this.rawDataUris[url]) {\n            try {\n                let dataUri = this.rawDataUris[url];\n                this.finish(url, 200, this.dataUriToString(dataUri));\n            }\n            catch (e) {\n                this.finish(url, 400, JSON.stringify(e));\n            }\n            return;\n        }\n        let request = new XMLHttpRequest();\n        request.overrideMimeType(\"text/html\");\n        request.open(\"GET\", url, true);\n        let done = () => {\n            this.finish(url, request.status, request.responseText);\n        };\n        request.onload = done;\n        request.onerror = done;\n        request.send();\n    }\n    downloadJson(url, success, error) {\n        this.downloadText(url, (data) => {\n            success(JSON.parse(data));\n        }, error);\n    }\n    downloadBinary(url, success, error) {\n        if (this.start(url, success, error))\n            return;\n        if (this.rawDataUris[url]) {\n            try {\n                let dataUri = this.rawDataUris[url];\n                this.finish(url, 200, this.dataUriToUint8Array(dataUri));\n            }\n            catch (e) {\n                this.finish(url, 400, JSON.stringify(e));\n            }\n            return;\n        }\n        let request = new XMLHttpRequest();\n        request.open(\"GET\", url, true);\n        request.responseType = \"arraybuffer\";\n        let onerror = () => {\n            this.finish(url, request.status, request.response);\n        };\n        request.onload = () => {\n            if (request.status == 200 || request.status == 0)\n                this.finish(url, 200, new Uint8Array(request.response));\n            else\n                onerror();\n        };\n        request.onerror = onerror;\n        request.send();\n    }\n    start(url, success, error) {\n        let callbacks = this.callbacks[url];\n        try {\n            if (callbacks)\n                return true;\n            this.callbacks[url] = callbacks = [];\n        }\n        finally {\n            callbacks.push(success, error);\n        }\n    }\n    finish(url, status, data) {\n        let callbacks = this.callbacks[url];\n        delete this.callbacks[url];\n        let args = status == 200 || status == 0 ? [data] : [status, data];\n        for (let i = args.length - 1, n = callbacks.length; i < n; i += 2)\n            callbacks[i].apply(null, args);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the current pose values for an {@link Event}.\n *\n * See Timeline {@link Timeline#apply()},\n * AnimationStateListener {@link AnimationStateListener#event()}, and\n * [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nexport class Event {\n    constructor(time, data) {\n        this.data = null;\n        this.intValue = 0;\n        this.floatValue = 0;\n        this.stringValue = null;\n        this.time = 0;\n        this.volume = 0;\n        this.balance = 0;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        this.time = time;\n        this.data = data;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvRXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSS9FOzs7O2lGQUlpRjtBQUNqRixNQUFNLE9BQU8sS0FBSztJQVNqQixZQUFhLElBQVksRUFBRSxJQUFlO1FBUjFDLFNBQUksR0FBYyxJQUFJLENBQUM7UUFDdkIsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLGdCQUFXLEdBQVcsSUFBSSxDQUFDO1FBQzNCLFNBQUksR0FBVyxDQUFDLENBQUM7UUFDakIsV0FBTSxHQUFXLENBQUMsQ0FBQztRQUNuQixZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBR25CLElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ2xCLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose values for an {@link Event}.\n *\n * See [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nexport class EventData {\n    constructor(name) {\n        this.name = null;\n        this.intValue = 0;\n        this.floatValue = 0;\n        this.stringValue = null;\n        this.audioPath = null;\n        this.volume = 0;\n        this.balance = 0;\n        this.name = name;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0V2ZW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0U7O3FGQUVxRjtBQUNyRixNQUFNLE9BQU8sU0FBUztJQVNyQixZQUFhLElBQVk7UUFSekIsU0FBSSxHQUFXLElBQUksQ0FBQztRQUNwQixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBQ3JCLGVBQVUsR0FBVyxDQUFDLENBQUM7UUFDdkIsZ0JBQVcsR0FBVyxJQUFJLENBQUM7UUFDM0IsY0FBUyxHQUFXLElBQUksQ0FBQztRQUN6QixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBQ25CLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFHbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbEIsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TransformMode } from \"./BoneData\";\nimport { MathUtils } from \"./Utils\";\n/** Stores the current pose for an IK constraint. An IK constraint adjusts the rotation of 1 or 2 constrained bones so the tip of\n * the last bone is as close to the target bone as possible.\n *\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraint {\n    constructor(data, skeleton) {\n        /** The IK constraint's setup pose data. */\n        this.data = null;\n        /** The bones that will be modified by this IK constraint. */\n        this.bones = null;\n        /** The bone that is the IK target. */\n        this.target = null;\n        /** Controls the bend direction of the IK bones, either 1 or -1. */\n        this.bendDirection = 0;\n        /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n        this.compress = false;\n        /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n         * and the parent bone has local nonuniform scale, stretch is not applied. */\n        this.stretch = false;\n        /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n        this.mix = 1;\n        /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n        this.softness = 0;\n        this.active = false;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.mix = data.mix;\n        this.softness = data.softness;\n        this.bendDirection = data.bendDirection;\n        this.compress = data.compress;\n        this.stretch = data.stretch;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++)\n            this.bones.push(skeleton.findBone(data.bones[i].name));\n        this.target = skeleton.findBone(data.target.name);\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        if (this.mix == 0)\n            return;\n        let target = this.target;\n        let bones = this.bones;\n        switch (bones.length) {\n            case 1:\n                this.apply1(bones[0], target.worldX, target.worldY, this.compress, this.stretch, this.data.uniform, this.mix);\n                break;\n            case 2:\n                this.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.stretch, this.data.uniform, this.softness, this.mix);\n                break;\n        }\n    }\n    /** Applies 1 bone IK. The target is specified in the world coordinate system. */\n    apply1(bone, targetX, targetY, compress, stretch, uniform, alpha) {\n        let p = bone.parent;\n        let pa = p.a, pb = p.b, pc = p.c, pd = p.d;\n        let rotationIK = -bone.ashearX - bone.arotation, tx = 0, ty = 0;\n        switch (bone.data.transformMode) {\n            case TransformMode.OnlyTranslation:\n                tx = targetX - bone.worldX;\n                ty = targetY - bone.worldY;\n                break;\n            case TransformMode.NoRotationOrReflection:\n                let s = Math.abs(pa * pd - pb * pc) / (pa * pa + pc * pc);\n                let sa = pa / bone.skeleton.scaleX;\n                let sc = pc / bone.skeleton.scaleY;\n                pb = -sc * s * bone.skeleton.scaleX;\n                pd = sa * s * bone.skeleton.scaleY;\n                rotationIK += Math.atan2(sc, sa) * MathUtils.radDeg;\n            // Fall through\n            default:\n                let x = targetX - p.worldX, y = targetY - p.worldY;\n                let d = pa * pd - pb * pc;\n                tx = (x * pd - y * pb) / d - bone.ax;\n                ty = (y * pa - x * pc) / d - bone.ay;\n        }\n        rotationIK += Math.atan2(ty, tx) * MathUtils.radDeg;\n        if (bone.ascaleX < 0)\n            rotationIK += 180;\n        if (rotationIK > 180)\n            rotationIK -= 360;\n        else if (rotationIK < -180)\n            rotationIK += 360;\n        let sx = bone.ascaleX, sy = bone.ascaleY;\n        if (compress || stretch) {\n            switch (bone.data.transformMode) {\n                case TransformMode.NoScale:\n                case TransformMode.NoScaleOrReflection:\n                    tx = targetX - bone.worldX;\n                    ty = targetY - bone.worldY;\n            }\n            let b = bone.data.length * sx, dd = Math.sqrt(tx * tx + ty * ty);\n            if ((compress && dd < b) || (stretch && dd > b) && b > 0.0001) {\n                let s = (dd / b - 1) * alpha + 1;\n                sx *= s;\n                if (uniform)\n                    sy *= s;\n            }\n        }\n        bone.updateWorldTransformWith(bone.ax, bone.ay, bone.arotation + rotationIK * alpha, sx, sy, bone.ashearX, bone.ashearY);\n    }\n    /** Applies 2 bone IK. The target is specified in the world coordinate system.\n     * @param child A direct descendant of the parent bone. */\n    apply2(parent, child, targetX, targetY, bendDir, stretch, uniform, softness, alpha) {\n        let px = parent.ax, py = parent.ay, psx = parent.ascaleX, psy = parent.ascaleY, sx = psx, sy = psy, csx = child.ascaleX;\n        let os1 = 0, os2 = 0, s2 = 0;\n        if (psx < 0) {\n            psx = -psx;\n            os1 = 180;\n            s2 = -1;\n        }\n        else {\n            os1 = 0;\n            s2 = 1;\n        }\n        if (psy < 0) {\n            psy = -psy;\n            s2 = -s2;\n        }\n        if (csx < 0) {\n            csx = -csx;\n            os2 = 180;\n        }\n        else\n            os2 = 0;\n        let cx = child.ax, cy = 0, cwx = 0, cwy = 0, a = parent.a, b = parent.b, c = parent.c, d = parent.d;\n        let u = Math.abs(psx - psy) <= 0.0001;\n        if (!u || stretch) {\n            cy = 0;\n            cwx = a * cx + parent.worldX;\n            cwy = c * cx + parent.worldY;\n        }\n        else {\n            cy = child.ay;\n            cwx = a * cx + b * cy + parent.worldX;\n            cwy = c * cx + d * cy + parent.worldY;\n        }\n        let pp = parent.parent;\n        a = pp.a;\n        b = pp.b;\n        c = pp.c;\n        d = pp.d;\n        let id = 1 / (a * d - b * c), x = cwx - pp.worldX, y = cwy - pp.worldY;\n        let dx = (x * d - y * b) * id - px, dy = (y * a - x * c) * id - py;\n        let l1 = Math.sqrt(dx * dx + dy * dy), l2 = child.data.length * csx, a1, a2;\n        if (l1 < 0.0001) {\n            this.apply1(parent, targetX, targetY, false, stretch, false, alpha);\n            child.updateWorldTransformWith(cx, cy, 0, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n            return;\n        }\n        x = targetX - pp.worldX;\n        y = targetY - pp.worldY;\n        let tx = (x * d - y * b) * id - px, ty = (y * a - x * c) * id - py;\n        let dd = tx * tx + ty * ty;\n        if (softness != 0) {\n            softness *= psx * (csx + 1) * 0.5;\n            let td = Math.sqrt(dd), sd = td - l1 - l2 * psx + softness;\n            if (sd > 0) {\n                let p = Math.min(1, sd / (softness * 2)) - 1;\n                p = (sd - softness * (1 - p * p)) / td;\n                tx -= p * tx;\n                ty -= p * ty;\n                dd = tx * tx + ty * ty;\n            }\n        }\n        outer: if (u) {\n            l2 *= psx;\n            let cos = (dd - l1 * l1 - l2 * l2) / (2 * l1 * l2);\n            if (cos < -1) {\n                cos = -1;\n                a2 = Math.PI * bendDir;\n            }\n            else if (cos > 1) {\n                cos = 1;\n                a2 = 0;\n                if (stretch) {\n                    a = (Math.sqrt(dd) / (l1 + l2) - 1) * alpha + 1;\n                    sx *= a;\n                    if (uniform)\n                        sy *= a;\n                }\n            }\n            else\n                a2 = Math.acos(cos) * bendDir;\n            a = l1 + l2 * cos;\n            b = l2 * Math.sin(a2);\n            a1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\n        }\n        else {\n            a = psx * l2;\n            b = psy * l2;\n            let aa = a * a, bb = b * b, ta = Math.atan2(ty, tx);\n            c = bb * l1 * l1 + aa * dd - aa * bb;\n            let c1 = -2 * bb * l1, c2 = bb - aa;\n            d = c1 * c1 - 4 * c2 * c;\n            if (d >= 0) {\n                let q = Math.sqrt(d);\n                if (c1 < 0)\n                    q = -q;\n                q = -(c1 + q) * 0.5;\n                let r0 = q / c2, r1 = c / q;\n                let r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\n                if (r * r <= dd) {\n                    y = Math.sqrt(dd - r * r) * bendDir;\n                    a1 = ta - Math.atan2(y, r);\n                    a2 = Math.atan2(y / psy, (r - l1) / psx);\n                    break outer;\n                }\n            }\n            let minAngle = MathUtils.PI, minX = l1 - a, minDist = minX * minX, minY = 0;\n            let maxAngle = 0, maxX = l1 + a, maxDist = maxX * maxX, maxY = 0;\n            c = -a * l1 / (aa - bb);\n            if (c >= -1 && c <= 1) {\n                c = Math.acos(c);\n                x = a * Math.cos(c) + l1;\n                y = b * Math.sin(c);\n                d = x * x + y * y;\n                if (d < minDist) {\n                    minAngle = c;\n                    minDist = d;\n                    minX = x;\n                    minY = y;\n                }\n                if (d > maxDist) {\n                    maxAngle = c;\n                    maxDist = d;\n                    maxX = x;\n                    maxY = y;\n                }\n            }\n            if (dd <= (minDist + maxDist) * 0.5) {\n                a1 = ta - Math.atan2(minY * bendDir, minX);\n                a2 = minAngle * bendDir;\n            }\n            else {\n                a1 = ta - Math.atan2(maxY * bendDir, maxX);\n                a2 = maxAngle * bendDir;\n            }\n        }\n        let os = Math.atan2(cy, cx) * s2;\n        let rotation = parent.arotation;\n        a1 = (a1 - os) * MathUtils.radDeg + os1 - rotation;\n        if (a1 > 180)\n            a1 -= 360;\n        else if (a1 < -180) //\n            a1 += 360;\n        parent.updateWorldTransformWith(px, py, rotation + a1 * alpha, sx, sy, 0, 0);\n        rotation = child.arotation;\n        a2 = ((a2 + os) * MathUtils.radDeg - child.ashearX) * s2 + os2 - rotation;\n        if (a2 > 180)\n            a2 -= 360;\n        else if (a2 < -180) //\n            a2 += 360;\n        child.updateWorldTransformWith(cx, cy, rotation + a2 * alpha, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData\";\n/** Stores the setup pose for an {@link IkConstraint}.\n * <p>\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraintData extends ConstraintData {\n    constructor(name) {\n        super(name, 0, false);\n        /** The bones that are constrained by this IK constraint. */\n        this.bones = new Array();\n        /** The bone that is the IK target. */\n        this.target = null;\n        /** Controls the bend direction of the IK bones, either 1 or -1. */\n        this.bendDirection = 1;\n        /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n        this.compress = false;\n        /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n         * and the parent bone has local nonuniform scale, stretch is not applied. */\n        this.stretch = false;\n        /** When true, only a single bone is being constrained, and {@link #getCompress()} or {@link #getStretch()} is used, the bone\n         * is scaled on both the X and Y axes. */\n        this.uniform = false;\n        /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n        this.mix = 1;\n        /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n        this.softness = 0;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWtDb25zdHJhaW50RGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ja0NvbnN0cmFpbnREYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHbEQ7O3FHQUVxRztBQUNyRyxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsY0FBYztJQTJCbkQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBM0J2Qiw0REFBNEQ7UUFDNUQsVUFBSyxHQUFHLElBQUksS0FBSyxFQUFZLENBQUM7UUFFOUIsc0NBQXNDO1FBQ3RDLFdBQU0sR0FBYSxJQUFJLENBQUM7UUFFeEIsbUVBQW1FO1FBQ25FLGtCQUFhLEdBQUcsQ0FBQyxDQUFDO1FBRWxCLHlIQUF5SDtRQUN6SCxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpCO3FGQUM2RTtRQUM3RSxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBRWhCO2lEQUN5QztRQUN6QyxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBRWhCLG9HQUFvRztRQUNwRyxRQUFHLEdBQUcsQ0FBQyxDQUFDO1FBRVIsaUdBQWlHO1FBQ2pHLGFBQVEsR0FBRyxDQUFDLENBQUM7SUFJYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData\";\n/** Stores the setup pose for a {@link PathConstraint}.\n *\n * See [path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nexport class PathConstraintData extends ConstraintData {\n    constructor(name) {\n        super(name, 0, false);\n        /** The bones that will be modified by this path constraint. */\n        this.bones = new Array();\n        /** The slot whose path attachment will be used to constrained the bones. */\n        this.target = null;\n        /** The mode for positioning the first bone on the path. */\n        this.positionMode = null;\n        /** The mode for positioning the bones after the first bone on the path. */\n        this.spacingMode = null;\n        /** The mode for adjusting the rotation of the bones. */\n        this.rotateMode = null;\n        /** An offset added to the constrained bone rotation. */\n        this.offsetRotation = 0;\n        /** The position along the path. */\n        this.position = 0;\n        /** The spacing between bones. */\n        this.spacing = 0;\n        this.mixRotate = 0;\n        this.mixX = 0;\n        this.mixY = 0;\n    }\n}\n/** Controls how the first bone is positioned along the path.\n *\n * See [position](http://esotericsoftware.com/spine-path-constraints#Position) in the Spine User Guide. */\nexport var PositionMode;\n(function (PositionMode) {\n    PositionMode[PositionMode[\"Fixed\"] = 0] = \"Fixed\";\n    PositionMode[PositionMode[\"Percent\"] = 1] = \"Percent\";\n})(PositionMode || (PositionMode = {}));\n/** Controls how bones after the first bone are positioned along the path.\n *\n * See [spacing](http://esotericsoftware.com/spine-path-constraints#Spacing) in the Spine User Guide. */\nexport var SpacingMode;\n(function (SpacingMode) {\n    SpacingMode[SpacingMode[\"Length\"] = 0] = \"Length\";\n    SpacingMode[SpacingMode[\"Fixed\"] = 1] = \"Fixed\";\n    SpacingMode[SpacingMode[\"Percent\"] = 2] = \"Percent\";\n    SpacingMode[SpacingMode[\"Proportional\"] = 3] = \"Proportional\";\n})(SpacingMode || (SpacingMode = {}));\n/** Controls how bones are rotated, translated, and scaled to match the path.\n *\n * See [rotate mix](http://esotericsoftware.com/spine-path-constraints#Rotate-mix) in the Spine User Guide. */\nexport var RotateMode;\n(function (RotateMode) {\n    RotateMode[RotateMode[\"Tangent\"] = 0] = \"Tangent\";\n    RotateMode[RotateMode[\"Chain\"] = 1] = \"Chain\";\n    RotateMode[RotateMode[\"ChainScale\"] = 2] = \"ChainScale\";\n})(RotateMode || (RotateMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aENvbnN0cmFpbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1BhdGhDb25zdHJhaW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBSWxEOzt5R0FFeUc7QUFDekcsTUFBTSxPQUFPLGtCQUFtQixTQUFRLGNBQWM7SUE4QnJELFlBQWEsSUFBWTtRQUN4QixLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQTdCdkIsK0RBQStEO1FBQy9ELFVBQUssR0FBRyxJQUFJLEtBQUssRUFBWSxDQUFDO1FBRTlCLDRFQUE0RTtRQUM1RSxXQUFNLEdBQWEsSUFBSSxDQUFDO1FBRXhCLDJEQUEyRDtRQUMzRCxpQkFBWSxHQUFpQixJQUFJLENBQUM7UUFFbEMsMkVBQTJFO1FBQzNFLGdCQUFXLEdBQWdCLElBQUksQ0FBQztRQUVoQyx3REFBd0Q7UUFDeEQsZUFBVSxHQUFlLElBQUksQ0FBQztRQUU5Qix3REFBd0Q7UUFDeEQsbUJBQWMsR0FBVyxDQUFDLENBQUM7UUFFM0IsbUNBQW1DO1FBQ25DLGFBQVEsR0FBVyxDQUFDLENBQUM7UUFFckIsaUNBQWlDO1FBQ2pDLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFFcEIsY0FBUyxHQUFHLENBQUMsQ0FBQztRQUNkLFNBQUksR0FBRyxDQUFDLENBQUM7UUFDVCxTQUFJLEdBQUcsQ0FBQyxDQUFDO0lBSVQsQ0FBQztDQUNEO0FBRUQ7OzBHQUUwRztBQUMxRyxNQUFNLENBQU4sSUFBWSxZQUErQjtBQUEzQyxXQUFZLFlBQVk7SUFBRyxpREFBSyxDQUFBO0lBQUUscURBQU8sQ0FBQTtBQUFDLENBQUMsRUFBL0IsWUFBWSxLQUFaLFlBQVksUUFBbUI7QUFFM0M7O3dHQUV3RztBQUN4RyxNQUFNLENBQU4sSUFBWSxXQUFvRDtBQUFoRSxXQUFZLFdBQVc7SUFBRyxpREFBTSxDQUFBO0lBQUUsK0NBQUssQ0FBQTtJQUFFLG1EQUFPLENBQUE7SUFBRSw2REFBWSxDQUFBO0FBQUMsQ0FBQyxFQUFwRCxXQUFXLEtBQVgsV0FBVyxRQUF5QztBQUVoRTs7OEdBRThHO0FBQzlHLE1BQU0sQ0FBTixJQUFZLFVBQXlDO0FBQXJELFdBQVksVUFBVTtJQUFHLGlEQUFPLENBQUE7SUFBRSw2Q0FBSyxDQUFBO0lBQUUsdURBQVUsQ0FBQTtBQUFDLENBQUMsRUFBekMsVUFBVSxLQUFWLFVBQVUsUUFBK0IifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { PathAttachment } from \"./attachments/PathAttachment\";\nimport { RotateMode, SpacingMode, PositionMode } from \"./PathConstraintData\";\nimport { Utils, MathUtils } from \"./Utils\";\n/** Stores the current pose for a path constraint. A path constraint adjusts the rotation, translation, and scale of the\n * constrained bones so they follow a {@link PathAttachment}.\n *\n * See [Path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nexport class PathConstraint {\n    constructor(data, skeleton) {\n        /** The path constraint's setup pose data. */\n        this.data = null;\n        /** The bones that will be modified by this path constraint. */\n        this.bones = null;\n        /** The slot whose path attachment will be used to constrained the bones. */\n        this.target = null;\n        /** The position along the path. */\n        this.position = 0;\n        /** The spacing between bones. */\n        this.spacing = 0;\n        this.mixRotate = 0;\n        this.mixX = 0;\n        this.mixY = 0;\n        this.spaces = new Array();\n        this.positions = new Array();\n        this.world = new Array();\n        this.curves = new Array();\n        this.lengths = new Array();\n        this.segments = new Array();\n        this.active = false;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0, n = data.bones.length; i < n; i++)\n            this.bones.push(skeleton.findBone(data.bones[i].name));\n        this.target = skeleton.findSlot(data.target.name);\n        this.position = data.position;\n        this.spacing = data.spacing;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        let attachment = this.target.getAttachment();\n        if (!(attachment instanceof PathAttachment))\n            return;\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY;\n        if (mixRotate == 0 && mixX == 0 && mixY == 0)\n            return;\n        let data = this.data;\n        let tangents = data.rotateMode == RotateMode.Tangent, scale = data.rotateMode == RotateMode.ChainScale;\n        let bones = this.bones;\n        let boneCount = bones.length, spacesCount = tangents ? boneCount : boneCount + 1;\n        let spaces = Utils.setArraySize(this.spaces, spacesCount), lengths = scale ? this.lengths = Utils.setArraySize(this.lengths, boneCount) : null;\n        let spacing = this.spacing;\n        switch (data.spacingMode) {\n            case SpacingMode.Percent:\n                if (scale) {\n                    for (let i = 0, n = spacesCount - 1; i < n; i++) {\n                        let bone = bones[i];\n                        let setupLength = bone.data.length;\n                        if (setupLength < PathConstraint.epsilon)\n                            lengths[i] = 0;\n                        else {\n                            let x = setupLength * bone.a, y = setupLength * bone.c;\n                            lengths[i] = Math.sqrt(x * x + y * y);\n                        }\n                    }\n                }\n                Utils.arrayFill(spaces, 1, spacesCount, spacing);\n                break;\n            case SpacingMode.Proportional:\n                let sum = 0;\n                for (let i = 0, n = spacesCount - 1; i < n;) {\n                    let bone = bones[i];\n                    let setupLength = bone.data.length;\n                    if (setupLength < PathConstraint.epsilon) {\n                        if (scale)\n                            lengths[i] = 0;\n                        spaces[++i] = spacing;\n                    }\n                    else {\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        let length = Math.sqrt(x * x + y * y);\n                        if (scale)\n                            lengths[i] = length;\n                        spaces[++i] = length;\n                        sum += length;\n                    }\n                }\n                if (sum > 0) {\n                    sum = spacesCount / sum * spacing;\n                    for (let i = 1; i < spacesCount; i++)\n                        spaces[i] *= sum;\n                }\n                break;\n            default:\n                let lengthSpacing = data.spacingMode == SpacingMode.Length;\n                for (let i = 0, n = spacesCount - 1; i < n;) {\n                    let bone = bones[i];\n                    let setupLength = bone.data.length;\n                    if (setupLength < PathConstraint.epsilon) {\n                        if (scale)\n                            lengths[i] = 0;\n                        spaces[++i] = spacing;\n                    }\n                    else {\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        let length = Math.sqrt(x * x + y * y);\n                        if (scale)\n                            lengths[i] = length;\n                        spaces[++i] = (lengthSpacing ? setupLength + spacing : spacing) * length / setupLength;\n                    }\n                }\n        }\n        let positions = this.computeWorldPositions(attachment, spacesCount, tangents);\n        let boneX = positions[0], boneY = positions[1], offsetRotation = data.offsetRotation;\n        let tip = false;\n        if (offsetRotation == 0)\n            tip = data.rotateMode == RotateMode.Chain;\n        else {\n            tip = false;\n            let p = this.target.bone;\n            offsetRotation *= p.a * p.d - p.b * p.c > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        }\n        for (let i = 0, p = 3; i < boneCount; i++, p += 3) {\n            let bone = bones[i];\n            bone.worldX += (boneX - bone.worldX) * mixX;\n            bone.worldY += (boneY - bone.worldY) * mixY;\n            let x = positions[p], y = positions[p + 1], dx = x - boneX, dy = y - boneY;\n            if (scale) {\n                let length = lengths[i];\n                if (length != 0) {\n                    let s = (Math.sqrt(dx * dx + dy * dy) / length - 1) * mixRotate + 1;\n                    bone.a *= s;\n                    bone.c *= s;\n                }\n            }\n            boneX = x;\n            boneY = y;\n            if (mixRotate > 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d, r = 0, cos = 0, sin = 0;\n                if (tangents)\n                    r = positions[p - 1];\n                else if (spaces[i + 1] == 0)\n                    r = positions[p + 2];\n                else\n                    r = Math.atan2(dy, dx);\n                r -= Math.atan2(c, a);\n                if (tip) {\n                    cos = Math.cos(r);\n                    sin = Math.sin(r);\n                    let length = bone.data.length;\n                    boneX += (length * (cos * a - sin * c) - dx) * mixRotate;\n                    boneY += (length * (sin * a + cos * c) - dy) * mixRotate;\n                }\n                else {\n                    r += offsetRotation;\n                }\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                cos = Math.cos(r);\n                sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    computeWorldPositions(path, spacesCount, tangents) {\n        let target = this.target;\n        let position = this.position;\n        let spaces = this.spaces, out = Utils.setArraySize(this.positions, spacesCount * 3 + 2), world = null;\n        let closed = path.closed;\n        let verticesLength = path.worldVerticesLength, curveCount = verticesLength / 6, prevCurve = PathConstraint.NONE;\n        if (!path.constantSpeed) {\n            let lengths = path.lengths;\n            curveCount -= closed ? 1 : 2;\n            let pathLength = lengths[curveCount];\n            if (this.data.positionMode == PositionMode.Percent)\n                position *= pathLength;\n            let multiplier;\n            switch (this.data.spacingMode) {\n                case SpacingMode.Percent:\n                    multiplier = pathLength;\n                    break;\n                case SpacingMode.Proportional:\n                    multiplier = pathLength / spacesCount;\n                    break;\n                default:\n                    multiplier = 1;\n            }\n            world = Utils.setArraySize(this.world, 8);\n            for (let i = 0, o = 0, curve = 0; i < spacesCount; i++, o += 3) {\n                let space = spaces[i] * multiplier;\n                position += space;\n                let p = position;\n                if (closed) {\n                    p %= pathLength;\n                    if (p < 0)\n                        p += pathLength;\n                    curve = 0;\n                }\n                else if (p < 0) {\n                    if (prevCurve != PathConstraint.BEFORE) {\n                        prevCurve = PathConstraint.BEFORE;\n                        path.computeWorldVertices(target, 2, 4, world, 0, 2);\n                    }\n                    this.addBeforePosition(p, world, 0, out, o);\n                    continue;\n                }\n                else if (p > pathLength) {\n                    if (prevCurve != PathConstraint.AFTER) {\n                        prevCurve = PathConstraint.AFTER;\n                        path.computeWorldVertices(target, verticesLength - 6, 4, world, 0, 2);\n                    }\n                    this.addAfterPosition(p - pathLength, world, 0, out, o);\n                    continue;\n                }\n                // Determine curve containing position.\n                for (;; curve++) {\n                    let length = lengths[curve];\n                    if (p > length)\n                        continue;\n                    if (curve == 0)\n                        p /= length;\n                    else {\n                        let prev = lengths[curve - 1];\n                        p = (p - prev) / (length - prev);\n                    }\n                    break;\n                }\n                if (curve != prevCurve) {\n                    prevCurve = curve;\n                    if (closed && curve == curveCount) {\n                        path.computeWorldVertices(target, verticesLength - 4, 4, world, 0, 2);\n                        path.computeWorldVertices(target, 0, 4, world, 4, 2);\n                    }\n                    else\n                        path.computeWorldVertices(target, curve * 6 + 2, 8, world, 0, 2);\n                }\n                this.addCurvePosition(p, world[0], world[1], world[2], world[3], world[4], world[5], world[6], world[7], out, o, tangents || (i > 0 && space == 0));\n            }\n            return out;\n        }\n        // World vertices.\n        if (closed) {\n            verticesLength += 2;\n            world = Utils.setArraySize(this.world, verticesLength);\n            path.computeWorldVertices(target, 2, verticesLength - 4, world, 0, 2);\n            path.computeWorldVertices(target, 0, 2, world, verticesLength - 4, 2);\n            world[verticesLength - 2] = world[0];\n            world[verticesLength - 1] = world[1];\n        }\n        else {\n            curveCount--;\n            verticesLength -= 4;\n            world = Utils.setArraySize(this.world, verticesLength);\n            path.computeWorldVertices(target, 2, verticesLength, world, 0, 2);\n        }\n        // Curve lengths.\n        let curves = Utils.setArraySize(this.curves, curveCount);\n        let pathLength = 0;\n        let x1 = world[0], y1 = world[1], cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0, x2 = 0, y2 = 0;\n        let tmpx = 0, tmpy = 0, dddfx = 0, dddfy = 0, ddfx = 0, ddfy = 0, dfx = 0, dfy = 0;\n        for (let i = 0, w = 2; i < curveCount; i++, w += 6) {\n            cx1 = world[w];\n            cy1 = world[w + 1];\n            cx2 = world[w + 2];\n            cy2 = world[w + 3];\n            x2 = world[w + 4];\n            y2 = world[w + 5];\n            tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\n            tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\n            dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\n            dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\n            ddfx = tmpx * 2 + dddfx;\n            ddfy = tmpy * 2 + dddfy;\n            dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\n            dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            ddfx += dddfx;\n            ddfy += dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx + dddfx;\n            dfy += ddfy + dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            curves[i] = pathLength;\n            x1 = x2;\n            y1 = y2;\n        }\n        if (this.data.positionMode == PositionMode.Percent)\n            position *= pathLength;\n        let multiplier;\n        switch (this.data.spacingMode) {\n            case SpacingMode.Percent:\n                multiplier = pathLength;\n                break;\n            case SpacingMode.Proportional:\n                multiplier = pathLength / spacesCount;\n                break;\n            default:\n                multiplier = 1;\n        }\n        let segments = this.segments;\n        let curveLength = 0;\n        for (let i = 0, o = 0, curve = 0, segment = 0; i < spacesCount; i++, o += 3) {\n            let space = spaces[i] * multiplier;\n            position += space;\n            let p = position;\n            if (closed) {\n                p %= pathLength;\n                if (p < 0)\n                    p += pathLength;\n                curve = 0;\n            }\n            else if (p < 0) {\n                this.addBeforePosition(p, world, 0, out, o);\n                continue;\n            }\n            else if (p > pathLength) {\n                this.addAfterPosition(p - pathLength, world, verticesLength - 4, out, o);\n                continue;\n            }\n            // Determine curve containing position.\n            for (;; curve++) {\n                let length = curves[curve];\n                if (p > length)\n                    continue;\n                if (curve == 0)\n                    p /= length;\n                else {\n                    let prev = curves[curve - 1];\n                    p = (p - prev) / (length - prev);\n                }\n                break;\n            }\n            // Curve segment lengths.\n            if (curve != prevCurve) {\n                prevCurve = curve;\n                let ii = curve * 6;\n                x1 = world[ii];\n                y1 = world[ii + 1];\n                cx1 = world[ii + 2];\n                cy1 = world[ii + 3];\n                cx2 = world[ii + 4];\n                cy2 = world[ii + 5];\n                x2 = world[ii + 6];\n                y2 = world[ii + 7];\n                tmpx = (x1 - cx1 * 2 + cx2) * 0.03;\n                tmpy = (y1 - cy1 * 2 + cy2) * 0.03;\n                dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\n                dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\n                ddfx = tmpx * 2 + dddfx;\n                ddfy = tmpy * 2 + dddfy;\n                dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\n                dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\n                curveLength = Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[0] = curveLength;\n                for (ii = 1; ii < 8; ii++) {\n                    dfx += ddfx;\n                    dfy += ddfy;\n                    ddfx += dddfx;\n                    ddfy += dddfy;\n                    curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                    segments[ii] = curveLength;\n                }\n                dfx += ddfx;\n                dfy += ddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[8] = curveLength;\n                dfx += ddfx + dddfx;\n                dfy += ddfy + dddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[9] = curveLength;\n                segment = 0;\n            }\n            // Weight by segment length.\n            p *= curveLength;\n            for (;; segment++) {\n                let length = segments[segment];\n                if (p > length)\n                    continue;\n                if (segment == 0)\n                    p /= length;\n                else {\n                    let prev = segments[segment - 1];\n                    p = segment + (p - prev) / (length - prev);\n                }\n                break;\n            }\n            this.addCurvePosition(p * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents || (i > 0 && space == 0));\n        }\n        return out;\n    }\n    addBeforePosition(p, temp, i, out, o) {\n        let x1 = temp[i], y1 = temp[i + 1], dx = temp[i + 2] - x1, dy = temp[i + 3] - y1, r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addAfterPosition(p, temp, i, out, o) {\n        let x1 = temp[i + 2], y1 = temp[i + 3], dx = x1 - temp[i], dy = y1 - temp[i + 1], r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addCurvePosition(p, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents) {\n        if (p == 0 || isNaN(p)) {\n            out[o] = x1;\n            out[o + 1] = y1;\n            out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n            return;\n        }\n        let tt = p * p, ttt = tt * p, u = 1 - p, uu = u * u, uuu = uu * u;\n        let ut = u * p, ut3 = ut * 3, uut3 = u * ut3, utt3 = ut3 * p;\n        let x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt, y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;\n        out[o] = x;\n        out[o + 1] = y;\n        if (tangents) {\n            if (p < 0.001)\n                out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n            else\n                out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt), x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));\n        }\n    }\n}\nPathConstraint.NONE = -1;\nPathConstraint.BEFORE = -2;\nPathConstraint.AFTER = -3;\nPathConstraint.epsilon = 0.00001;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { VertexAttachment } from \"./attachments/Attachment\";\nimport { Color } from \"./Utils\";\n/** Stores a slot's current pose. Slots organize attachments for {@link Skeleton#drawOrder} purposes and provide a place to store\n * state for an attachment. State cannot be stored in an attachment itself because attachments are stateless and may be shared\n * across multiple skeletons. */\nexport class Slot {\n    constructor(data, bone) {\n        /** The slot's setup pose data. */\n        this.data = null;\n        /** The bone this slot belongs to. */\n        this.bone = null;\n        /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\n         * color tinting. */\n        this.color = null;\n        /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\n         * color's alpha is not used. */\n        this.darkColor = null;\n        this.attachment = null;\n        this.attachmentTime = 0;\n        this.attachmentState = 0;\n        /** Values to deform the slot's attachment. For an unweighted mesh, the entries are local positions for each vertex. For a\n         * weighted mesh, the entries are an offset for each vertex which will be added to the mesh's local vertex positions.\n         *\n         * See {@link VertexAttachment#computeWorldVertices()} and {@link DeformTimeline}. */\n        this.deform = new Array();\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!bone)\n            throw new Error(\"bone cannot be null.\");\n        this.data = data;\n        this.bone = bone;\n        this.color = new Color();\n        this.darkColor = !data.darkColor ? null : new Color();\n        this.setToSetupPose();\n    }\n    /** The skeleton this slot belongs to. */\n    getSkeleton() {\n        return this.bone.skeleton;\n    }\n    /** The current attachment for the slot, or null if the slot has no attachment. */\n    getAttachment() {\n        return this.attachment;\n    }\n    /** Sets the slot's attachment and, if the attachment changed, resets {@link #attachmentTime} and clears the {@link #deform}.\n     * The deform is not cleared if the old attachment has the same {@link VertexAttachment#getDeformAttachment()} as the specified\n     * attachment.\n     * @param attachment May be null. */\n    setAttachment(attachment) {\n        if (this.attachment == attachment)\n            return;\n        if (!(attachment instanceof VertexAttachment) || !(this.attachment instanceof VertexAttachment)\n            || attachment.deformAttachment != this.attachment.deformAttachment) {\n            this.deform.length = 0;\n        }\n        this.attachment = attachment;\n        this.attachmentTime = this.bone.skeleton.time;\n    }\n    setAttachmentTime(time) {\n        this.attachmentTime = this.bone.skeleton.time - time;\n    }\n    /** The time that has elapsed since the last time the attachment was set or cleared. Relies on Skeleton\n     * {@link Skeleton#time}. */\n    getAttachmentTime() {\n        return this.bone.skeleton.time - this.attachmentTime;\n    }\n    /** Sets this slot to the setup pose. */\n    setToSetupPose() {\n        this.color.setFromColor(this.data.color);\n        if (this.darkColor)\n            this.darkColor.setFromColor(this.data.darkColor);\n        if (!this.data.attachmentName)\n            this.attachment = null;\n        else {\n            this.attachment = null;\n            this.setAttachment(this.bone.skeleton.getAttachment(this.data.index, this.data.attachmentName));\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9TbG90LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQWMsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUl4RSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRWhDOztnQ0FFZ0M7QUFDaEMsTUFBTSxPQUFPLElBQUk7SUEyQmhCLFlBQWEsSUFBYyxFQUFFLElBQVU7UUExQnZDLGtDQUFrQztRQUNsQyxTQUFJLEdBQWEsSUFBSSxDQUFDO1FBRXRCLHFDQUFxQztRQUNyQyxTQUFJLEdBQVMsSUFBSSxDQUFDO1FBRWxCOzRCQUNvQjtRQUNwQixVQUFLLEdBQVUsSUFBSSxDQUFDO1FBRXBCO3dDQUNnQztRQUNoQyxjQUFTLEdBQVUsSUFBSSxDQUFDO1FBRXhCLGVBQVUsR0FBZSxJQUFJLENBQUM7UUFFdEIsbUJBQWMsR0FBVyxDQUFDLENBQUM7UUFFbkMsb0JBQWUsR0FBVyxDQUFDLENBQUM7UUFFNUI7Ozs2RkFHcUY7UUFDckYsV0FBTSxHQUFHLElBQUksS0FBSyxFQUFVLENBQUM7UUFHNUIsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxFQUFFLENBQUM7UUFDdEQsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCx5Q0FBeUM7SUFDekMsV0FBVztRQUNWLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDM0IsQ0FBQztJQUVELGtGQUFrRjtJQUNsRixhQUFhO1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3hCLENBQUM7SUFFRDs7O3dDQUdvQztJQUNwQyxhQUFhLENBQUUsVUFBc0I7UUFDcEMsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLFVBQVU7WUFBRSxPQUFPO1FBQzFDLElBQUksQ0FBQyxDQUFDLFVBQVUsWUFBWSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxZQUFZLGdCQUFnQixDQUFDO2VBQ3hFLFVBQVcsQ0FBQyxnQkFBZ0IsSUFBdUIsSUFBSSxDQUFDLFVBQVcsQ0FBQyxnQkFBZ0IsRUFBRTtZQUM1RyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7U0FDdkI7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztJQUMvQyxDQUFDO0lBRUQsaUJBQWlCLENBQUUsSUFBWTtRQUM5QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDdEQsQ0FBQztJQUVEO2dDQUM0QjtJQUM1QixpQkFBaUI7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsd0NBQXdDO0lBQ3hDLGNBQWM7UUFDYixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLElBQUksSUFBSSxDQUFDLFNBQVM7WUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWM7WUFDNUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7YUFDbkI7WUFDSixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztZQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7U0FDaEc7SUFDRixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Vector2, MathUtils } from \"./Utils\";\n/** Stores the current pose for a transform constraint. A transform constraint adjusts the world transform of the constrained\n * bones to match that of the target bone.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraint {\n    constructor(data, skeleton) {\n        /** The transform constraint's setup pose data. */\n        this.data = null;\n        /** The bones that will be modified by this transform constraint. */\n        this.bones = null;\n        /** The target bone whose world transform will be copied to the constrained bones. */\n        this.target = null;\n        this.mixRotate = 0;\n        this.mixX = 0;\n        this.mixY = 0;\n        this.mixScaleX = 0;\n        this.mixScaleY = 0;\n        this.mixShearY = 0;\n        this.temp = new Vector2();\n        this.active = false;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n        this.mixScaleX = data.mixScaleX;\n        this.mixScaleY = data.mixScaleY;\n        this.mixShearY = data.mixShearY;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++)\n            this.bones.push(skeleton.findBone(data.bones[i].name));\n        this.target = skeleton.findBone(data.target.name);\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        if (this.mixRotate == 0 && this.mixX == 0 && this.mixY == 0 && this.mixScaleX == 0 && this.mixScaleX == 0 && this.mixShearY == 0)\n            return;\n        if (this.data.local) {\n            if (this.data.relative)\n                this.applyRelativeLocal();\n            else\n                this.applyAbsoluteLocal();\n        }\n        else {\n            if (this.data.relative)\n                this.applyRelativeWorld();\n            else\n                this.applyAbsoluteWorld();\n        }\n    }\n    applyAbsoluteWorld() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let translate = mixX != 0 || mixY != 0;\n        let target = this.target;\n        let ta = target.a, tb = target.b, tc = target.c, td = target.d;\n        let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        let offsetRotation = this.data.offsetRotation * degRadReflect;\n        let offsetShearY = this.data.offsetShearY * degRadReflect;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (mixRotate != 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n                let r = Math.atan2(tc, ta) - Math.atan2(c, a) + offsetRotation;\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                let cos = Math.cos(r), sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            if (translate) {\n                let temp = this.temp;\n                target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n                bone.worldX += (temp.x - bone.worldX) * mixX;\n                bone.worldY += (temp.y - bone.worldY) * mixY;\n            }\n            if (mixScaleX != 0) {\n                let s = Math.sqrt(bone.a * bone.a + bone.c * bone.c);\n                if (s != 0)\n                    s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.data.offsetScaleX) * mixScaleX) / s;\n                bone.a *= s;\n                bone.c *= s;\n            }\n            if (mixScaleY != 0) {\n                let s = Math.sqrt(bone.b * bone.b + bone.d * bone.d);\n                if (s != 0)\n                    s = (s + (Math.sqrt(tb * tb + td * td) - s + this.data.offsetScaleY) * mixScaleY) / s;\n                bone.b *= s;\n                bone.d *= s;\n            }\n            if (mixShearY > 0) {\n                let b = bone.b, d = bone.d;\n                let by = Math.atan2(d, b);\n                let r = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(bone.c, bone.a));\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r = by + (r + offsetShearY) * mixShearY;\n                let s = Math.sqrt(b * b + d * d);\n                bone.b = Math.cos(r) * s;\n                bone.d = Math.sin(r) * s;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    applyRelativeWorld() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let translate = mixX != 0 || mixY != 0;\n        let target = this.target;\n        let ta = target.a, tb = target.b, tc = target.c, td = target.d;\n        let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        let offsetRotation = this.data.offsetRotation * degRadReflect, offsetShearY = this.data.offsetShearY * degRadReflect;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (mixRotate != 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n                let r = Math.atan2(tc, ta) + offsetRotation;\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                let cos = Math.cos(r), sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            if (translate) {\n                let temp = this.temp;\n                target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n                bone.worldX += temp.x * mixX;\n                bone.worldY += temp.y * mixY;\n            }\n            if (mixScaleX != 0) {\n                let s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.data.offsetScaleX) * mixScaleX + 1;\n                bone.a *= s;\n                bone.c *= s;\n            }\n            if (mixScaleY != 0) {\n                let s = (Math.sqrt(tb * tb + td * td) - 1 + this.data.offsetScaleY) * mixScaleY + 1;\n                bone.b *= s;\n                bone.d *= s;\n            }\n            if (mixShearY > 0) {\n                let r = Math.atan2(td, tb) - Math.atan2(tc, ta);\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                let b = bone.b, d = bone.d;\n                r = Math.atan2(d, b) + (r - MathUtils.PI / 2 + offsetShearY) * mixShearY;\n                let s = Math.sqrt(b * b + d * d);\n                bone.b = Math.cos(r) * s;\n                bone.d = Math.sin(r) * s;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    applyAbsoluteLocal() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let target = this.target;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            let rotation = bone.arotation;\n            if (mixRotate != 0) {\n                let r = target.arotation - rotation + this.data.offsetRotation;\n                r -= (16384 - ((16384.499999999996 - r / 360) | 0)) * 360;\n                rotation += r * mixRotate;\n            }\n            let x = bone.ax, y = bone.ay;\n            x += (target.ax - x + this.data.offsetX) * mixX;\n            y += (target.ay - y + this.data.offsetY) * mixY;\n            let scaleX = bone.ascaleX, scaleY = bone.ascaleY;\n            if (mixScaleX != 0 && scaleX != 0)\n                scaleX = (scaleX + (target.ascaleX - scaleX + this.data.offsetScaleX) * mixScaleX) / scaleX;\n            if (mixScaleY != 0 && scaleY != 0)\n                scaleY = (scaleY + (target.ascaleY - scaleY + this.data.offsetScaleY) * mixScaleY) / scaleY;\n            let shearY = bone.ashearY;\n            if (mixShearY != 0) {\n                let r = target.ashearY - shearY + this.data.offsetShearY;\n                r -= (16384 - ((16384.499999999996 - r / 360) | 0)) * 360;\n                shearY += r * mixShearY;\n            }\n            bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n        }\n    }\n    applyRelativeLocal() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let target = this.target;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            let rotation = bone.arotation + (target.arotation + this.data.offsetRotation) * mixRotate;\n            let x = bone.ax + (target.ax + this.data.offsetX) * mixX;\n            let y = bone.ay + (target.ay + this.data.offsetY) * mixY;\n            let scaleX = bone.ascaleX * (((target.ascaleX - 1 + this.data.offsetScaleX) * mixScaleX) + 1);\n            let scaleY = bone.ascaleY * (((target.ascaleY - 1 + this.data.offsetScaleY) * mixScaleY) + 1);\n            let shearY = bone.ashearY + (target.ashearY + this.data.offsetShearY) * mixShearY;\n            bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { MeshAttachment } from \"./attachments/MeshAttachment\";\nimport { PathAttachment } from \"./attachments/PathAttachment\";\nimport { RegionAttachment } from \"./attachments/RegionAttachment\";\nimport { Bone } from \"./Bone\";\nimport { IkConstraint } from \"./IkConstraint\";\nimport { PathConstraint } from \"./PathConstraint\";\nimport { Slot } from \"./Slot\";\nimport { TransformConstraint } from \"./TransformConstraint\";\nimport { Color, Utils, MathUtils } from \"./Utils\";\n/** Stores the current pose for a skeleton.\n *\n * See [Instance objects](http://esotericsoftware.com/spine-runtime-architecture#Instance-objects) in the Spine Runtimes Guide. */\nexport class Skeleton {\n    constructor(data) {\n        /** The skeleton's setup pose data. */\n        this.data = null;\n        /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n        this.bones = null;\n        /** The skeleton's slots. */\n        this.slots = null;\n        /** The skeleton's slots in the order they should be drawn. The returned array may be modified to change the draw order. */\n        this.drawOrder = null;\n        /** The skeleton's IK constraints. */\n        this.ikConstraints = null;\n        /** The skeleton's transform constraints. */\n        this.transformConstraints = null;\n        /** The skeleton's path constraints. */\n        this.pathConstraints = null;\n        /** The list of bones and constraints, sorted in the order they should be updated, as computed by {@link #updateCache()}. */\n        this._updateCache = new Array();\n        /** The skeleton's current skin. May be null. */\n        this.skin = null;\n        /** The color to tint all the skeleton's attachments. */\n        this.color = null;\n        /** Returns the skeleton's time. This can be used for tracking, such as with Slot {@link Slot#attachmentTime}.\n         * <p>\n         * See {@link #update()}. */\n        this.time = 0;\n        /** Scales the entire skeleton on the X axis. This affects all bones, even if the bone's transform mode disallows scale\n          * inheritance. */\n        this.scaleX = 1;\n        /** Scales the entire skeleton on the Y axis. This affects all bones, even if the bone's transform mode disallows scale\n          * inheritance. */\n        this.scaleY = 1;\n        /** Sets the skeleton X position, which is added to the root bone worldX position. */\n        this.x = 0;\n        /** Sets the skeleton Y position, which is added to the root bone worldY position. */\n        this.y = 0;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let boneData = data.bones[i];\n            let bone;\n            if (!boneData.parent)\n                bone = new Bone(boneData, this, null);\n            else {\n                let parent = this.bones[boneData.parent.index];\n                bone = new Bone(boneData, this, parent);\n                parent.children.push(bone);\n            }\n            this.bones.push(bone);\n        }\n        this.slots = new Array();\n        this.drawOrder = new Array();\n        for (let i = 0; i < data.slots.length; i++) {\n            let slotData = data.slots[i];\n            let bone = this.bones[slotData.boneData.index];\n            let slot = new Slot(slotData, bone);\n            this.slots.push(slot);\n            this.drawOrder.push(slot);\n        }\n        this.ikConstraints = new Array();\n        for (let i = 0; i < data.ikConstraints.length; i++) {\n            let ikConstraintData = data.ikConstraints[i];\n            this.ikConstraints.push(new IkConstraint(ikConstraintData, this));\n        }\n        this.transformConstraints = new Array();\n        for (let i = 0; i < data.transformConstraints.length; i++) {\n            let transformConstraintData = data.transformConstraints[i];\n            this.transformConstraints.push(new TransformConstraint(transformConstraintData, this));\n        }\n        this.pathConstraints = new Array();\n        for (let i = 0; i < data.pathConstraints.length; i++) {\n            let pathConstraintData = data.pathConstraints[i];\n            this.pathConstraints.push(new PathConstraint(pathConstraintData, this));\n        }\n        this.color = new Color(1, 1, 1, 1);\n        this.updateCache();\n    }\n    /** Caches information about bones and constraints. Must be called if the {@link #getSkin()} is modified or if bones,\n     * constraints, or weighted path attachments are added or removed. */\n    updateCache() {\n        let updateCache = this._updateCache;\n        updateCache.length = 0;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            bone.sorted = bone.data.skinRequired;\n            bone.active = !bone.sorted;\n        }\n        if (this.skin) {\n            let skinBones = this.skin.bones;\n            for (let i = 0, n = this.skin.bones.length; i < n; i++) {\n                let bone = this.bones[skinBones[i].index];\n                do {\n                    bone.sorted = false;\n                    bone.active = true;\n                    bone = bone.parent;\n                } while (bone);\n            }\n        }\n        // IK first, lowest hierarchy depth first.\n        let ikConstraints = this.ikConstraints;\n        let transformConstraints = this.transformConstraints;\n        let pathConstraints = this.pathConstraints;\n        let ikCount = ikConstraints.length, transformCount = transformConstraints.length, pathCount = pathConstraints.length;\n        let constraintCount = ikCount + transformCount + pathCount;\n        outer: for (let i = 0; i < constraintCount; i++) {\n            for (let ii = 0; ii < ikCount; ii++) {\n                let constraint = ikConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortIkConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < transformCount; ii++) {\n                let constraint = transformConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortTransformConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < pathCount; ii++) {\n                let constraint = pathConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortPathConstraint(constraint);\n                    continue outer;\n                }\n            }\n        }\n        for (let i = 0, n = bones.length; i < n; i++)\n            this.sortBone(bones[i]);\n    }\n    sortIkConstraint(constraint) {\n        constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        let target = constraint.target;\n        this.sortBone(target);\n        let constrained = constraint.bones;\n        let parent = constrained[0];\n        this.sortBone(parent);\n        if (constrained.length == 1) {\n            this._updateCache.push(constraint);\n            this.sortReset(parent.children);\n        }\n        else {\n            let child = constrained[constrained.length - 1];\n            this.sortBone(child);\n            this._updateCache.push(constraint);\n            this.sortReset(parent.children);\n            child.sorted = true;\n        }\n    }\n    sortPathConstraint(constraint) {\n        constraint.active = constraint.target.bone.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        let slot = constraint.target;\n        let slotIndex = slot.data.index;\n        let slotBone = slot.bone;\n        if (this.skin)\n            this.sortPathConstraintAttachment(this.skin, slotIndex, slotBone);\n        if (this.data.defaultSkin && this.data.defaultSkin != this.skin)\n            this.sortPathConstraintAttachment(this.data.defaultSkin, slotIndex, slotBone);\n        for (let i = 0, n = this.data.skins.length; i < n; i++)\n            this.sortPathConstraintAttachment(this.data.skins[i], slotIndex, slotBone);\n        let attachment = slot.getAttachment();\n        if (attachment instanceof PathAttachment)\n            this.sortPathConstraintAttachmentWith(attachment, slotBone);\n        let constrained = constraint.bones;\n        let boneCount = constrained.length;\n        for (let i = 0; i < boneCount; i++)\n            this.sortBone(constrained[i]);\n        this._updateCache.push(constraint);\n        for (let i = 0; i < boneCount; i++)\n            this.sortReset(constrained[i].children);\n        for (let i = 0; i < boneCount; i++)\n            constrained[i].sorted = true;\n    }\n    sortTransformConstraint(constraint) {\n        constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        this.sortBone(constraint.target);\n        let constrained = constraint.bones;\n        let boneCount = constrained.length;\n        if (constraint.data.local) {\n            for (let i = 0; i < boneCount; i++) {\n                let child = constrained[i];\n                this.sortBone(child.parent);\n                this.sortBone(child);\n            }\n        }\n        else {\n            for (let i = 0; i < boneCount; i++) {\n                this.sortBone(constrained[i]);\n            }\n        }\n        this._updateCache.push(constraint);\n        for (let i = 0; i < boneCount; i++)\n            this.sortReset(constrained[i].children);\n        for (let i = 0; i < boneCount; i++)\n            constrained[i].sorted = true;\n    }\n    sortPathConstraintAttachment(skin, slotIndex, slotBone) {\n        let attachments = skin.attachments[slotIndex];\n        if (!attachments)\n            return;\n        for (let key in attachments) {\n            this.sortPathConstraintAttachmentWith(attachments[key], slotBone);\n        }\n    }\n    sortPathConstraintAttachmentWith(attachment, slotBone) {\n        if (!(attachment instanceof PathAttachment))\n            return;\n        let pathBones = attachment.bones;\n        if (!pathBones)\n            this.sortBone(slotBone);\n        else {\n            let bones = this.bones;\n            for (let i = 0, n = pathBones.length; i < n;) {\n                let nn = pathBones[i++];\n                nn += i;\n                while (i < nn)\n                    this.sortBone(bones[pathBones[i++]]);\n            }\n        }\n    }\n    sortBone(bone) {\n        if (bone.sorted)\n            return;\n        let parent = bone.parent;\n        if (parent)\n            this.sortBone(parent);\n        bone.sorted = true;\n        this._updateCache.push(bone);\n    }\n    sortReset(bones) {\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (!bone.active)\n                continue;\n            if (bone.sorted)\n                this.sortReset(bone.children);\n            bone.sorted = false;\n        }\n    }\n    /** Updates the world transform for each bone and applies all constraints.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide. */\n    updateWorldTransform() {\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            bone.ax = bone.x;\n            bone.ay = bone.y;\n            bone.arotation = bone.rotation;\n            bone.ascaleX = bone.scaleX;\n            bone.ascaleY = bone.scaleY;\n            bone.ashearX = bone.shearX;\n            bone.ashearY = bone.shearY;\n        }\n        let updateCache = this._updateCache;\n        for (let i = 0, n = updateCache.length; i < n; i++)\n            updateCache[i].update();\n    }\n    updateWorldTransformWith(parent) {\n        // Apply the parent bone transform to the root bone. The root bone always inherits scale, rotation and reflection.\n        let rootBone = this.getRootBone();\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        rootBone.worldX = pa * this.x + pb * this.y + parent.worldX;\n        rootBone.worldY = pc * this.x + pd * this.y + parent.worldY;\n        let rotationY = rootBone.rotation + 90 + rootBone.shearY;\n        let la = MathUtils.cosDeg(rootBone.rotation + rootBone.shearX) * rootBone.scaleX;\n        let lb = MathUtils.cosDeg(rotationY) * rootBone.scaleY;\n        let lc = MathUtils.sinDeg(rootBone.rotation + rootBone.shearX) * rootBone.scaleX;\n        let ld = MathUtils.sinDeg(rotationY) * rootBone.scaleY;\n        rootBone.a = (pa * la + pb * lc) * this.scaleX;\n        rootBone.b = (pa * lb + pb * ld) * this.scaleX;\n        rootBone.c = (pc * la + pd * lc) * this.scaleY;\n        rootBone.d = (pc * lb + pd * ld) * this.scaleY;\n        // Update everything except root bone.\n        let updateCache = this._updateCache;\n        for (let i = 0, n = updateCache.length; i < n; i++) {\n            let updatable = updateCache[i];\n            if (updatable != rootBone)\n                updatable.update();\n        }\n    }\n    /** Sets the bones, constraints, and slots to their setup pose values. */\n    setToSetupPose() {\n        this.setBonesToSetupPose();\n        this.setSlotsToSetupPose();\n    }\n    /** Sets the bones and constraints to their setup pose values. */\n    setBonesToSetupPose() {\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++)\n            bones[i].setToSetupPose();\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let constraint = ikConstraints[i];\n            constraint.mix = constraint.data.mix;\n            constraint.softness = constraint.data.softness;\n            constraint.bendDirection = constraint.data.bendDirection;\n            constraint.compress = constraint.data.compress;\n            constraint.stretch = constraint.data.stretch;\n        }\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate;\n            constraint.mixX = data.mixX;\n            constraint.mixY = data.mixY;\n            constraint.mixScaleX = data.mixScaleX;\n            constraint.mixScaleY = data.mixScaleY;\n            constraint.mixShearY = data.mixShearY;\n        }\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            let data = constraint.data;\n            constraint.position = data.position;\n            constraint.spacing = data.spacing;\n            constraint.mixRotate = data.mixRotate;\n            constraint.mixX = data.mixX;\n            constraint.mixY = data.mixY;\n        }\n    }\n    /** Sets the slots and draw order to their setup pose values. */\n    setSlotsToSetupPose() {\n        let slots = this.slots;\n        Utils.arrayCopy(slots, 0, this.drawOrder, 0, slots.length);\n        for (let i = 0, n = slots.length; i < n; i++)\n            slots[i].setToSetupPose();\n    }\n    /** @returns May return null. */\n    getRootBone() {\n        if (this.bones.length == 0)\n            return null;\n        return this.bones[0];\n    }\n    /** @returns May be null. */\n    findBone(boneName) {\n        if (!boneName)\n            throw new Error(\"boneName cannot be null.\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (bone.data.name == boneName)\n                return bone;\n        }\n        return null;\n    }\n    /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n     * repeatedly.\n     * @returns May be null. */\n    findSlot(slotName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.data.name == slotName)\n                return slot;\n        }\n        return null;\n    }\n    /** Sets a skin by name.\n     *\n     * See {@link #setSkin()}. */\n    setSkinByName(skinName) {\n        let skin = this.data.findSkin(skinName);\n        if (!skin)\n            throw new Error(\"Skin not found: \" + skinName);\n        this.setSkin(skin);\n    }\n    /** Sets the skin used to look up attachments before looking in the {@link SkeletonData#defaultSkin default skin}. If the\n     * skin is changed, {@link #updateCache()} is called.\n     *\n     * Attachments from the new skin are attached if the corresponding attachment from the old skin was attached. If there was no\n     * old skin, each slot's setup mode attachment is attached from the new skin.\n     *\n     * After changing the skin, the visible attachments can be reset to those attached in the setup pose by calling\n     * {@link #setSlotsToSetupPose()}. Also, often {@link AnimationState#apply()} is called before the next time the\n     * skeleton is rendered to allow any attachment keys in the current animation(s) to hide or show attachments from the new skin.\n     * @param newSkin May be null. */\n    setSkin(newSkin) {\n        if (newSkin == this.skin)\n            return;\n        if (newSkin) {\n            if (this.skin)\n                newSkin.attachAll(this, this.skin);\n            else {\n                let slots = this.slots;\n                for (let i = 0, n = slots.length; i < n; i++) {\n                    let slot = slots[i];\n                    let name = slot.data.attachmentName;\n                    if (name) {\n                        let attachment = newSkin.getAttachment(i, name);\n                        if (attachment)\n                            slot.setAttachment(attachment);\n                    }\n                }\n            }\n        }\n        this.skin = newSkin;\n        this.updateCache();\n    }\n    /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot name and attachment\n     * name.\n     *\n     * See {@link #getAttachment()}.\n     * @returns May be null. */\n    getAttachmentByName(slotName, attachmentName) {\n        return this.getAttachment(this.data.findSlot(slotName).index, attachmentName);\n    }\n    /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot index and\n     * attachment name. First the skin is checked and if the attachment was not found, the default skin is checked.\n     *\n     * See [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide.\n     * @returns May be null. */\n    getAttachment(slotIndex, attachmentName) {\n        if (!attachmentName)\n            throw new Error(\"attachmentName cannot be null.\");\n        if (this.skin) {\n            let attachment = this.skin.getAttachment(slotIndex, attachmentName);\n            if (attachment)\n                return attachment;\n        }\n        if (this.data.defaultSkin)\n            return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);\n        return null;\n    }\n    /** A convenience method to set an attachment by finding the slot with {@link #findSlot()}, finding the attachment with\n     * {@link #getAttachment()}, then setting the slot's {@link Slot#attachment}.\n     * @param attachmentName May be null to clear the slot's attachment. */\n    setAttachment(slotName, attachmentName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.data.name == slotName) {\n                let attachment = null;\n                if (attachmentName) {\n                    attachment = this.getAttachment(i, attachmentName);\n                    if (!attachment)\n                        throw new Error(\"Attachment not found: \" + attachmentName + \", for slot: \" + slotName);\n                }\n                slot.setAttachment(attachment);\n                return;\n            }\n        }\n        throw new Error(\"Slot not found: \" + slotName);\n    }\n    /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n     * than to call it repeatedly.\n     * @return May be null. */\n    findIkConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let ikConstraint = ikConstraints[i];\n            if (ikConstraint.data.name == constraintName)\n                return ikConstraint;\n        }\n        return null;\n    }\n    /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n     * this method than to call it repeatedly.\n     * @return May be null. */\n    findTransformConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            if (constraint.data.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n     * than to call it repeatedly.\n     * @return May be null. */\n    findPathConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            if (constraint.data.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose.\n     * @param offset An output value, the distance from the skeleton origin to the bottom left corner of the AABB.\n     * @param size An output value, the width and height of the AABB.\n     * @param temp Working memory to temporarily store attachments' computed world vertices. */\n    getBounds(offset, size, temp = new Array(2)) {\n        if (!offset)\n            throw new Error(\"offset cannot be null.\");\n        if (!size)\n            throw new Error(\"size cannot be null.\");\n        let drawOrder = this.drawOrder;\n        let minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let slot = drawOrder[i];\n            if (!slot.bone.active)\n                continue;\n            let verticesLength = 0;\n            let vertices = null;\n            let attachment = slot.getAttachment();\n            if (attachment instanceof RegionAttachment) {\n                verticesLength = 8;\n                vertices = Utils.setArraySize(temp, verticesLength, 0);\n                attachment.computeWorldVertices(slot.bone, vertices, 0, 2);\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                verticesLength = mesh.worldVerticesLength;\n                vertices = Utils.setArraySize(temp, verticesLength, 0);\n                mesh.computeWorldVertices(slot, 0, verticesLength, vertices, 0, 2);\n            }\n            if (vertices) {\n                for (let ii = 0, nn = vertices.length; ii < nn; ii += 2) {\n                    let x = vertices[ii], y = vertices[ii + 1];\n                    minX = Math.min(minX, x);\n                    minY = Math.min(minY, y);\n                    maxX = Math.max(maxX, x);\n                    maxY = Math.max(maxY, y);\n                }\n            }\n        }\n        offset.set(minX, minY);\n        size.set(maxX - minX, maxY - minY);\n    }\n    /** Increments the skeleton's {@link #time}. */\n    update(delta) {\n        this.time += delta;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose and all of the stateless data for a skeleton.\n *\n * See [Data objects](http://esotericsoftware.com/spine-runtime-architecture#Data-objects) in the Spine Runtimes\n * Guide. */\nexport class SkeletonData {\n    constructor() {\n        /** The skeleton's name, which by default is the name of the skeleton data file, if possible. May be null. */\n        this.name = null;\n        /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n        this.bones = new Array(); // Ordered parents first.\n        /** The skeleton's slots. */\n        this.slots = new Array(); // Setup pose draw order.\n        this.skins = new Array();\n        /** The skeleton's default skin. By default this skin contains all attachments that were not in a skin in Spine.\n         *\n         * See {@link Skeleton#getAttachmentByName()}.\n         * May be null. */\n        this.defaultSkin = null;\n        /** The skeleton's events. */\n        this.events = new Array();\n        /** The skeleton's animations. */\n        this.animations = new Array();\n        /** The skeleton's IK constraints. */\n        this.ikConstraints = new Array();\n        /** The skeleton's transform constraints. */\n        this.transformConstraints = new Array();\n        /** The skeleton's path constraints. */\n        this.pathConstraints = new Array();\n        /** The X coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n        this.x = 0;\n        /** The Y coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n        this.y = 0;\n        /** The width of the skeleton's axis aligned bounding box in the setup pose. */\n        this.width = 0;\n        /** The height of the skeleton's axis aligned bounding box in the setup pose. */\n        this.height = 0;\n        /** The Spine version used to export the skeleton data, or null. */\n        this.version = null;\n        /** The skeleton data hash. This value will change if any of the skeleton data has changed. May be null. */\n        this.hash = null;\n        // Nonessential\n        /** The dopesheet FPS in Spine. Available only when nonessential data was exported. */\n        this.fps = 0;\n        /** The path to the images directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n        this.imagesPath = null;\n        /** The path to the audio directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n        this.audioPath = null;\n    }\n    /** Finds a bone by comparing each bone's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findBone(boneName) {\n        if (!boneName)\n            throw new Error(\"boneName cannot be null.\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (bone.name == boneName)\n                return bone;\n        }\n        return null;\n    }\n    /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findSlot(slotName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.name == slotName)\n                return slot;\n        }\n        return null;\n    }\n    /** Finds a skin by comparing each skin's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findSkin(skinName) {\n        if (!skinName)\n            throw new Error(\"skinName cannot be null.\");\n        let skins = this.skins;\n        for (let i = 0, n = skins.length; i < n; i++) {\n            let skin = skins[i];\n            if (skin.name == skinName)\n                return skin;\n        }\n        return null;\n    }\n    /** Finds an event by comparing each events's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findEvent(eventDataName) {\n        if (!eventDataName)\n            throw new Error(\"eventDataName cannot be null.\");\n        let events = this.events;\n        for (let i = 0, n = events.length; i < n; i++) {\n            let event = events[i];\n            if (event.name == eventDataName)\n                return event;\n        }\n        return null;\n    }\n    /** Finds an animation by comparing each animation's name. It is more efficient to cache the results of this method than to\n     * call it multiple times.\n     * @returns May be null. */\n    findAnimation(animationName) {\n        if (!animationName)\n            throw new Error(\"animationName cannot be null.\");\n        let animations = this.animations;\n        for (let i = 0, n = animations.length; i < n; i++) {\n            let animation = animations[i];\n            if (animation.name == animationName)\n                return animation;\n        }\n        return null;\n    }\n    /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findIkConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let constraint = ikConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n     * this method than to call it multiple times.\n     * @return May be null. */\n    findTransformConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findPathConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b25EYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1NrZWxldG9uRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFXL0U7OztZQUdZO0FBQ1osTUFBTSxPQUFPLFlBQVk7SUFBekI7UUFFQyw2R0FBNkc7UUFDN0csU0FBSSxHQUFXLElBQUksQ0FBQztRQUVwQix5RkFBeUY7UUFDekYsVUFBSyxHQUFHLElBQUksS0FBSyxFQUFZLENBQUMsQ0FBQyx5QkFBeUI7UUFFeEQsNEJBQTRCO1FBQzVCLFVBQUssR0FBRyxJQUFJLEtBQUssRUFBWSxDQUFDLENBQUMseUJBQXlCO1FBQ3hELFVBQUssR0FBRyxJQUFJLEtBQUssRUFBUSxDQUFDO1FBRTFCOzs7MEJBR2tCO1FBQ2xCLGdCQUFXLEdBQVMsSUFBSSxDQUFDO1FBRXpCLDZCQUE2QjtRQUM3QixXQUFNLEdBQUcsSUFBSSxLQUFLLEVBQWEsQ0FBQztRQUVoQyxpQ0FBaUM7UUFDakMsZUFBVSxHQUFHLElBQUksS0FBSyxFQUFhLENBQUM7UUFFcEMscUNBQXFDO1FBQ3JDLGtCQUFhLEdBQUcsSUFBSSxLQUFLLEVBQW9CLENBQUM7UUFFOUMsNENBQTRDO1FBQzVDLHlCQUFvQixHQUFHLElBQUksS0FBSyxFQUEyQixDQUFDO1FBRTVELHVDQUF1QztRQUN2QyxvQkFBZSxHQUFHLElBQUksS0FBSyxFQUFzQixDQUFDO1FBRWxELHNGQUFzRjtRQUN0RixNQUFDLEdBQVcsQ0FBQyxDQUFDO1FBRWQsc0ZBQXNGO1FBQ3RGLE1BQUMsR0FBVyxDQUFDLENBQUM7UUFFZCwrRUFBK0U7UUFDL0UsVUFBSyxHQUFXLENBQUMsQ0FBQztRQUVsQixnRkFBZ0Y7UUFDaEYsV0FBTSxHQUFXLENBQUMsQ0FBQztRQUVuQixtRUFBbUU7UUFDbkUsWUFBTyxHQUFXLElBQUksQ0FBQztRQUV2QiwyR0FBMkc7UUFDM0csU0FBSSxH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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { MeshAttachment } from \"./attachments/MeshAttachment\";\n/** Stores an entry in the skin consisting of the slot index, name, and attachment **/\nexport class SkinEntry {\n    constructor(slotIndex = 0, name = null, attachment = null) {\n        this.slotIndex = slotIndex;\n        this.name = name;\n        this.attachment = attachment;\n    }\n}\n/** Stores attachments by slot index and attachment name.\n *\n * See SkeletonData {@link SkeletonData#defaultSkin}, Skeleton {@link Skeleton#skin}, and\n * [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide. */\nexport class Skin {\n    constructor(name) {\n        /** The skin's name, which is unique across all skins in the skeleton. */\n        this.name = null;\n        this.attachments = new Array();\n        this.bones = Array();\n        this.constraints = new Array();\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n    }\n    /** Adds an attachment to the skin for the specified slot index and name. */\n    setAttachment(slotIndex, name, attachment) {\n        if (!attachment)\n            throw new Error(\"attachment cannot be null.\");\n        let attachments = this.attachments;\n        if (slotIndex >= attachments.length)\n            attachments.length = slotIndex + 1;\n        if (!attachments[slotIndex])\n            attachments[slotIndex] = {};\n        attachments[slotIndex][name] = attachment;\n    }\n    /** Adds all attachments, bones, and constraints from the specified skin to this skin. */\n    addSkin(skin) {\n        for (let i = 0; i < skin.bones.length; i++) {\n            let bone = skin.bones[i];\n            let contained = false;\n            for (let ii = 0; ii < this.bones.length; ii++) {\n                if (this.bones[ii] == bone) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.bones.push(bone);\n        }\n        for (let i = 0; i < skin.constraints.length; i++) {\n            let constraint = skin.constraints[i];\n            let contained = false;\n            for (let ii = 0; ii < this.constraints.length; ii++) {\n                if (this.constraints[ii] == constraint) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.constraints.push(constraint);\n        }\n        let attachments = skin.getAttachments();\n        for (let i = 0; i < attachments.length; i++) {\n            var attachment = attachments[i];\n            this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n        }\n    }\n    /** Adds all bones and constraints and copies of all attachments from the specified skin to this skin. Mesh attachments are not\n     * copied, instead a new linked mesh is created. The attachment copies can be modified without affecting the originals. */\n    copySkin(skin) {\n        for (let i = 0; i < skin.bones.length; i++) {\n            let bone = skin.bones[i];\n            let contained = false;\n            for (let ii = 0; ii < this.bones.length; ii++) {\n                if (this.bones[ii] == bone) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.bones.push(bone);\n        }\n        for (let i = 0; i < skin.constraints.length; i++) {\n            let constraint = skin.constraints[i];\n            let contained = false;\n            for (let ii = 0; ii < this.constraints.length; ii++) {\n                if (this.constraints[ii] == constraint) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.constraints.push(constraint);\n        }\n        let attachments = skin.getAttachments();\n        for (let i = 0; i < attachments.length; i++) {\n            var attachment = attachments[i];\n            if (!attachment.attachment)\n                continue;\n            if (attachment.attachment instanceof MeshAttachment) {\n                attachment.attachment = attachment.attachment.newLinkedMesh();\n                this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n            }\n            else {\n                attachment.attachment = attachment.attachment.copy();\n                this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n            }\n        }\n    }\n    /** Returns the attachment for the specified slot index and name, or null. */\n    getAttachment(slotIndex, name) {\n        let dictionary = this.attachments[slotIndex];\n        return dictionary ? dictionary[name] : null;\n    }\n    /** Removes the attachment in the skin for the specified slot index and name, if any. */\n    removeAttachment(slotIndex, name) {\n        let dictionary = this.attachments[slotIndex];\n        if (dictionary)\n            dictionary[name] = null;\n    }\n    /** Returns all attachments in this skin. */\n    getAttachments() {\n        let entries = new Array();\n        for (var i = 0; i < this.attachments.length; i++) {\n            let slotAttachments = this.attachments[i];\n            if (slotAttachments) {\n                for (let name in slotAttachments) {\n                    let attachment = slotAttachments[name];\n                    if (attachment)\n                        entries.push(new SkinEntry(i, name, attachment));\n                }\n            }\n        }\n        return entries;\n    }\n    /** Returns all attachments in this skin for the specified slot index. */\n    getAttachmentsForSlot(slotIndex, attachments) {\n        let slotAttachments = this.attachments[slotIndex];\n        if (slotAttachments) {\n            for (let name in slotAttachments) {\n                let attachment = slotAttachments[name];\n                if (attachment)\n                    attachments.push(new SkinEntry(slotIndex, name, attachment));\n            }\n        }\n    }\n    /** Clears all attachments, bones, and constraints. */\n    clear() {\n        this.attachments.length = 0;\n        this.bones.length = 0;\n        this.constraints.length = 0;\n    }\n    /** Attach each attachment in this skin if the corresponding attachment in the old skin is currently attached. */\n    attachAll(skeleton, oldSkin) {\n        let slotIndex = 0;\n        for (let i = 0; i < skeleton.slots.length; i++) {\n            let slot = skeleton.slots[i];\n            let slotAttachment = slot.getAttachment();\n            if (slotAttachment && slotIndex < oldSkin.attachments.length) {\n                let dictionary = oldSkin.attachments[slotIndex];\n                for (let key in dictionary) {\n                    let skinAttachment = dictionary[key];\n                    if (slotAttachment == skinAttachment) {\n                        let attachment = this.getAttachment(slotIndex, key);\n                        if (attachment)\n                            slot.setAttachment(attachment);\n                        break;\n                    }\n                }\n            }\n            slotIndex++;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ta2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFNOUQsc0ZBQXNGO0FBQ3RGLE1BQU0sT0FBTyxTQUFTO0lBQ3JCLFlBQW9CLFlBQW9CLENBQUMsRUFBUyxPQUFlLElBQUksRUFBUyxhQUF5QixJQUFJO1FBQXZGLGNBQVMsR0FBVCxTQUFTLENBQVk7UUFBUyxTQUFJLEdBQUosSUFBSSxDQUFlO1FBQVMsZUFBVSxHQUFWLFVBQVUsQ0FBbUI7SUFBSSxDQUFDO0NBQ2hIO0FBRUQ7OzttR0FHbUc7QUFDbkcsTUFBTSxPQUFPLElBQUk7SUFRaEIsWUFBYSxJQUFZO1FBUHpCLHlFQUF5RTtRQUN6RSxTQUFJLEdBQVcsSUFBSSxDQUFDO1FBRXBCLGdCQUFXLEdBQUcsSUFBSSxLQUFLLEVBQXlCLENBQUM7UUFDakQsVUFBSyxHQUFHLEtBQUssRUFBWSxDQUFDO1FBQzFCLGdCQUFXLEdBQUcsSUFBSSxLQUFLLEVBQWtCLENBQUM7UUFHekMsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbEIsQ0FBQztJQUVELDRFQUE0RTtJQUM1RSxhQUFhLENBQUUsU0FBaUIsRUFBRSxJQUFZLEVBQUUsVUFBc0I7UUFDckUsSUFBSSxDQUFDLFVBQVU7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7UUFDL0QsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUNuQyxJQUFJLFNBQVMsSUFBSSxXQUFXLENBQUMsTUFBTTtZQUFFLFdBQVcsQ0FBQyxNQUFNLEdBQUcsU0FBUyxHQUFHLENB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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"./Utils\";\n/** Stores the setup pose for a {@link Slot}. */\nexport class SlotData {\n    constructor(index, name, boneData) {\n        /** The index of the slot in {@link Skeleton#getSlots()}. */\n        this.index = 0;\n        /** The name of the slot, which is unique across all slots in the skeleton. */\n        this.name = null;\n        /** The bone this slot belongs to. */\n        this.boneData = null;\n        /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\n         * color tinting. */\n        this.color = new Color(1, 1, 1, 1);\n        /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\n         * color's alpha is not used. */\n        this.darkColor = null;\n        /** The name of the attachment that is visible for this slot in the setup pose, or null if no attachment is visible. */\n        this.attachmentName = null;\n        /** The blend mode for drawing the slot's attachment. */\n        this.blendMode = null;\n        if (index < 0)\n            throw new Error(\"index must be >= 0.\");\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        if (!boneData)\n            throw new Error(\"boneData cannot be null.\");\n        this.index = index;\n        this.name = name;\n        this.boneData = boneData;\n    }\n}\n/** Determines how images are blended with existing pixels when drawn. */\nexport var BlendMode;\n(function (BlendMode) {\n    BlendMode[BlendMode[\"Normal\"] = 0] = \"Normal\";\n    BlendMode[BlendMode[\"Additive\"] = 1] = \"Additive\";\n    BlendMode[BlendMode[\"Multiply\"] = 2] = \"Multiply\";\n    BlendMode[BlendMode[\"Screen\"] = 3] = \"Screen\";\n})(BlendMode || (BlendMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU2xvdERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRy9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFaEMsZ0RBQWdEO0FBQ2hELE1BQU0sT0FBTyxRQUFRO0lBd0JwQixZQUFhLEtBQWEsRUFBRSxJQUFZLEVBQUUsUUFBa0I7UUF2QjVELDREQUE0RDtRQUM1RCxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBRWxCLDhFQUE4RTtRQUM5RSxTQUFJLEdBQVcsSUFBSSxDQUFDO1FBRXBCLHFDQUFxQztRQUNyQyxhQUFRLEdBQWEsSUFBSSxDQUFDO1FBRTFCOzRCQUNvQjtRQUNwQixVQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFOUI7d0NBQ2dDO1FBQ2hDLGNBQVMsR0FBVSxJQUFJLENBQUM7UUFFeEIsdUhBQXVIO1FBQ3ZILG1CQUFjLEdBQVcsSUFBSSxDQUFDO1FBRTlCLHdEQUF3RDtRQUN4RCxjQUFTLEdBQWMsSUFBSSxDQUFDO1FBRzNCLElBQUksS0FBSyxHQUFHLENBQUM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLFFBQVE7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDMUIsQ0FBQztDQUNEO0FBRUQseUVBQXlFO0FBQ3pFLE1BQU0sQ0FBTixJQUFZLFNBQWdEO0FBQTVELFdBQVksU0FBUztJQUFHLDZDQUFNLENBQUE7SUFBRSxpREFBUSxDQUFBO0lBQUUsaURBQVEsQ0FBQTtJQUFFLDZDQUFNLENBQUE7QUFBQyxDQUFDLEVBQWhELFNBQVMsS0FBVCxTQUFTLFFBQXVDIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData\";\n/** Stores the setup pose for a {@link TransformConstraint}.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraintData extends ConstraintData {\n    constructor(name) {\n        super(name, 0, false);\n        /** The bones that will be modified by this transform constraint. */\n        this.bones = new Array();\n        /** The target bone whose world transform will be copied to the constrained bones. */\n        this.target = null;\n        this.mixRotate = 0;\n        this.mixX = 0;\n        this.mixY = 0;\n        this.mixScaleX = 0;\n        this.mixScaleY = 0;\n        this.mixShearY = 0;\n        /** An offset added to the constrained bone rotation. */\n        this.offsetRotation = 0;\n        /** An offset added to the constrained bone X translation. */\n        this.offsetX = 0;\n        /** An offset added to the constrained bone Y translation. */\n        this.offsetY = 0;\n        /** An offset added to the constrained bone scaleX. */\n        this.offsetScaleX = 0;\n        /** An offset added to the constrained bone scaleY. */\n        this.offsetScaleY = 0;\n        /** An offset added to the constrained bone shearY. */\n        this.offsetShearY = 0;\n        this.relative = false;\n        this.local = false;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJhbnNmb3JtQ29uc3RyYWludERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvVHJhbnNmb3JtQ29uc3RyYWludERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUdsRDs7bUhBRW1IO0FBQ25ILE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxjQUFjO0lBb0MxRCxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFuQ3ZCLG9FQUFvRTtRQUNwRSxVQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVksQ0FBQztRQUU5QixxRkFBcUY7UUFDckYsV0FBTSxHQUFhLElBQUksQ0FBQztRQUV4QixjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsU0FBSSxHQUFHLENBQUMsQ0FBQztRQUNULFNBQUksR0FBRyxDQUFDLENBQUM7UUFDVCxjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsY0FBUyxHQUFHLENBQUMsQ0FBQztRQUNkLGNBQVMsR0FBRyxDQUFDLENBQUM7UUFFZCx3REFBd0Q7UUFDeEQsbUJBQWMsR0FBRyxDQUFDLENBQUM7UUFFbkIsNkRBQTZEO1FBQzdELFlBQU8sR0FBRyxDQUFDLENBQUM7UUFFWiw2REFBNkQ7UUFDN0QsWUFBTyxHQUFHLENBQUMsQ0FBQztRQUVaLHNEQUFzRDtRQUN0RCxpQkFBWSxHQUFHLENBQUMsQ0FBQztRQUVqQixzREFBc0Q7UUFDdEQsaUJBQVksR0FBRyxDQUFDLENBQUM7UUFFakIsc0RBQXNEO1FBQ3RELGlCQUFZLEdBQUcsQ0FBQyxDQUFDO1FBRWpCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsVUFBSyxHQUFHLEtBQUssQ0FBQztJQUlkLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, AttachmentTimeline, RGBATimeline, RGBTimeline, RGBA2Timeline, RGB2Timeline, AlphaTimeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline } from \"./Animation\";\nimport { BoneData } from \"./BoneData\";\nimport { Event } from \"./Event\";\nimport { EventData } from \"./EventData\";\nimport { IkConstraintData } from \"./IkConstraintData\";\nimport { PathConstraintData, PositionMode, SpacingMode } from \"./PathConstraintData\";\nimport { SkeletonData } from \"./SkeletonData\";\nimport { Skin } from \"./Skin\";\nimport { SlotData } from \"./SlotData\";\nimport { TransformConstraintData } from \"./TransformConstraintData\";\nimport { Color, Utils } from \"./Utils\";\n/** Loads skeleton data in the Spine binary format.\n *\n * See [Spine binary format](http://esotericsoftware.com/spine-binary-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonBinary {\n    constructor(attachmentLoader) {\n        /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n         * runtime than were used in Spine.\n         *\n         * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n        this.scale = 1;\n        this.attachmentLoader = null;\n        this.linkedMeshes = new Array();\n        this.attachmentLoader = attachmentLoader;\n    }\n    readSkeletonData(binary) {\n        let scale = this.scale;\n        let skeletonData = new SkeletonData();\n        skeletonData.name = \"\"; // BOZO\n        let input = new BinaryInput(binary);\n        let lowHash = input.readInt32();\n        let highHash = input.readInt32();\n        skeletonData.hash = highHash == 0 && lowHash == 0 ? null : highHash.toString(16) + lowHash.toString(16);\n        skeletonData.version = input.readString();\n        skeletonData.x = input.readFloat();\n        skeletonData.y = input.readFloat();\n        skeletonData.width = input.readFloat();\n        skeletonData.height = input.readFloat();\n        let nonessential = input.readBoolean();\n        if (nonessential) {\n            skeletonData.fps = input.readFloat();\n            skeletonData.imagesPath = input.readString();\n            skeletonData.audioPath = input.readString();\n        }\n        let n = 0;\n        // Strings.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++)\n            input.strings.push(input.readString());\n        // Bones.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let name = input.readString();\n            let parent = i == 0 ? null : skeletonData.bones[input.readInt(true)];\n            let data = new BoneData(i, name, parent);\n            data.rotation = input.readFloat();\n            data.x = input.readFloat() * scale;\n            data.y = input.readFloat() * scale;\n            data.scaleX = input.readFloat();\n            data.scaleY = input.readFloat();\n            data.shearX = input.readFloat();\n            data.shearY = input.readFloat();\n            data.length = input.readFloat() * scale;\n            data.transformMode = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            if (nonessential)\n                Color.rgba8888ToColor(data.color, input.readInt32());\n            skeletonData.bones.push(data);\n        }\n        // Slots.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let slotName = input.readString();\n            let boneData = skeletonData.bones[input.readInt(true)];\n            let data = new SlotData(i, slotName, boneData);\n            Color.rgba8888ToColor(data.color, input.readInt32());\n            let darkColor = input.readInt32();\n            if (darkColor != -1)\n                Color.rgb888ToColor(data.darkColor = new Color(), darkColor);\n            data.attachmentName = input.readStringRef();\n            data.blendMode = input.readInt(true);\n            skeletonData.slots.push(data);\n        }\n        // IK constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let data = new IkConstraintData(input.readString());\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.bones[input.readInt(true)];\n            data.mix = input.readFloat();\n            data.softness = input.readFloat() * scale;\n            data.bendDirection = input.readByte();\n            data.compress = input.readBoolean();\n            data.stretch = input.readBoolean();\n            data.uniform = input.readBoolean();\n            skeletonData.ikConstraints.push(data);\n        }\n        // Transform constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let data = new TransformConstraintData(input.readString());\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.bones[input.readInt(true)];\n            data.local = input.readBoolean();\n            data.relative = input.readBoolean();\n            data.offsetRotation = input.readFloat();\n            data.offsetX = input.readFloat() * scale;\n            data.offsetY = input.readFloat() * scale;\n            data.offsetScaleX = input.readFloat();\n            data.offsetScaleY = input.readFloat();\n            data.offsetShearY = input.readFloat();\n            data.mixRotate = input.readFloat();\n            data.mixX = input.readFloat();\n            data.mixY = input.readFloat();\n            data.mixScaleX = input.readFloat();\n            data.mixScaleY = input.readFloat();\n            data.mixShearY = input.readFloat();\n            skeletonData.transformConstraints.push(data);\n        }\n        // Path constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let data = new PathConstraintData(input.readString());\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.slots[input.readInt(true)];\n            data.positionMode = input.readInt(true);\n            data.spacingMode = input.readInt(true);\n            data.rotateMode = input.readInt(true);\n            data.offsetRotation = input.readFloat();\n            data.position = input.readFloat();\n            if (data.positionMode == PositionMode.Fixed)\n                data.position *= scale;\n            data.spacing = input.readFloat();\n            if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed)\n                data.spacing *= scale;\n            data.mixRotate = input.readFloat();\n            data.mixX = input.readFloat();\n            data.mixY = input.readFloat();\n            skeletonData.pathConstraints.push(data);\n        }\n        // Default skin.\n        let defaultSkin = this.readSkin(input, skeletonData, true, nonessential);\n        if (defaultSkin) {\n            skeletonData.defaultSkin = defaultSkin;\n            skeletonData.skins.push(defaultSkin);\n        }\n        // Skins.\n        {\n            let i = skeletonData.skins.length;\n            Utils.setArraySize(skeletonData.skins, n = i + input.readInt(true));\n            for (; i < n; i++)\n                skeletonData.skins[i] = this.readSkin(input, skeletonData, false, nonessential);\n        }\n        // Linked meshes.\n        n = this.linkedMeshes.length;\n        for (let i = 0; i < n; i++) {\n            let linkedMesh = this.linkedMeshes[i];\n            let skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n            let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n            linkedMesh.mesh.deformAttachment = linkedMesh.inheritDeform ? parent : linkedMesh.mesh;\n            linkedMesh.mesh.setParentMesh(parent);\n            linkedMesh.mesh.updateUVs();\n        }\n        this.linkedMeshes.length = 0;\n        // Events.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let data = new EventData(input.readStringRef());\n            data.intValue = input.readInt(false);\n            data.floatValue = input.readFloat();\n            data.stringValue = input.readString();\n            data.audioPath = input.readString();\n            if (data.audioPath) {\n                data.volume = input.readFloat();\n                data.balance = input.readFloat();\n            }\n            skeletonData.events.push(data);\n        }\n        // Animations.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++)\n            skeletonData.animations.push(this.readAnimation(input, input.readString(), skeletonData));\n        return skeletonData;\n    }\n    readSkin(input, skeletonData, defaultSkin, nonessential) {\n        let skin = null;\n        let slotCount = 0;\n        if (defaultSkin) {\n            slotCount = input.readInt(true);\n            if (slotCount == 0)\n                return null;\n            skin = new Skin(\"default\");\n        }\n        else {\n            skin = new Skin(input.readStringRef());\n            skin.bones.length = input.readInt(true);\n            for (let i = 0, n = skin.bones.length; i < n; i++)\n                skin.bones[i] = skeletonData.bones[input.readInt(true)];\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.ikConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.transformConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.pathConstraints[input.readInt(true)]);\n            slotCount = input.readInt(true);\n        }\n        for (let i = 0; i < slotCount; i++) {\n            let slotIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let name = input.readStringRef();\n                let attachment = this.readAttachment(input, skeletonData, skin, slotIndex, name, nonessential);\n                if (attachment)\n                    skin.setAttachment(slotIndex, name, attachment);\n            }\n        }\n        return skin;\n    }\n    readAttachment(input, skeletonData, skin, slotIndex, attachmentName, nonessential) {\n        let scale = this.scale;\n        let name = input.readStringRef();\n        if (!name)\n            name = attachmentName;\n        switch (input.readByte()) {\n            case AttachmentType.Region: {\n                let path = input.readStringRef();\n                let rotation = input.readFloat();\n                let x = input.readFloat();\n                let y = input.readFloat();\n                let scaleX = input.readFloat();\n                let scaleY = input.readFloat();\n                let width = input.readFloat();\n                let height = input.readFloat();\n                let color = input.readInt32();\n                if (!path)\n                    path = name;\n                let region = this.attachmentLoader.newRegionAttachment(skin, name, path);\n                if (!region)\n                    return null;\n                region.path = path;\n                region.x = x * scale;\n                region.y = y * scale;\n                region.scaleX = scaleX;\n                region.scaleY = scaleY;\n                region.rotation = rotation;\n                region.width = width * scale;\n                region.height = height * scale;\n                Color.rgba8888ToColor(region.color, color);\n                region.updateOffset();\n                return region;\n            }\n            case AttachmentType.BoundingBox: {\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let color = nonessential ? input.readInt32() : 0;\n                let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n                if (!box)\n                    return null;\n                box.worldVerticesLength = vertexCount << 1;\n                box.vertices = vertices.vertices;\n                box.bones = vertices.bones;\n                if (nonessential)\n                    Color.rgba8888ToColor(box.color, color);\n                return box;\n            }\n            case AttachmentType.Mesh: {\n                let path = input.readStringRef();\n                let color = input.readInt32();\n                let vertexCount = input.readInt(true);\n                let uvs = this.readFloatArray(input, vertexCount << 1, 1);\n                let triangles = this.readShortArray(input);\n                let vertices = this.readVertices(input, vertexCount);\n                let hullLength = input.readInt(true);\n                let edges = null;\n                let width = 0, height = 0;\n                if (nonessential) {\n                    edges = this.readShortArray(input);\n                    width = input.readFloat();\n                    height = input.readFloat();\n                }\n                if (!path)\n                    path = name;\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                Color.rgba8888ToColor(mesh.color, color);\n                mesh.bones = vertices.bones;\n                mesh.vertices = vertices.vertices;\n                mesh.worldVerticesLength = vertexCount << 1;\n                mesh.triangles = triangles;\n                mesh.regionUVs = uvs;\n                mesh.updateUVs();\n                mesh.hullLength = hullLength << 1;\n                if (nonessential) {\n                    mesh.edges = edges;\n                    mesh.width = width * scale;\n                    mesh.height = height * scale;\n                }\n                return mesh;\n            }\n            case AttachmentType.LinkedMesh: {\n                let path = input.readStringRef();\n                let color = input.readInt32();\n                let skinName = input.readStringRef();\n                let parent = input.readStringRef();\n                let inheritDeform = input.readBoolean();\n                let width = 0, height = 0;\n                if (nonessential) {\n                    width = input.readFloat();\n                    height = input.readFloat();\n                }\n                if (!path)\n                    path = name;\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                Color.rgba8888ToColor(mesh.color, color);\n                if (nonessential) {\n                    mesh.width = width * scale;\n                    mesh.height = height * scale;\n                }\n                this.linkedMeshes.push(new LinkedMesh(mesh, skinName, slotIndex, parent, inheritDeform));\n                return mesh;\n            }\n            case AttachmentType.Path: {\n                let closed = input.readBoolean();\n                let constantSpeed = input.readBoolean();\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let lengths = Utils.newArray(vertexCount / 3, 0);\n                for (let i = 0, n = lengths.length; i < n; i++)\n                    lengths[i] = input.readFloat() * scale;\n                let color = nonessential ? input.readInt32() : 0;\n                let path = this.attachmentLoader.newPathAttachment(skin, name);\n                if (!path)\n                    return null;\n                path.closed = closed;\n                path.constantSpeed = constantSpeed;\n                path.worldVerticesLength = vertexCount << 1;\n                path.vertices = vertices.vertices;\n                path.bones = vertices.bones;\n                path.lengths = lengths;\n                if (nonessential)\n                    Color.rgba8888ToColor(path.color, color);\n                return path;\n            }\n            case AttachmentType.Point: {\n                let rotation = input.readFloat();\n                let x = input.readFloat();\n                let y = input.readFloat();\n                let color = nonessential ? input.readInt32() : 0;\n                let point = this.attachmentLoader.newPointAttachment(skin, name);\n                if (!point)\n                    return null;\n                point.x = x * scale;\n                point.y = y * scale;\n                point.rotation = rotation;\n                if (nonessential)\n                    Color.rgba8888ToColor(point.color, color);\n                return point;\n            }\n            case AttachmentType.Clipping: {\n                let endSlotIndex = input.readInt(true);\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let color = nonessential ? input.readInt32() : 0;\n                let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n                if (!clip)\n                    return null;\n                clip.endSlot = skeletonData.slots[endSlotIndex];\n                clip.worldVerticesLength = vertexCount << 1;\n                clip.vertices = vertices.vertices;\n                clip.bones = vertices.bones;\n                if (nonessential)\n                    Color.rgba8888ToColor(clip.color, color);\n                return clip;\n            }\n        }\n        return null;\n    }\n    readVertices(input, vertexCount) {\n        let scale = this.scale;\n        let verticesLength = vertexCount << 1;\n        let vertices = new Vertices();\n        if (!input.readBoolean()) {\n            vertices.vertices = this.readFloatArray(input, verticesLength, scale);\n            return vertices;\n        }\n        let weights = new Array();\n        let bonesArray = new Array();\n        for (let i = 0; i < vertexCount; i++) {\n            let boneCount = input.readInt(true);\n            bonesArray.push(boneCount);\n            for (let ii = 0; ii < boneCount; ii++) {\n                bonesArray.push(input.readInt(true));\n                weights.push(input.readFloat() * scale);\n                weights.push(input.readFloat() * scale);\n                weights.push(input.readFloat());\n            }\n        }\n        vertices.vertices = Utils.toFloatArray(weights);\n        vertices.bones = bonesArray;\n        return vertices;\n    }\n    readFloatArray(input, n, scale) {\n        let array = new Array(n);\n        if (scale == 1) {\n            for (let i = 0; i < n; i++)\n                array[i] = input.readFloat();\n        }\n        else {\n            for (let i = 0; i < n; i++)\n                array[i] = input.readFloat() * scale;\n        }\n        return array;\n    }\n    readShortArray(input) {\n        let n = input.readInt(true);\n        let array = new Array(n);\n        for (let i = 0; i < n; i++)\n            array[i] = input.readShort();\n        return array;\n    }\n    readAnimation(input, name, skeletonData) {\n        input.readInt(true); // Number of timelines.\n        let timelines = new Array();\n        let scale = this.scale;\n        let tempColor1 = new Color();\n        let tempColor2 = new Color();\n        // Slot timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let slotIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let timelineType = input.readByte();\n                let frameCount = input.readInt(true);\n                let frameLast = frameCount - 1;\n                switch (timelineType) {\n                    case SLOT_ATTACHMENT: {\n                        let timeline = new AttachmentTimeline(frameCount, slotIndex);\n                        for (let frame = 0; frame < frameCount; frame++)\n                            timeline.setFrame(frame, input.readFloat(), input.readStringRef());\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGBA: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBATimeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let a = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, a);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let r2 = input.readUnsignedByte() / 255.0;\n                            let g2 = input.readUnsignedByte() / 255.0;\n                            let b2 = input.readUnsignedByte() / 255.0;\n                            let a2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, a2, 1);\n                            }\n                            time = time2;\n                            r = r2;\n                            g = g2;\n                            b = b2;\n                            a = a2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGB: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBTimeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let r2 = input.readUnsignedByte() / 255.0;\n                            let g2 = input.readUnsignedByte() / 255.0;\n                            let b2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                            }\n                            time = time2;\n                            r = r2;\n                            g = g2;\n                            b = b2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGBA2: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBA2Timeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let a = input.readUnsignedByte() / 255.0;\n                        let r2 = input.readUnsignedByte() / 255.0;\n                        let g2 = input.readUnsignedByte() / 255.0;\n                        let b2 = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, a, r2, g2, b2);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let nr = input.readUnsignedByte() / 255.0;\n                            let ng = input.readUnsignedByte() / 255.0;\n                            let nb = input.readUnsignedByte() / 255.0;\n                            let na = input.readUnsignedByte() / 255.0;\n                            let nr2 = input.readUnsignedByte() / 255.0;\n                            let ng2 = input.readUnsignedByte() / 255.0;\n                            let nb2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, na, 1);\n                                    setBezier(input, timeline, bezier++, frame, 4, time, time2, r2, nr2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 5, time, time2, g2, ng2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 6, time, time2, b2, nb2, 1);\n                            }\n                            time = time2;\n                            r = nr;\n                            g = ng;\n                            b = nb;\n                            a = na;\n                            r2 = nr2;\n                            g2 = ng2;\n                            b2 = nb2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGB2: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGB2Timeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let r2 = input.readUnsignedByte() / 255.0;\n                        let g2 = input.readUnsignedByte() / 255.0;\n                        let b2 = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, r2, g2, b2);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let nr = input.readUnsignedByte() / 255.0;\n                            let ng = input.readUnsignedByte() / 255.0;\n                            let nb = input.readUnsignedByte() / 255.0;\n                            let nr2 = input.readUnsignedByte() / 255.0;\n                            let ng2 = input.readUnsignedByte() / 255.0;\n                            let nb2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, r2, nr2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 4, time, time2, g2, ng2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 5, time, time2, b2, nb2, 1);\n                            }\n                            time = time2;\n                            r = nr;\n                            g = ng;\n                            b = nb;\n                            r2 = nr2;\n                            g2 = ng2;\n                            b2 = nb2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_ALPHA: {\n                        let timeline = new AlphaTimeline(frameCount, input.readInt(true), slotIndex);\n                        let time = input.readFloat(), a = input.readUnsignedByte() / 255;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, a);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let a2 = input.readUnsignedByte() / 255;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, a, a2, 1);\n                            }\n                            time = time2;\n                            a = a2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                }\n            }\n        }\n        // Bone timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let boneIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let type = input.readByte(), frameCount = input.readInt(true), bezierCount = input.readInt(true);\n                switch (type) {\n                    case BONE_ROTATE:\n                        timelines.push(readTimeline1(input, new RotateTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_TRANSLATE:\n                        timelines.push(readTimeline2(input, new TranslateTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_TRANSLATEX:\n                        timelines.push(readTimeline1(input, new TranslateXTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_TRANSLATEY:\n                        timelines.push(readTimeline1(input, new TranslateYTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_SCALE:\n                        timelines.push(readTimeline2(input, new ScaleTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SCALEX:\n                        timelines.push(readTimeline1(input, new ScaleXTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SCALEY:\n                        timelines.push(readTimeline1(input, new ScaleYTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEAR:\n                        timelines.push(readTimeline2(input, new ShearTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEARX:\n                        timelines.push(readTimeline1(input, new ShearXTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEARY:\n                        timelines.push(readTimeline1(input, new ShearYTimeline(frameCount, bezierCount, boneIndex), 1));\n                }\n            }\n        }\n        // IK constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true), frameCount = input.readInt(true), frameLast = frameCount - 1;\n            let timeline = new IkConstraintTimeline(frameCount, input.readInt(true), index);\n            let time = input.readFloat(), mix = input.readFloat(), softness = input.readFloat() * scale;\n            for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, mix, softness, input.readByte(), input.readBoolean(), input.readBoolean());\n                if (frame == frameLast)\n                    break;\n                let time2 = input.readFloat(), mix2 = input.readFloat(), softness2 = input.readFloat() * scale;\n                switch (input.readByte()) {\n                    case CURVE_STEPPED:\n                        timeline.setStepped(frame);\n                        break;\n                    case CURVE_BEZIER:\n                        setBezier(input, timeline, bezier++, frame, 0, time, time2, mix, mix2, 1);\n                        setBezier(input, timeline, bezier++, frame, 1, time, time2, softness, softness2, scale);\n                }\n                time = time2;\n                mix = mix2;\n                softness = softness2;\n            }\n            timelines.push(timeline);\n        }\n        // Transform constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true), frameCount = input.readInt(true), frameLast = frameCount - 1;\n            let timeline = new TransformConstraintTimeline(frameCount, input.readInt(true), index);\n            let time = input.readFloat(), mixRotate = input.readFloat(), mixX = input.readFloat(), mixY = input.readFloat(), mixScaleX = input.readFloat(), mixScaleY = input.readFloat(), mixShearY = input.readFloat();\n            for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n                if (frame == frameLast)\n                    break;\n                let time2 = input.readFloat(), mixRotate2 = input.readFloat(), mixX2 = input.readFloat(), mixY2 = input.readFloat(), mixScaleX2 = input.readFloat(), mixScaleY2 = input.readFloat(), mixShearY2 = input.readFloat();\n                switch (input.readByte()) {\n                    case CURVE_STEPPED:\n                        timeline.setStepped(frame);\n                        break;\n                    case CURVE_BEZIER:\n                        setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                        setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                        setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n                        setBezier(input, timeline, bezier++, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n                        setBezier(input, timeline, bezier++, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n                        setBezier(input, timeline, bezier++, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n                }\n                time = time2;\n                mixRotate = mixRotate2;\n                mixX = mixX2;\n                mixY = mixY2;\n                mixScaleX = mixScaleX2;\n                mixScaleY = mixScaleY2;\n                mixShearY = mixShearY2;\n            }\n            timelines.push(timeline);\n        }\n        // Path constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true);\n            let data = skeletonData.pathConstraints[index];\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                switch (input.readByte()) {\n                    case PATH_POSITION:\n                        timelines\n                            .push(readTimeline1(input, new PathConstraintPositionTimeline(input.readInt(true), input.readInt(true), index), data.positionMode == PositionMode.Fixed ? scale : 1));\n                        break;\n                    case PATH_SPACING:\n                        timelines\n                            .push(readTimeline1(input, new PathConstraintSpacingTimeline(input.readInt(true), input.readInt(true), index), data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed ? scale : 1));\n                        break;\n                    case PATH_MIX:\n                        let timeline = new PathConstraintMixTimeline(input.readInt(true), input.readInt(true), index);\n                        let time = input.readFloat(), mixRotate = input.readFloat(), mixX = input.readFloat(), mixY = input.readFloat();\n                        for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n                            timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat(), mixRotate2 = input.readFloat(), mixX2 = input.readFloat(), mixY2 = input.readFloat();\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n                            }\n                            time = time2;\n                            mixRotate = mixRotate2;\n                            mixX = mixX2;\n                            mixY = mixY2;\n                        }\n                        timelines.push(timeline);\n                }\n            }\n        }\n        // Deform timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let skin = skeletonData.skins[input.readInt(true)];\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let slotIndex = input.readInt(true);\n                for (let iii = 0, nnn = input.readInt(true); iii < nnn; iii++) {\n                    let attachmentName = input.readStringRef();\n                    let attachment = skin.getAttachment(slotIndex, attachmentName);\n                    let weighted = attachment.bones;\n                    let vertices = attachment.vertices;\n                    let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                    let frameCount = input.readInt(true);\n                    let frameLast = frameCount - 1;\n                    let bezierCount = input.readInt(true);\n                    let timeline = new DeformTimeline(frameCount, bezierCount, slotIndex, attachment);\n                    let time = input.readFloat();\n                    for (let frame = 0, bezier = 0;; frame++) {\n                        let deform;\n                        let end = input.readInt(true);\n                        if (end == 0)\n                            deform = weighted ? Utils.newFloatArray(deformLength) : vertices;\n                        else {\n                            deform = Utils.newFloatArray(deformLength);\n                            let start = input.readInt(true);\n                            end += start;\n                            if (scale == 1) {\n                                for (let v = start; v < end; v++)\n                                    deform[v] = input.readFloat();\n                            }\n                            else {\n                                for (let v = start; v < end; v++)\n                                    deform[v] = input.readFloat() * scale;\n                            }\n                            if (!weighted) {\n                                for (let v = 0, vn = deform.length; v < vn; v++)\n                                    deform[v] += vertices[v];\n                            }\n                        }\n                        timeline.setFrame(frame, time, deform);\n                        if (frame == frameLast)\n                            break;\n                        let time2 = input.readFloat();\n                        switch (input.readByte()) {\n                            case CURVE_STEPPED:\n                                timeline.setStepped(frame);\n                                break;\n                            case CURVE_BEZIER:\n                                setBezier(input, timeline, bezier++, frame, 0, time, time2, 0, 1, 1);\n                        }\n                        time = time2;\n                    }\n                    timelines.push(timeline);\n                }\n            }\n        }\n        // Draw order timeline.\n        let drawOrderCount = input.readInt(true);\n        if (drawOrderCount > 0) {\n            let timeline = new DrawOrderTimeline(drawOrderCount);\n            let slotCount = skeletonData.slots.length;\n            for (let i = 0; i < drawOrderCount; i++) {\n                let time = input.readFloat();\n                let offsetCount = input.readInt(true);\n                let drawOrder = Utils.newArray(slotCount, 0);\n                for (let ii = slotCount - 1; ii >= 0; ii--)\n                    drawOrder[ii] = -1;\n                let unchanged = Utils.newArray(slotCount - offsetCount, 0);\n                let originalIndex = 0, unchangedIndex = 0;\n                for (let ii = 0; ii < offsetCount; ii++) {\n                    let slotIndex = input.readInt(true);\n                    // Collect unchanged items.\n                    while (originalIndex != slotIndex)\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    // Set changed items.\n                    drawOrder[originalIndex + input.readInt(true)] = originalIndex++;\n                }\n                // Collect remaining unchanged items.\n                while (originalIndex < slotCount)\n                    unchanged[unchangedIndex++] = originalIndex++;\n                // Fill in unchanged items.\n                for (let ii = slotCount - 1; ii >= 0; ii--)\n                    if (drawOrder[ii] == -1)\n                        drawOrder[ii] = unchanged[--unchangedIndex];\n                timeline.setFrame(i, time, drawOrder);\n            }\n            timelines.push(timeline);\n        }\n        // Event timeline.\n        let eventCount = input.readInt(true);\n        if (eventCount > 0) {\n            let timeline = new EventTimeline(eventCount);\n            for (let i = 0; i < eventCount; i++) {\n                let time = input.readFloat();\n                let eventData = skeletonData.events[input.readInt(true)];\n                let event = new Event(time, eventData);\n                event.intValue = input.readInt(false);\n                event.floatValue = input.readFloat();\n                event.stringValue = input.readBoolean() ? input.readString() : eventData.stringValue;\n                if (event.data.audioPath) {\n                    event.volume = input.readFloat();\n                    event.balance = input.readFloat();\n                }\n                timeline.setFrame(i, event);\n            }\n            timelines.push(timeline);\n        }\n        let duration = 0;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            duration = Math.max(duration, timelines[i].getDuration());\n        return new Animation(name, timelines, duration);\n    }\n}\nexport class BinaryInput {\n    constructor(data, strings = new Array(), index = 0, buffer = new DataView(data.buffer)) {\n        this.strings = strings;\n        this.index = index;\n        this.buffer = buffer;\n    }\n    readByte() {\n        return this.buffer.getInt8(this.index++);\n    }\n    readUnsignedByte() {\n        return this.buffer.getUint8(this.index++);\n    }\n    readShort() {\n        let value = this.buffer.getInt16(this.index);\n        this.index += 2;\n        return value;\n    }\n    readInt32() {\n        let value = this.buffer.getInt32(this.index);\n        this.index += 4;\n        return value;\n    }\n    readInt(optimizePositive) {\n        let b = this.readByte();\n        let result = b & 0x7F;\n        if ((b & 0x80) != 0) {\n            b = this.readByte();\n            result |= (b & 0x7F) << 7;\n            if ((b & 0x80) != 0) {\n                b = this.readByte();\n                result |= (b & 0x7F) << 14;\n                if ((b & 0x80) != 0) {\n                    b = this.readByte();\n                    result |= (b & 0x7F) << 21;\n                    if ((b & 0x80) != 0) {\n                        b = this.readByte();\n                        result |= (b & 0x7F) << 28;\n                    }\n                }\n            }\n        }\n        return optimizePositive ? result : ((result >>> 1) ^ -(result & 1));\n    }\n    readStringRef() {\n        let index = this.readInt(true);\n        return index == 0 ? null : this.strings[index - 1];\n    }\n    readString() {\n        let byteCount = this.readInt(true);\n        switch (byteCount) {\n            case 0:\n                return null;\n            case 1:\n                return \"\";\n        }\n        byteCount--;\n        let chars = \"\";\n        let charCount = 0;\n        for (let i = 0; i < byteCount;) {\n            let b = this.readByte();\n            switch (b >> 4) {\n                case 12:\n                case 13:\n                    chars += String.fromCharCode(((b & 0x1F) << 6 | this.readByte() & 0x3F));\n                    i += 2;\n                    break;\n                case 14:\n                    chars += String.fromCharCode(((b & 0x0F) << 12 | (this.readByte() & 0x3F) << 6 | this.readByte() & 0x3F));\n                    i += 3;\n                    break;\n                default:\n                    chars += String.fromCharCode(b);\n                    i++;\n            }\n        }\n        return chars;\n    }\n    readFloat() {\n        let value = this.buffer.getFloat32(this.index);\n        this.index += 4;\n        return value;\n    }\n    readBoolean() {\n        return this.readByte() != 0;\n    }\n}\nclass LinkedMesh {\n    constructor(mesh, skin, slotIndex, parent, inheritDeform) {\n        this.mesh = mesh;\n        this.skin = skin;\n        this.slotIndex = slotIndex;\n        this.parent = parent;\n        this.inheritDeform = inheritDeform;\n    }\n}\nclass Vertices {\n    constructor(bones = null, vertices = null) {\n        this.bones = bones;\n        this.vertices = vertices;\n    }\n}\nvar AttachmentType;\n(function (AttachmentType) {\n    AttachmentType[AttachmentType[\"Region\"] = 0] = \"Region\";\n    AttachmentType[AttachmentType[\"BoundingBox\"] = 1] = \"BoundingBox\";\n    AttachmentType[AttachmentType[\"Mesh\"] = 2] = \"Mesh\";\n    AttachmentType[AttachmentType[\"LinkedMesh\"] = 3] = \"LinkedMesh\";\n    AttachmentType[AttachmentType[\"Path\"] = 4] = \"Path\";\n    AttachmentType[AttachmentType[\"Point\"] = 5] = \"Point\";\n    AttachmentType[AttachmentType[\"Clipping\"] = 6] = \"Clipping\";\n})(AttachmentType || (AttachmentType = {}));\nfunction readTimeline1(input, timeline, scale) {\n    let time = input.readFloat(), value = input.readFloat() * scale;\n    for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n        timeline.setFrame(frame, time, value);\n        if (frame == frameLast)\n            break;\n        let time2 = input.readFloat(), value2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n            case CURVE_STEPPED:\n                timeline.setStepped(frame);\n                break;\n            case CURVE_BEZIER:\n                setBezier(input, timeline, bezier++, frame, 0, time, time2, value, value2, scale);\n        }\n        time = time2;\n        value = value2;\n    }\n    return timeline;\n}\nfunction readTimeline2(input, timeline, scale) {\n    let time = input.readFloat(), value1 = input.readFloat() * scale, value2 = input.readFloat() * scale;\n    for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n        timeline.setFrame(frame, time, value1, value2);\n        if (frame == frameLast)\n            break;\n        let time2 = input.readFloat(), nvalue1 = input.readFloat() * scale, nvalue2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n            case CURVE_STEPPED:\n                timeline.setStepped(frame);\n                break;\n            case CURVE_BEZIER:\n                setBezier(input, timeline, bezier++, frame, 0, time, time2, value1, nvalue1, scale);\n                setBezier(input, timeline, bezier++, frame, 1, time, time2, value2, nvalue2, scale);\n        }\n        time = time2;\n        value1 = nvalue1;\n        value2 = nvalue2;\n    }\n    return timeline;\n}\nfunction setBezier(input, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n    timeline.setBezier(bezier, frame, value, time1, value1, input.readFloat(), input.readFloat() * scale, input.readFloat(), input.readFloat() * scale, time2, value2);\n}\nconst BONE_ROTATE = 0;\nconst BONE_TRANSLATE = 1;\nconst BONE_TRANSLATEX = 2;\nconst BONE_TRANSLATEY = 3;\nconst BONE_SCALE = 4;\nconst BONE_SCALEX = 5;\nconst BONE_SCALEY = 6;\nconst BONE_SHEAR = 7;\nconst BONE_SHEARX = 8;\nconst BONE_SHEARY = 9;\nconst SLOT_ATTACHMENT = 0;\nconst SLOT_RGBA = 1;\nconst SLOT_RGB = 2;\nconst SLOT_RGBA2 = 3;\nconst SLOT_RGB2 = 4;\nconst SLOT_ALPHA = 5;\nconst PATH_POSITION = 0;\nconst PATH_SPACING = 1;\nconst PATH_MIX = 2;\nconst CURVE_LINEAR = 0;\nconst CURVE_STEPPED = 1;\nconst CURVE_BEZIER = 2;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b25CaW5hcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU2tlbGV0b25CaW5hcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxTQUFTLEVBQVksa0JBQWtCLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxjQUFjLEVBQUUsaUJBQWlCLEVBQUUsa0JBQWtCLEVBQUUsa0JBQWtCLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsb0JBQW9CLEVBQUUsMkJBQTJCLEVBQUUsOEJBQThCLEVBQUUsNkJBQTZCLEVBQUUseUJBQXlCLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixFQUFFLGFBQWEsRUFBaUQsTUFBTSxhQUFhLENBQUM7QUFJcGlCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNoQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDckYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDOUIsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN0QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxN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QVk7b0NBQ2hCLFNBQVMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO29DQUN0RSxTQUFTLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztvQ0FDdEUsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0NBQ3RFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO29DQUN0RSxTQUFTLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztvQ0FDeEUsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0NBQ3hFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDOzZCQUN6RTs0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QUMsQ0FBQzt3QkFDeEcsTUFBTTtvQkFDUCxLQUFLLFVBQVU7d0JBQ2QsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLElBQUksYUFBYSxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDL0YsTUFBTTtvQkFDUCxLQUFLLFdBQVc7d0JBQ2YsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLElBQUksY0FBYyxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDaEcsTUFBTTtvQkFDUCxLQUFLLFdBQVc7d0JBQ2YsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLElBQUksY0FBYyxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDaEcsTUFBTTtvQkFDUCxLQUFLLFVBQVU7d0JBQ2QsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLElBQUksYUFBYSxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDL0YsTUFBTTtvQkFDUCxLQUFLLFdBQVc7d0JBQ2YsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLElBQUksY0FBYyxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDaEcsTUFBTTtvQkFDUCxLQUFLLFdBQVc7d0JBQ2YsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLElBQUksY0FBYyxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDakc7YUFDRDtTQUNEO1FBRUQsMkJBQTJCO1FBQzNCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDcEQsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxVQUFVLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxTQUFTLEdBQUcsVUFBVSxHQUFHLENBQUMsQ0FBQztZQUM5RixJQUFJLFFBQVEsR0FBRyxJQUFJLG9CQUFvQixDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ2hGLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFBRSxHQUFHLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFFLFFBQVEsR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLEdBQUcsS0FBSyxDQUFDO1lBQzVGLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLE1BQU0sR0FBRyxDQUFDLEdBQUksS0FBSyxFQUFFLEVBQUU7Z0JBQzFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFBRSxLQUFLLENBQUMsV0FBVyxFQUFFLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7Z0JBQzFHLElBQUksS0FBSyxJQUFJLFNBQVM7b0JBQUUsTUFBTTtnQkFDOUIsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFFLElBQUksR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQUUsU0FBUyxHQUFHLEtBQUssQ0FBQyxTQUFTLEVBQUUsR0FBRyxLQUFLLENBQUM7Z0JBQy9GLFFBQVEsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFFO29CQUN6QixLQUFLLGFBQWE7d0JBQ2pCLFFBQVEsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBQzNCLE1BQU07b0JBQ1AsS0FBSyxZQUFZO3dCQUNoQixTQUFTLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQzt3QkFDMUUsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7aUJBQ3pGO2dCQUNELElBQUksR0FBRyxLQUFLLENBQUM7Z0JBQ2IsR0FBRyxHQUFHLElBQUksQ0FBQztnQkFDWCxRQUFRLEdBQUcsU0FBUyxDQUFDO2FBQ3JCO1lBQ0QsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN6QjtRQUVELGtDQUFrQztRQUNsQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3BELElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsVUFBVSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsU0FBUyxHQUFHLFVBQVUsR0FBRyxDQUFDLENBQUM7WUFDOUYsSUFBSSxRQUFRLEdBQUcsSUFBSSwyQkFBMkIsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUN2RixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQUUsU0FBUyxHQUFHLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFBRSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFFLElBQUksR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQzlHLFNBQVMsR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQUUsU0FBUyxHQUFHLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFBRSxTQUFTLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQzdGLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLE1BQU0sR0FBRyxDQUFDLEdBQUksS0FBSyxFQUFFLEVBQUU7Z0JBQzFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO2dCQUN2RixJQUFJLEtBQUssSUFBSSxTQUFTO29CQUFFLE1BQU07Z0JBQzlCLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFBRSxVQUFVLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFFLEtBQUssR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQUUsS0FBSyxHQUFHLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFDbEgsVUFBVSxHQUFHLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFBRSxVQUFVLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFFLFVBQVUsR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUM7Z0JBQ2hHLFFBQVEsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFFO29CQUN6QixLQUFLLGFBQWE7d0JBQ2pCLFFBQVEsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBQzNCLE1BQU07b0JBQ1AsS0FBSyxZQUFZO3dCQUNoQixTQUFTLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQzt3QkFDdEYsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7d0JBQzVFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO3dCQUM1RSxTQUFTLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQzt3QkFDdEYsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUM7d0JBQ3RGLFNBQVMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUN2RjtnQkFDRCxJQUFJLEdBQUcsS0FBSyxDQUFDO2dCQUNiLFNBQVMsR0FBRyxVQUFVLENBQUM7Z0JBQ3ZCLElBQUksR0FBRyxLQUFLLENBQUM7Z0JBQ2IsSUFBSSxHQUFHLEtBQUssQ0FBQztnQkFDYixTQUFTLEdBQUcsVUFBVSxDQUFDO2dCQUN2QixTQUFTLEdBQUcsVUFBVSxDQUFDO2dCQUN2QixTQUFTLEdBQUcsVUFBVSxDQUFDO2FBQ3ZCO1lBQ0QsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN6QjtRQUVELDZC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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BoundingBoxAttachment } from \"./attachments/BoundingBoxAttachment\";\nimport { Pool, Utils } from \"./Utils\";\n/** Collects each visible {@link BoundingBoxAttachment} and computes the world vertices for its polygon. The polygon vertices are\n * provided along with convenience methods for doing hit detection. */\nexport class SkeletonBounds {\n    constructor() {\n        /** The left edge of the axis aligned bounding box. */\n        this.minX = 0;\n        /** The bottom edge of the axis aligned bounding box. */\n        this.minY = 0;\n        /** The right edge of the axis aligned bounding box. */\n        this.maxX = 0;\n        /** The top edge of the axis aligned bounding box. */\n        this.maxY = 0;\n        /** The visible bounding boxes. */\n        this.boundingBoxes = new Array();\n        /** The world vertices for the bounding box polygons. */\n        this.polygons = new Array();\n        this.polygonPool = new Pool(() => {\n            return Utils.newFloatArray(16);\n        });\n    }\n    /** Clears any previous polygons, finds all visible bounding box attachments, and computes the world vertices for each bounding\n     * box's polygon.\n     * @param updateAabb If true, the axis aligned bounding box containing all the polygons is computed. If false, the\n     *           SkeletonBounds AABB methods will always return true. */\n    update(skeleton, updateAabb) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        let boundingBoxes = this.boundingBoxes;\n        let polygons = this.polygons;\n        let polygonPool = this.polygonPool;\n        let slots = skeleton.slots;\n        let slotCount = slots.length;\n        boundingBoxes.length = 0;\n        polygonPool.freeAll(polygons);\n        polygons.length = 0;\n        for (let i = 0; i < slotCount; i++) {\n            let slot = slots[i];\n            if (!slot.bone.active)\n                continue;\n            let attachment = slot.getAttachment();\n            if (attachment instanceof BoundingBoxAttachment) {\n                let boundingBox = attachment;\n                boundingBoxes.push(boundingBox);\n                let polygon = polygonPool.obtain();\n                if (polygon.length != boundingBox.worldVerticesLength) {\n                    polygon = Utils.newFloatArray(boundingBox.worldVerticesLength);\n                }\n                polygons.push(polygon);\n                boundingBox.computeWorldVertices(slot, 0, boundingBox.worldVerticesLength, polygon, 0, 2);\n            }\n        }\n        if (updateAabb) {\n            this.aabbCompute();\n        }\n        else {\n            this.minX = Number.POSITIVE_INFINITY;\n            this.minY = Number.POSITIVE_INFINITY;\n            this.maxX = Number.NEGATIVE_INFINITY;\n            this.maxY = Number.NEGATIVE_INFINITY;\n        }\n    }\n    aabbCompute() {\n        let minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++) {\n            let polygon = polygons[i];\n            let vertices = polygon;\n            for (let ii = 0, nn = polygon.length; ii < nn; ii += 2) {\n                let x = vertices[ii];\n                let y = vertices[ii + 1];\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n                maxX = Math.max(maxX, x);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n    /** Returns true if the axis aligned bounding box contains the point. */\n    aabbContainsPoint(x, y) {\n        return x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY;\n    }\n    /** Returns true if the axis aligned bounding box intersects the line segment. */\n    aabbIntersectsSegment(x1, y1, x2, y2) {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n        if ((x1 <= minX && x2 <= minX) || (y1 <= minY && y2 <= minY) || (x1 >= maxX && x2 >= maxX) || (y1 >= maxY && y2 >= maxY))\n            return false;\n        let m = (y2 - y1) / (x2 - x1);\n        let y = m * (minX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        y = m * (maxX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        let x = (minY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        x = (maxY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        return false;\n    }\n    /** Returns true if the axis aligned bounding box intersects the axis aligned bounding box of the specified bounds. */\n    aabbIntersectsSkeleton(bounds) {\n        return this.minX < bounds.maxX && this.maxX > bounds.minX && this.minY < bounds.maxY && this.maxY > bounds.minY;\n    }\n    /** Returns the first bounding box attachment that contains the point, or null. When doing many checks, it is usually more\n     * efficient to only call this method if {@link #aabbContainsPoint(float, float)} returns true. */\n    containsPoint(x, y) {\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++)\n            if (this.containsPointPolygon(polygons[i], x, y))\n                return this.boundingBoxes[i];\n        return null;\n    }\n    /** Returns true if the polygon contains the point. */\n    containsPointPolygon(polygon, x, y) {\n        let vertices = polygon;\n        let nn = polygon.length;\n        let prevIndex = nn - 2;\n        let inside = false;\n        for (let ii = 0; ii < nn; ii += 2) {\n            let vertexY = vertices[ii + 1];\n            let prevY = vertices[prevIndex + 1];\n            if ((vertexY < y && prevY >= y) || (prevY < y && vertexY >= y)) {\n                let vertexX = vertices[ii];\n                if (vertexX + (y - vertexY) / (prevY - vertexY) * (vertices[prevIndex] - vertexX) < x)\n                    inside = !inside;\n            }\n            prevIndex = ii;\n        }\n        return inside;\n    }\n    /** Returns the first bounding box attachment that contains any part of the line segment, or null. When doing many checks, it\n     * is usually more efficient to only call this method if {@link #aabbIntersectsSegment()} returns\n     * true. */\n    intersectsSegment(x1, y1, x2, y2) {\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++)\n            if (this.intersectsSegmentPolygon(polygons[i], x1, y1, x2, y2))\n                return this.boundingBoxes[i];\n        return null;\n    }\n    /** Returns true if the polygon contains any part of the line segment. */\n    intersectsSegmentPolygon(polygon, x1, y1, x2, y2) {\n        let vertices = polygon;\n        let nn = polygon.length;\n        let width12 = x1 - x2, height12 = y1 - y2;\n        let det1 = x1 * y2 - y1 * x2;\n        let x3 = vertices[nn - 2], y3 = vertices[nn - 1];\n        for (let ii = 0; ii < nn; ii += 2) {\n            let x4 = vertices[ii], y4 = vertices[ii + 1];\n            let det2 = x3 * y4 - y3 * x4;\n            let width34 = x3 - x4, height34 = y3 - y4;\n            let det3 = width12 * height34 - height12 * width34;\n            let x = (det1 * width34 - width12 * det2) / det3;\n            if (((x >= x3 && x <= x4) || (x >= x4 && x <= x3)) && ((x >= x1 && x <= x2) || (x >= x2 && x <= x1))) {\n                let y = (det1 * height34 - height12 * det2) / det3;\n                if (((y >= y3 && y <= y4) || (y >= y4 && y <= y3)) && ((y >= y1 && y <= y2) || (y >= y2 && y <= y1)))\n                    return true;\n            }\n            x3 = x4;\n            y3 = y4;\n        }\n        return false;\n    }\n    /** Returns the polygon for the specified bounding box, or null. */\n    getPolygon(boundingBox) {\n        if (!boundingBox)\n            throw new Error(\"boundingBox cannot be null.\");\n        let index = this.boundingBoxes.indexOf(boundingBox);\n        return index == -1 ? null : this.polygons[index];\n    }\n    /** The width of the axis aligned bounding box. */\n    getWidth() {\n        return this.maxX - this.minX;\n    }\n    /** The height of the axis aligned bounding box. */\n    getHeight() {\n        return this.maxY - this.minY;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Pool } from \"./Utils\";\nexport class Triangulator {\n    constructor() {\n        this.convexPolygons = new Array();\n        this.convexPolygonsIndices = new Array();\n        this.indicesArray = new Array();\n        this.isConcaveArray = new Array();\n        this.triangles = new Array();\n        this.polygonPool = new Pool(() => {\n            return new Array();\n        });\n        this.polygonIndicesPool = new Pool(() => {\n            return new Array();\n        });\n    }\n    triangulate(verticesArray) {\n        let vertices = verticesArray;\n        let vertexCount = verticesArray.length >> 1;\n        let indices = this.indicesArray;\n        indices.length = 0;\n        for (let i = 0; i < vertexCount; i++)\n            indices[i] = i;\n        let isConcave = this.isConcaveArray;\n        isConcave.length = 0;\n        for (let i = 0, n = vertexCount; i < n; ++i)\n            isConcave[i] = Triangulator.isConcave(i, vertexCount, vertices, indices);\n        let triangles = this.triangles;\n        triangles.length = 0;\n        while (vertexCount > 3) {\n            // Find ear tip.\n            let previous = vertexCount - 1, i = 0, next = 1;\n            while (true) {\n                outer: if (!isConcave[i]) {\n                    let p1 = indices[previous] << 1, p2 = indices[i] << 1, p3 = indices[next] << 1;\n                    let p1x = vertices[p1], p1y = vertices[p1 + 1];\n                    let p2x = vertices[p2], p2y = vertices[p2 + 1];\n                    let p3x = vertices[p3], p3y = vertices[p3 + 1];\n                    for (let ii = (next + 1) % vertexCount; ii != previous; ii = (ii + 1) % vertexCount) {\n                        if (!isConcave[ii])\n                            continue;\n                        let v = indices[ii] << 1;\n                        let vx = vertices[v], vy = vertices[v + 1];\n                        if (Triangulator.positiveArea(p3x, p3y, p1x, p1y, vx, vy)) {\n                            if (Triangulator.positiveArea(p1x, p1y, p2x, p2y, vx, vy)) {\n                                if (Triangulator.positiveArea(p2x, p2y, p3x, p3y, vx, vy))\n                                    break outer;\n                            }\n                        }\n                    }\n                    break;\n                }\n                if (next == 0) {\n                    do {\n                        if (!isConcave[i])\n                            break;\n                        i--;\n                    } while (i > 0);\n                    break;\n                }\n                previous = i;\n                i = next;\n                next = (next + 1) % vertexCount;\n            }\n            // Cut ear tip.\n            triangles.push(indices[(vertexCount + i - 1) % vertexCount]);\n            triangles.push(indices[i]);\n            triangles.push(indices[(i + 1) % vertexCount]);\n            indices.splice(i, 1);\n            isConcave.splice(i, 1);\n            vertexCount--;\n            let previousIndex = (vertexCount + i - 1) % vertexCount;\n            let nextIndex = i == vertexCount ? 0 : i;\n            isConcave[previousIndex] = Triangulator.isConcave(previousIndex, vertexCount, vertices, indices);\n            isConcave[nextIndex] = Triangulator.isConcave(nextIndex, vertexCount, vertices, indices);\n        }\n        if (vertexCount == 3) {\n            triangles.push(indices[2]);\n            triangles.push(indices[0]);\n            triangles.push(indices[1]);\n        }\n        return triangles;\n    }\n    decompose(verticesArray, triangles) {\n        let vertices = verticesArray;\n        let convexPolygons = this.convexPolygons;\n        this.polygonPool.freeAll(convexPolygons);\n        convexPolygons.length = 0;\n        let convexPolygonsIndices = this.convexPolygonsIndices;\n        this.polygonIndicesPool.freeAll(convexPolygonsIndices);\n        convexPolygonsIndices.length = 0;\n        let polygonIndices = this.polygonIndicesPool.obtain();\n        polygonIndices.length = 0;\n        let polygon = this.polygonPool.obtain();\n        polygon.length = 0;\n        // Merge subsequent triangles if they form a triangle fan.\n        let fanBaseIndex = -1, lastWinding = 0;\n        for (let i = 0, n = triangles.length; i < n; i += 3) {\n            let t1 = triangles[i] << 1, t2 = triangles[i + 1] << 1, t3 = triangles[i + 2] << 1;\n            let x1 = vertices[t1], y1 = vertices[t1 + 1];\n            let x2 = vertices[t2], y2 = vertices[t2 + 1];\n            let x3 = vertices[t3], y3 = vertices[t3 + 1];\n            // If the base of the last triangle is the same as this triangle, check if they form a convex polygon (triangle fan).\n            let merged = false;\n            if (fanBaseIndex == t1) {\n                let o = polygon.length - 4;\n                let winding1 = Triangulator.winding(polygon[o], polygon[o + 1], polygon[o + 2], polygon[o + 3], x3, y3);\n                let winding2 = Triangulator.winding(x3, y3, polygon[0], polygon[1], polygon[2], polygon[3]);\n                if (winding1 == lastWinding && winding2 == lastWinding) {\n                    polygon.push(x3);\n                    polygon.push(y3);\n                    polygonIndices.push(t3);\n                    merged = true;\n                }\n            }\n            // Otherwise make this triangle the new base.\n            if (!merged) {\n                if (polygon.length > 0) {\n                    convexPolygons.push(polygon);\n                    convexPolygonsIndices.push(polygonIndices);\n                }\n                else {\n                    this.polygonPool.free(polygon);\n                    this.polygonIndicesPool.free(polygonIndices);\n                }\n                polygon = this.polygonPool.obtain();\n                polygon.length = 0;\n                polygon.push(x1);\n                polygon.push(y1);\n                polygon.push(x2);\n                polygon.push(y2);\n                polygon.push(x3);\n                polygon.push(y3);\n                polygonIndices = this.polygonIndicesPool.obtain();\n                polygonIndices.length = 0;\n                polygonIndices.push(t1);\n                polygonIndices.push(t2);\n                polygonIndices.push(t3);\n                lastWinding = Triangulator.winding(x1, y1, x2, y2, x3, y3);\n                fanBaseIndex = t1;\n            }\n        }\n        if (polygon.length > 0) {\n            convexPolygons.push(polygon);\n            convexPolygonsIndices.push(polygonIndices);\n        }\n        // Go through the list of polygons and try to merge the remaining triangles with the found triangle fans.\n        for (let i = 0, n = convexPolygons.length; i < n; i++) {\n            polygonIndices = convexPolygonsIndices[i];\n            if (polygonIndices.length == 0)\n                continue;\n            let firstIndex = polygonIndices[0];\n            let lastIndex = polygonIndices[polygonIndices.length - 1];\n            polygon = convexPolygons[i];\n            let o = polygon.length - 4;\n            let prevPrevX = polygon[o], prevPrevY = polygon[o + 1];\n            let prevX = polygon[o + 2], prevY = polygon[o + 3];\n            let firstX = polygon[0], firstY = polygon[1];\n            let secondX = polygon[2], secondY = polygon[3];\n            let winding = Triangulator.winding(prevPrevX, prevPrevY, prevX, prevY, firstX, firstY);\n            for (let ii = 0; ii < n; ii++) {\n                if (ii == i)\n                    continue;\n                let otherIndices = convexPolygonsIndices[ii];\n                if (otherIndices.length != 3)\n                    continue;\n                let otherFirstIndex = otherIndices[0];\n                let otherSecondIndex = otherIndices[1];\n                let otherLastIndex = otherIndices[2];\n                let otherPoly = convexPolygons[ii];\n                let x3 = otherPoly[otherPoly.length - 2], y3 = otherPoly[otherPoly.length - 1];\n                if (otherFirstIndex != firstIndex || otherSecondIndex != lastIndex)\n                    continue;\n                let winding1 = Triangulator.winding(prevPrevX, prevPrevY, prevX, prevY, x3, y3);\n                let winding2 = Triangulator.winding(x3, y3, firstX, firstY, secondX, secondY);\n                if (winding1 == winding && winding2 == winding) {\n                    otherPoly.length = 0;\n                    otherIndices.length = 0;\n                    polygon.push(x3);\n                    polygon.push(y3);\n                    polygonIndices.push(otherLastIndex);\n                    prevPrevX = prevX;\n                    prevPrevY = prevY;\n                    prevX = x3;\n                    prevY = y3;\n                    ii = 0;\n                }\n            }\n        }\n        // Remove empty polygons that resulted from the merge step above.\n        for (let i = convexPolygons.length - 1; i >= 0; i--) {\n            polygon = convexPolygons[i];\n            if (polygon.length == 0) {\n                convexPolygons.splice(i, 1);\n                this.polygonPool.free(polygon);\n                polygonIndices = convexPolygonsIndices[i];\n                convexPolygonsIndices.splice(i, 1);\n                this.polygonIndicesPool.free(polygonIndices);\n            }\n        }\n        return convexPolygons;\n    }\n    static isConcave(index, vertexCount, vertices, indices) {\n        let previous = indices[(vertexCount + index - 1) % vertexCount] << 1;\n        let current = indices[index] << 1;\n        let next = indices[(index + 1) % vertexCount] << 1;\n        return !this.positiveArea(vertices[previous], vertices[previous + 1], vertices[current], vertices[current + 1], vertices[next], vertices[next + 1]);\n    }\n    static positiveArea(p1x, p1y, p2x, p2y, p3x, p3y) {\n        return p1x * (p3y - p2y) + p2x * (p1y - p3y) + p3x * (p2y - p1y) >= 0;\n    }\n    static winding(p1x, p1y, p2x, p2y, p3x, p3y) {\n        let px = p2x - p1x, py = p2y - p1y;\n        return p3x * py - p3y * px + px * p1y - p1x * py >= 0 ? 1 : -1;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJpYW5ndWxhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1RyaWFuZ3VsYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFtQixJQUFJLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFaEQsTUFBTSxPQUFPLFlBQVk7SUFBekI7UUFDUyxtQkFBYyxHQUFHLElBQUksS0FBSyxFQUFpQixDQUFDO1FBQzVDLDBCQUFxQixHQUFHLElBQUksS0FBSyxFQUFpQixDQUFDO1FBRW5ELGlCQUFZLEdBQUcsSUFBSSxLQUFLLEVBQVUsQ0FBQztRQUNuQyxtQkFBYyxHQUFHLElBQUksS0FBSyxFQUFXLENBQUM7UUFDdEMsY0FBUyxHQUFHLElBQUksS0FBSyxFQUFVLENBQUM7UUFFaEMsZ0JBQVcsR0FBRyxJQUFJLElBQUksQ0FBZ0IsR0FBRyxFQUFFO1lBQ2xELE9BQU8sSUFBSSxLQUFLLEVBQVUsQ0FBQztRQUM1QixDQUFDLENBQUMsQ0FBQztRQUVLLHVCQUFrQixHQUFHLElBQUksSUFBSSxDQUFnQixHQUFHLEVBQUU7WUFDekQsT0FBTyxJQUFJLEtBQUssRUFBVSxDQUFDO1FBQzVCLENBQUMsQ0FBQyxDQUFDO0lBK05KLENBQUM7SUE3Tk8sV0FBVyxDQUFFLGFBQThCO1FBQ2pELElBQUksUUFBUSxHQUFHLGFBQWEsQ0FBQztRQUM3QixJQUFJLFdBQVcsR0FBRyxhQUFhLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQztRQUU1QyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ2hDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLEVBQUUsQ0FBQyxFQUFFO1lBQ25DLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFF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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Triangulator } from \"./Triangulator\";\nimport { Utils } from \"./Utils\";\nexport class SkeletonClipping {\n    constructor() {\n        this.triangulator = new Triangulator();\n        this.clippingPolygon = new Array();\n        this.clipOutput = new Array();\n        this.clippedVertices = new Array();\n        this.clippedTriangles = new Array();\n        this.scratch = new Array();\n    }\n    clipStart(slot, clip) {\n        if (this.clipAttachment)\n            return 0;\n        this.clipAttachment = clip;\n        let n = clip.worldVerticesLength;\n        let vertices = Utils.setArraySize(this.clippingPolygon, n);\n        clip.computeWorldVertices(slot, 0, n, vertices, 0, 2);\n        let clippingPolygon = this.clippingPolygon;\n        SkeletonClipping.makeClockwise(clippingPolygon);\n        let clippingPolygons = this.clippingPolygons = this.triangulator.decompose(clippingPolygon, this.triangulator.triangulate(clippingPolygon));\n        for (let i = 0, n = clippingPolygons.length; i < n; i++) {\n            let polygon = clippingPolygons[i];\n            SkeletonClipping.makeClockwise(polygon);\n            polygon.push(polygon[0]);\n            polygon.push(polygon[1]);\n        }\n        return clippingPolygons.length;\n    }\n    clipEndWithSlot(slot) {\n        if (this.clipAttachment && this.clipAttachment.endSlot == slot.data)\n            this.clipEnd();\n    }\n    clipEnd() {\n        if (!this.clipAttachment)\n            return;\n        this.clipAttachment = null;\n        this.clippingPolygons = null;\n        this.clippedVertices.length = 0;\n        this.clippedTriangles.length = 0;\n        this.clippingPolygon.length = 0;\n    }\n    isClipping() {\n        return this.clipAttachment != null;\n    }\n    clipTriangles(vertices, verticesLength, triangles, trianglesLength, uvs, light, dark, twoColor) {\n        let clipOutput = this.clipOutput, clippedVertices = this.clippedVertices;\n        let clippedTriangles = this.clippedTriangles;\n        let polygons = this.clippingPolygons;\n        let polygonsCount = this.clippingPolygons.length;\n        let vertexSize = twoColor ? 12 : 8;\n        let index = 0;\n        clippedVertices.length = 0;\n        clippedTriangles.length = 0;\n        outer: for (let i = 0; i < trianglesLength; i += 3) {\n            let vertexOffset = triangles[i] << 1;\n            let x1 = vertices[vertexOffset], y1 = vertices[vertexOffset + 1];\n            let u1 = uvs[vertexOffset], v1 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 1] << 1;\n            let x2 = vertices[vertexOffset], y2 = vertices[vertexOffset + 1];\n            let u2 = uvs[vertexOffset], v2 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 2] << 1;\n            let x3 = vertices[vertexOffset], y3 = vertices[vertexOffset + 1];\n            let u3 = uvs[vertexOffset], v3 = uvs[vertexOffset + 1];\n            for (let p = 0; p < polygonsCount; p++) {\n                let s = clippedVertices.length;\n                if (this.clip(x1, y1, x2, y2, x3, y3, polygons[p], clipOutput)) {\n                    let clipOutputLength = clipOutput.length;\n                    if (clipOutputLength == 0)\n                        continue;\n                    let d0 = y2 - y3, d1 = x3 - x2, d2 = x1 - x3, d4 = y3 - y1;\n                    let d = 1 / (d0 * d2 + d1 * (y1 - y3));\n                    let clipOutputCount = clipOutputLength >> 1;\n                    let clipOutputItems = this.clipOutput;\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + clipOutputCount * vertexSize);\n                    for (let ii = 0; ii < clipOutputLength; ii += 2) {\n                        let x = clipOutputItems[ii], y = clipOutputItems[ii + 1];\n                        clippedVerticesItems[s] = x;\n                        clippedVerticesItems[s + 1] = y;\n                        clippedVerticesItems[s + 2] = light.r;\n                        clippedVerticesItems[s + 3] = light.g;\n                        clippedVerticesItems[s + 4] = light.b;\n                        clippedVerticesItems[s + 5] = light.a;\n                        let c0 = x - x3, c1 = y - y3;\n                        let a = (d0 * c0 + d1 * c1) * d;\n                        let b = (d4 * c0 + d2 * c1) * d;\n                        let c = 1 - a - b;\n                        clippedVerticesItems[s + 6] = u1 * a + u2 * b + u3 * c;\n                        clippedVerticesItems[s + 7] = v1 * a + v2 * b + v3 * c;\n                        if (twoColor) {\n                            clippedVerticesItems[s + 8] = dark.r;\n                            clippedVerticesItems[s + 9] = dark.g;\n                            clippedVerticesItems[s + 10] = dark.b;\n                            clippedVerticesItems[s + 11] = dark.a;\n                        }\n                        s += vertexSize;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3 * (clipOutputCount - 2));\n                    clipOutputCount--;\n                    for (let ii = 1; ii < clipOutputCount; ii++) {\n                        clippedTrianglesItems[s] = index;\n                        clippedTrianglesItems[s + 1] = (index + ii);\n                        clippedTrianglesItems[s + 2] = (index + ii + 1);\n                        s += 3;\n                    }\n                    index += clipOutputCount + 1;\n                }\n                else {\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + 3 * vertexSize);\n                    clippedVerticesItems[s] = x1;\n                    clippedVerticesItems[s + 1] = y1;\n                    clippedVerticesItems[s + 2] = light.r;\n                    clippedVerticesItems[s + 3] = light.g;\n                    clippedVerticesItems[s + 4] = light.b;\n                    clippedVerticesItems[s + 5] = light.a;\n                    if (!twoColor) {\n                        clippedVerticesItems[s + 6] = u1;\n                        clippedVerticesItems[s + 7] = v1;\n                        clippedVerticesItems[s + 8] = x2;\n                        clippedVerticesItems[s + 9] = y2;\n                        clippedVerticesItems[s + 10] = light.r;\n                        clippedVerticesItems[s + 11] = light.g;\n                        clippedVerticesItems[s + 12] = light.b;\n                        clippedVerticesItems[s + 13] = light.a;\n                        clippedVerticesItems[s + 14] = u2;\n                        clippedVerticesItems[s + 15] = v2;\n                        clippedVerticesItems[s + 16] = x3;\n                        clippedVerticesItems[s + 17] = y3;\n                        clippedVerticesItems[s + 18] = light.r;\n                        clippedVerticesItems[s + 19] = light.g;\n                        clippedVerticesItems[s + 20] = light.b;\n                        clippedVerticesItems[s + 21] = light.a;\n                        clippedVerticesItems[s + 22] = u3;\n                        clippedVerticesItems[s + 23] = v3;\n                    }\n                    else {\n                        clippedVerticesItems[s + 6] = u1;\n                        clippedVerticesItems[s + 7] = v1;\n                        clippedVerticesItems[s + 8] = dark.r;\n                        clippedVerticesItems[s + 9] = dark.g;\n                        clippedVerticesItems[s + 10] = dark.b;\n                        clippedVerticesItems[s + 11] = dark.a;\n                        clippedVerticesItems[s + 12] = x2;\n                        clippedVerticesItems[s + 13] = y2;\n                        clippedVerticesItems[s + 14] = light.r;\n                        clippedVerticesItems[s + 15] = light.g;\n                        clippedVerticesItems[s + 16] = light.b;\n                        clippedVerticesItems[s + 17] = light.a;\n                        clippedVerticesItems[s + 18] = u2;\n                        clippedVerticesItems[s + 19] = v2;\n                        clippedVerticesItems[s + 20] = dark.r;\n                        clippedVerticesItems[s + 21] = dark.g;\n                        clippedVerticesItems[s + 22] = dark.b;\n                        clippedVerticesItems[s + 23] = dark.a;\n                        clippedVerticesItems[s + 24] = x3;\n                        clippedVerticesItems[s + 25] = y3;\n                        clippedVerticesItems[s + 26] = light.r;\n                        clippedVerticesItems[s + 27] = light.g;\n                        clippedVerticesItems[s + 28] = light.b;\n                        clippedVerticesItems[s + 29] = light.a;\n                        clippedVerticesItems[s + 30] = u3;\n                        clippedVerticesItems[s + 31] = v3;\n                        clippedVerticesItems[s + 32] = dark.r;\n                        clippedVerticesItems[s + 33] = dark.g;\n                        clippedVerticesItems[s + 34] = dark.b;\n                        clippedVerticesItems[s + 35] = dark.a;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3);\n                    clippedTrianglesItems[s] = index;\n                    clippedTrianglesItems[s + 1] = (index + 1);\n                    clippedTrianglesItems[s + 2] = (index + 2);\n                    index += 3;\n                    continue outer;\n                }\n            }\n        }\n    }\n    /** Clips the input triangle against the convex, clockwise clipping area. If the triangle lies entirely within the clipping\n     * area, false is returned. The clipping area must duplicate the first vertex at the end of the vertices list. */\n    clip(x1, y1, x2, y2, x3, y3, clippingArea, output) {\n        let originalOutput = output;\n        let clipped = false;\n        // Avoid copy at the end.\n        let input = null;\n        if (clippingArea.length % 4 >= 2) {\n            input = output;\n            output = this.scratch;\n        }\n        else\n            input = this.scratch;\n        input.length = 0;\n        input.push(x1);\n        input.push(y1);\n        input.push(x2);\n        input.push(y2);\n        input.push(x3);\n        input.push(y3);\n        input.push(x1);\n        input.push(y1);\n        output.length = 0;\n        let clippingVertices = clippingArea;\n        let clippingVerticesLast = clippingArea.length - 4;\n        for (let i = 0;; i += 2) {\n            let edgeX = clippingVertices[i], edgeY = clippingVertices[i + 1];\n            let edgeX2 = clippingVertices[i + 2], edgeY2 = clippingVertices[i + 3];\n            let deltaX = edgeX - edgeX2, deltaY = edgeY - edgeY2;\n            let inputVertices = input;\n            let inputVerticesLength = input.length - 2, outputStart = output.length;\n            for (let ii = 0; ii < inputVerticesLength; ii += 2) {\n                let inputX = inputVertices[ii], inputY = inputVertices[ii + 1];\n                let inputX2 = inputVertices[ii + 2], inputY2 = inputVertices[ii + 3];\n                let side2 = deltaX * (inputY2 - edgeY2) - deltaY * (inputX2 - edgeX2) > 0;\n                if (deltaX * (inputY - edgeY2) - deltaY * (inputX - edgeX2) > 0) {\n                    if (side2) { // v1 inside, v2 inside\n                        output.push(inputX2);\n                        output.push(inputY2);\n                        continue;\n                    }\n                    // v1 inside, v2 outside\n                    let c0 = inputY2 - inputY, c2 = inputX2 - inputX;\n                    let s = c0 * (edgeX2 - edgeX) - c2 * (edgeY2 - edgeY);\n                    if (Math.abs(s) > 0.000001) {\n                        let ua = (c2 * (edgeY - inputY) - c0 * (edgeX - inputX)) / s;\n                        output.push(edgeX + (edgeX2 - edgeX) * ua);\n                        output.push(edgeY + (edgeY2 - edgeY) * ua);\n                    }\n                    else {\n                        output.push(edgeX);\n                        output.push(edgeY);\n                    }\n                }\n                else if (side2) { // v1 outside, v2 inside\n                    let c0 = inputY2 - inputY, c2 = inputX2 - inputX;\n                    let s = c0 * (edgeX2 - edgeX) - c2 * (edgeY2 - edgeY);\n                    if (Math.abs(s) > 0.000001) {\n                        let ua = (c2 * (edgeY - inputY) - c0 * (edgeX - inputX)) / s;\n                        output.push(edgeX + (edgeX2 - edgeX) * ua);\n                        output.push(edgeY + (edgeY2 - edgeY) * ua);\n                    }\n                    else {\n                        output.push(edgeX);\n                        output.push(edgeY);\n                    }\n                    output.push(inputX2);\n                    output.push(inputY2);\n                }\n                clipped = true;\n            }\n            if (outputStart == output.length) { // All edges outside.\n                originalOutput.length = 0;\n                return true;\n            }\n            output.push(output[0]);\n            output.push(output[1]);\n            if (i == clippingVerticesLast)\n                break;\n            let temp = output;\n            output = input;\n            output.length = 0;\n            input = temp;\n        }\n        if (originalOutput != output) {\n            originalOutput.length = 0;\n            for (let i = 0, n = output.length - 2; i < n; i++)\n                originalOutput[i] = output[i];\n        }\n        else\n            originalOutput.length = originalOutput.length - 2;\n        return clipped;\n    }\n    static makeClockwise(polygon) {\n        let vertices = polygon;\n        let verticeslength = polygon.length;\n        let area = vertices[verticeslength - 2] * vertices[1] - vertices[0] * vertices[verticeslength - 1], p1x = 0, p1y = 0, p2x = 0, p2y = 0;\n        for (let i = 0, n = verticeslength - 3; i < n; i += 2) {\n            p1x = vertices[i];\n            p1y = vertices[i + 1];\n            p2x = vertices[i + 2];\n            p2y = vertices[i + 3];\n            area += p1x * p2y - p2x * p1y;\n        }\n        if (area < 0)\n            return;\n        for (let i = 0, lastX = verticeslength - 2, n = verticeslength >> 1; i < n; i += 2) {\n            let x = vertices[i], y = vertices[i + 1];\n            let other = lastX - i;\n            vertices[i] = vertices[other];\n            vertices[i + 1] = vertices[other + 1];\n            vertices[other] = x;\n            vertices[other + 1] = y;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, AttachmentTimeline, RGBATimeline, RGBTimeline, AlphaTimeline, RGBA2Timeline, RGB2Timeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline } from \"./Animation\";\nimport { BoneData, TransformMode } from \"./BoneData\";\nimport { EventData } from \"./EventData\";\nimport { Event } from \"./Event\";\nimport { IkConstraintData } from \"./IkConstraintData\";\nimport { PathConstraintData, PositionMode, SpacingMode, RotateMode } from \"./PathConstraintData\";\nimport { SkeletonData } from \"./SkeletonData\";\nimport { Skin } from \"./Skin\";\nimport { SlotData, BlendMode } from \"./SlotData\";\nimport { TransformConstraintData } from \"./TransformConstraintData\";\nimport { Utils, Color } from \"./Utils\";\n/** Loads skeleton data in the Spine JSON format.\n *\n * See [Spine JSON format](http://esotericsoftware.com/spine-json-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonJson {\n    constructor(attachmentLoader) {\n        this.attachmentLoader = null;\n        /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n         * runtime than were used in Spine.\n         *\n         * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n        this.scale = 1;\n        this.linkedMeshes = new Array();\n        this.attachmentLoader = attachmentLoader;\n    }\n    readSkeletonData(json) {\n        let scale = this.scale;\n        let skeletonData = new SkeletonData();\n        let root = typeof (json) === \"string\" ? JSON.parse(json) : json;\n        // Skeleton\n        let skeletonMap = root.skeleton;\n        if (skeletonMap) {\n            skeletonData.hash = skeletonMap.hash;\n            skeletonData.version = skeletonMap.spine;\n            skeletonData.x = skeletonMap.x;\n            skeletonData.y = skeletonMap.y;\n            skeletonData.width = skeletonMap.width;\n            skeletonData.height = skeletonMap.height;\n            skeletonData.fps = skeletonMap.fps;\n            skeletonData.imagesPath = skeletonMap.images;\n        }\n        // Bones\n        if (root.bones) {\n            for (let i = 0; i < root.bones.length; i++) {\n                let boneMap = root.bones[i];\n                let parent = null;\n                let parentName = getValue(boneMap, \"parent\", null);\n                if (parentName)\n                    parent = skeletonData.findBone(parentName);\n                let data = new BoneData(skeletonData.bones.length, boneMap.name, parent);\n                data.length = getValue(boneMap, \"length\", 0) * scale;\n                data.x = getValue(boneMap, \"x\", 0) * scale;\n                data.y = getValue(boneMap, \"y\", 0) * scale;\n                data.rotation = getValue(boneMap, \"rotation\", 0);\n                data.scaleX = getValue(boneMap, \"scaleX\", 1);\n                data.scaleY = getValue(boneMap, \"scaleY\", 1);\n                data.shearX = getValue(boneMap, \"shearX\", 0);\n                data.shearY = getValue(boneMap, \"shearY\", 0);\n                data.transformMode = Utils.enumValue(TransformMode, getValue(boneMap, \"transform\", \"Normal\"));\n                data.skinRequired = getValue(boneMap, \"skin\", false);\n                let color = getValue(boneMap, \"color\", null);\n                if (color)\n                    data.color.setFromString(color);\n                skeletonData.bones.push(data);\n            }\n        }\n        // Slots.\n        if (root.slots) {\n            for (let i = 0; i < root.slots.length; i++) {\n                let slotMap = root.slots[i];\n                let boneData = skeletonData.findBone(slotMap.bone);\n                let data = new SlotData(skeletonData.slots.length, slotMap.name, boneData);\n                let color = getValue(slotMap, \"color\", null);\n                if (color)\n                    data.color.setFromString(color);\n                let dark = getValue(slotMap, \"dark\", null);\n                if (dark)\n                    data.darkColor = Color.fromString(dark);\n                data.attachmentName = getValue(slotMap, \"attachment\", null);\n                data.blendMode = Utils.enumValue(BlendMode, getValue(slotMap, \"blend\", \"normal\"));\n                skeletonData.slots.push(data);\n            }\n        }\n        // IK constraints\n        if (root.ik) {\n            for (let i = 0; i < root.ik.length; i++) {\n                let constraintMap = root.ik[i];\n                let data = new IkConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++)\n                    data.bones.push(skeletonData.findBone(constraintMap.bones[ii]));\n                data.target = skeletonData.findBone(constraintMap.target);\n                data.mix = getValue(constraintMap, \"mix\", 1);\n                data.softness = getValue(constraintMap, \"softness\", 0) * scale;\n                data.bendDirection = getValue(constraintMap, \"bendPositive\", true) ? 1 : -1;\n                data.compress = getValue(constraintMap, \"compress\", false);\n                data.stretch = getValue(constraintMap, \"stretch\", false);\n                data.uniform = getValue(constraintMap, \"uniform\", false);\n                skeletonData.ikConstraints.push(data);\n            }\n        }\n        // Transform constraints.\n        if (root.transform) {\n            for (let i = 0; i < root.transform.length; i++) {\n                let constraintMap = root.transform[i];\n                let data = new TransformConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++)\n                    data.bones.push(skeletonData.findBone(constraintMap.bones[ii]));\n                let targetName = constraintMap.target;\n                data.target = skeletonData.findBone(targetName);\n                data.local = getValue(constraintMap, \"local\", false);\n                data.relative = getValue(constraintMap, \"relative\", false);\n                data.offsetRotation = getValue(constraintMap, \"rotation\", 0);\n                data.offsetX = getValue(constraintMap, \"x\", 0) * scale;\n                data.offsetY = getValue(constraintMap, \"y\", 0) * scale;\n                data.offsetScaleX = getValue(constraintMap, \"scaleX\", 0);\n                data.offsetScaleY = getValue(constraintMap, \"scaleY\", 0);\n                data.offsetShearY = getValue(constraintMap, \"shearY\", 0);\n                data.mixRotate = getValue(constraintMap, \"mixRotate\", 1);\n                data.mixX = getValue(constraintMap, \"mixX\", 1);\n                data.mixY = getValue(constraintMap, \"mixY\", data.mixX);\n                data.mixScaleX = getValue(constraintMap, \"mixScaleX\", 1);\n                data.mixScaleY = getValue(constraintMap, \"mixScaleY\", data.mixScaleX);\n                data.mixShearY = getValue(constraintMap, \"mixShearY\", 1);\n                skeletonData.transformConstraints.push(data);\n            }\n        }\n        // Path constraints.\n        if (root.path) {\n            for (let i = 0; i < root.path.length; i++) {\n                let constraintMap = root.path[i];\n                let data = new PathConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++)\n                    data.bones.push(skeletonData.findBone(constraintMap.bones[ii]));\n                let targetName = constraintMap.target;\n                data.target = skeletonData.findSlot(targetName);\n                data.positionMode = Utils.enumValue(PositionMode, getValue(constraintMap, \"positionMode\", \"Percent\"));\n                data.spacingMode = Utils.enumValue(SpacingMode, getValue(constraintMap, \"spacingMode\", \"Length\"));\n                data.rotateMode = Utils.enumValue(RotateMode, getValue(constraintMap, \"rotateMode\", \"Tangent\"));\n                data.offsetRotation = getValue(constraintMap, \"rotation\", 0);\n                data.position = getValue(constraintMap, \"position\", 0);\n                if (data.positionMode == PositionMode.Fixed)\n                    data.position *= scale;\n                data.spacing = getValue(constraintMap, \"spacing\", 0);\n                if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed)\n                    data.spacing *= scale;\n                data.mixRotate = getValue(constraintMap, \"mixRotate\", 1);\n                data.mixX = getValue(constraintMap, \"mixX\", 1);\n                data.mixY = getValue(constraintMap, \"mixY\", data.mixX);\n                skeletonData.pathConstraints.push(data);\n            }\n        }\n        // Skins.\n        if (root.skins) {\n            for (let i = 0; i < root.skins.length; i++) {\n                let skinMap = root.skins[i];\n                let skin = new Skin(skinMap.name);\n                if (skinMap.bones) {\n                    for (let ii = 0; ii < skinMap.bones.length; ii++)\n                        skin.bones.push(skeletonData.findBone(skinMap.bones[ii]));\n                }\n                if (skinMap.ik) {\n                    for (let ii = 0; ii < skinMap.ik.length; ii++)\n                        skin.constraints.push(skeletonData.findIkConstraint(skinMap.ik[ii]));\n                }\n                if (skinMap.transform) {\n                    for (let ii = 0; ii < skinMap.transform.length; ii++)\n                        skin.constraints.push(skeletonData.findTransformConstraint(skinMap.transform[ii]));\n                }\n                if (skinMap.path) {\n                    for (let ii = 0; ii < skinMap.path.length; ii++)\n                        skin.constraints.push(skeletonData.findPathConstraint(skinMap.path[ii]));\n                }\n                for (let slotName in skinMap.attachments) {\n                    let slot = skeletonData.findSlot(slotName);\n                    let slotMap = skinMap.attachments[slotName];\n                    for (let entryName in slotMap) {\n                        let attachment = this.readAttachment(slotMap[entryName], skin, slot.index, entryName, skeletonData);\n                        if (attachment)\n                            skin.setAttachment(slot.index, entryName, attachment);\n                    }\n                }\n                skeletonData.skins.push(skin);\n                if (skin.name == \"default\")\n                    skeletonData.defaultSkin = skin;\n            }\n        }\n        // Linked meshes.\n        for (let i = 0, n = this.linkedMeshes.length; i < n; i++) {\n            let linkedMesh = this.linkedMeshes[i];\n            let skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n            let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n            linkedMesh.mesh.deformAttachment = linkedMesh.inheritDeform ? parent : linkedMesh.mesh;\n            linkedMesh.mesh.setParentMesh(parent);\n            linkedMesh.mesh.updateUVs();\n        }\n        this.linkedMeshes.length = 0;\n        // Events.\n        if (root.events) {\n            for (let eventName in root.events) {\n                let eventMap = root.events[eventName];\n                let data = new EventData(eventName);\n                data.intValue = getValue(eventMap, \"int\", 0);\n                data.floatValue = getValue(eventMap, \"float\", 0);\n                data.stringValue = getValue(eventMap, \"string\", \"\");\n                data.audioPath = getValue(eventMap, \"audio\", null);\n                if (data.audioPath) {\n                    data.volume = getValue(eventMap, \"volume\", 1);\n                    data.balance = getValue(eventMap, \"balance\", 0);\n                }\n                skeletonData.events.push(data);\n            }\n        }\n        // Animations.\n        if (root.animations) {\n            for (let animationName in root.animations) {\n                let animationMap = root.animations[animationName];\n                this.readAnimation(animationMap, animationName, skeletonData);\n            }\n        }\n        return skeletonData;\n    }\n    readAttachment(map, skin, slotIndex, name, skeletonData) {\n        let scale = this.scale;\n        name = getValue(map, \"name\", name);\n        switch (getValue(map, \"type\", \"region\")) {\n            case \"region\": {\n                let path = getValue(map, \"path\", name);\n                let region = this.attachmentLoader.newRegionAttachment(skin, name, path);\n                if (!region)\n                    return null;\n                region.path = path;\n                region.x = getValue(map, \"x\", 0) * scale;\n                region.y = getValue(map, \"y\", 0) * scale;\n                region.scaleX = getValue(map, \"scaleX\", 1);\n                region.scaleY = getValue(map, \"scaleY\", 1);\n                region.rotation = getValue(map, \"rotation\", 0);\n                region.width = map.width * scale;\n                region.height = map.height * scale;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    region.color.setFromString(color);\n                region.updateOffset();\n                return region;\n            }\n            case \"boundingbox\": {\n                let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n                if (!box)\n                    return null;\n                this.readVertices(map, box, map.vertexCount << 1);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    box.color.setFromString(color);\n                return box;\n            }\n            case \"mesh\":\n            case \"linkedmesh\": {\n                let path = getValue(map, \"path\", name);\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    mesh.color.setFromString(color);\n                mesh.width = getValue(map, \"width\", 0) * scale;\n                mesh.height = getValue(map, \"height\", 0) * scale;\n                let parent = getValue(map, \"parent\", null);\n                if (parent) {\n                    this.linkedMeshes.push(new LinkedMesh(mesh, getValue(map, \"skin\", null), slotIndex, parent, getValue(map, \"deform\", true)));\n                    return mesh;\n                }\n                let uvs = map.uvs;\n                this.readVertices(map, mesh, uvs.length);\n                mesh.triangles = map.triangles;\n                mesh.regionUVs = uvs;\n                mesh.updateUVs();\n                mesh.edges = getValue(map, \"edges\", null);\n                mesh.hullLength = getValue(map, \"hull\", 0) * 2;\n                return mesh;\n            }\n            case \"path\": {\n                let path = this.attachmentLoader.newPathAttachment(skin, name);\n                if (!path)\n                    return null;\n                path.closed = getValue(map, \"closed\", false);\n                path.constantSpeed = getValue(map, \"constantSpeed\", true);\n                let vertexCount = map.vertexCount;\n                this.readVertices(map, path, vertexCount << 1);\n                let lengths = Utils.newArray(vertexCount / 3, 0);\n                for (let i = 0; i < map.lengths.length; i++)\n                    lengths[i] = map.lengths[i] * scale;\n                path.lengths = lengths;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    path.color.setFromString(color);\n                return path;\n            }\n            case \"point\": {\n                let point = this.attachmentLoader.newPointAttachment(skin, name);\n                if (!point)\n                    return null;\n                point.x = getValue(map, \"x\", 0) * scale;\n                point.y = getValue(map, \"y\", 0) * scale;\n                point.rotation = getValue(map, \"rotation\", 0);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    point.color.setFromString(color);\n                return point;\n            }\n            case \"clipping\": {\n                let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n                if (!clip)\n                    return null;\n                let end = getValue(map, \"end\", null);\n                if (end)\n                    clip.endSlot = skeletonData.findSlot(end);\n                let vertexCount = map.vertexCount;\n                this.readVertices(map, clip, vertexCount << 1);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    clip.color.setFromString(color);\n                return clip;\n            }\n        }\n        return null;\n    }\n    readVertices(map, attachment, verticesLength) {\n        let scale = this.scale;\n        attachment.worldVerticesLength = verticesLength;\n        let vertices = map.vertices;\n        if (verticesLength == vertices.length) {\n            let scaledVertices = Utils.toFloatArray(vertices);\n            if (scale != 1) {\n                for (let i = 0, n = vertices.length; i < n; i++)\n                    scaledVertices[i] *= scale;\n            }\n            attachment.vertices = scaledVertices;\n            return;\n        }\n        let weights = new Array();\n        let bones = new Array();\n        for (let i = 0, n = vertices.length; i < n;) {\n            let boneCount = vertices[i++];\n            bones.push(boneCount);\n            for (let nn = i + boneCount * 4; i < nn; i += 4) {\n                bones.push(vertices[i]);\n                weights.push(vertices[i + 1] * scale);\n                weights.push(vertices[i + 2] * scale);\n                weights.push(vertices[i + 3]);\n            }\n        }\n        attachment.bones = bones;\n        attachment.vertices = Utils.toFloatArray(weights);\n    }\n    readAnimation(map, name, skeletonData) {\n        let scale = this.scale;\n        let timelines = new Array();\n        // Slot timelines.\n        if (map.slots) {\n            for (let slotName in map.slots) {\n                let slotMap = map.slots[slotName];\n                let slotIndex = skeletonData.findSlot(slotName).index;\n                for (let timelineName in slotMap) {\n                    let timelineMap = slotMap[timelineName];\n                    if (!timelineMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName == \"attachment\") {\n                        let timeline = new AttachmentTimeline(frames, slotIndex);\n                        for (let frame = 0; frame < frames; frame++) {\n                            let keyMap = timelineMap[frame];\n                            timeline.setFrame(frame, getValue(keyMap, \"time\", 0), keyMap.name);\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgba\") {\n                        let timeline = new RGBATimeline(frames, frames << 2, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.color);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color.a);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.color);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color.a, newColor.a, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgb\") {\n                        let timeline = new RGBTimeline(frames, frames * 3, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.color);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.color);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"alpha\") {\n                        timelines.push(readTimeline1(timelineMap, new AlphaTimeline(frames, frames, slotIndex), 0, 1));\n                    }\n                    else if (timelineName == \"rgba2\") {\n                        let timeline = new RGBA2Timeline(frames, frames * 7, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.light);\n                        let color2 = Color.fromString(keyMap.dark);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color.a, color2.r, color2.g, color2.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.light);\n                            let newColor2 = Color.fromString(nextMap.dark);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color.a, newColor.a, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, color2.r, newColor2.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, color2.g, newColor2.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 6, time, time2, color2.b, newColor2.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            color2 = newColor2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgb2\") {\n                        let timeline = new RGB2Timeline(frames, frames * 6, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.light);\n                        let color2 = Color.fromString(keyMap.dark);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color2.r, color2.g, color2.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.light);\n                            let newColor2 = Color.fromString(nextMap.dark);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color2.r, newColor2.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, color2.g, newColor2.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, color2.b, newColor2.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            color2 = newColor2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Bone timelines.\n        if (map.bones) {\n            for (let boneName in map.bones) {\n                let boneMap = map.bones[boneName];\n                let boneIndex = skeletonData.findBone(boneName).index;\n                for (let timelineName in boneMap) {\n                    let timelineMap = boneMap[timelineName];\n                    let frames = timelineMap.length;\n                    if (frames == 0)\n                        continue;\n                    if (timelineName === \"rotate\") {\n                        timelines.push(readTimeline1(timelineMap, new RotateTimeline(frames, frames, boneIndex), 0, 1));\n                    }\n                    else if (timelineName === \"translate\") {\n                        let timeline = new TranslateTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 0, scale));\n                    }\n                    else if (timelineName === \"translatex\") {\n                        let timeline = new TranslateXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, scale));\n                    }\n                    else if (timelineName === \"translatey\") {\n                        let timeline = new TranslateYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, scale));\n                    }\n                    else if (timelineName === \"scale\") {\n                        let timeline = new ScaleTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 1, 1));\n                    }\n                    else if (timelineName === \"scalex\") {\n                        let timeline = new ScaleXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 1, 1));\n                    }\n                    else if (timelineName === \"scaley\") {\n                        let timeline = new ScaleYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 1, 1));\n                    }\n                    else if (timelineName === \"shear\") {\n                        let timeline = new ShearTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 0, 1));\n                    }\n                    else if (timelineName === \"shearx\") {\n                        let timeline = new ShearXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                    }\n                    else if (timelineName === \"sheary\") {\n                        let timeline = new ShearYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                    }\n                }\n            }\n        }\n        // IK constraint timelines.\n        if (map.ik) {\n            for (let constraintName in map.ik) {\n                let constraintMap = map.ik[constraintName];\n                let keyMap = constraintMap[0];\n                if (!keyMap)\n                    continue;\n                let constraint = skeletonData.findIkConstraint(constraintName);\n                let constraintIndex = skeletonData.ikConstraints.indexOf(constraint);\n                let timeline = new IkConstraintTimeline(constraintMap.length, constraintMap.length << 1, constraintIndex);\n                let time = getValue(keyMap, \"time\", 0);\n                let mix = getValue(keyMap, \"mix\", 1);\n                let softness = getValue(keyMap, \"softness\", 0) * scale;\n                for (let frame = 0, bezier = 0;; frame++) {\n                    timeline.setFrame(frame, time, mix, softness, getValue(keyMap, \"bendPositive\", true) ? 1 : -1, getValue(keyMap, \"compress\", false), getValue(keyMap, \"stretch\", false));\n                    let nextMap = constraintMap[frame + 1];\n                    if (!nextMap) {\n                        timeline.shrink(bezier);\n                        break;\n                    }\n                    let time2 = getValue(nextMap, \"time\", 0);\n                    let mix2 = getValue(nextMap, \"mix\", 1);\n                    let softness2 = getValue(nextMap, \"softness\", 0) * scale;\n                    let curve = keyMap.curve;\n                    if (curve) {\n                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mix, mix2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, softness, softness2, scale);\n                    }\n                    time = time2;\n                    mix = mix2;\n                    softness = softness2;\n                    keyMap = nextMap;\n                }\n                timelines.push(timeline);\n            }\n        }\n        // Transform constraint timelines.\n        if (map.transform) {\n            for (let constraintName in map.transform) {\n                let timelineMap = map.transform[constraintName];\n                let keyMap = timelineMap[0];\n                if (!keyMap)\n                    continue;\n                let constraint = skeletonData.findTransformConstraint(constraintName);\n                let constraintIndex = skeletonData.transformConstraints.indexOf(constraint);\n                let timeline = new TransformConstraintTimeline(timelineMap.length, timelineMap.length * 6, constraintIndex);\n                let time = getValue(keyMap, \"time\", 0);\n                let mixRotate = getValue(keyMap, \"mixRotate\", 1);\n                let mixX = getValue(keyMap, \"mixX\", 1);\n                let mixY = getValue(keyMap, \"mixY\", mixX);\n                let mixScaleX = getValue(keyMap, \"mixScaleX\", 1);\n                let mixScaleY = getValue(keyMap, \"mixScaleY\", mixScaleX);\n                let mixShearY = getValue(keyMap, \"mixShearY\", 1);\n                for (let frame = 0, bezier = 0;; frame++) {\n                    timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n                    let nextMap = timelineMap[frame + 1];\n                    if (!nextMap) {\n                        timeline.shrink(bezier);\n                        break;\n                    }\n                    let time2 = getValue(nextMap, \"time\", 0);\n                    let mixRotate2 = getValue(nextMap, \"mixRotate\", 1);\n                    let mixX2 = getValue(nextMap, \"mixX\", 1);\n                    let mixY2 = getValue(nextMap, \"mixY\", mixX2);\n                    let mixScaleX2 = getValue(nextMap, \"mixScaleX\", 1);\n                    let mixScaleY2 = getValue(nextMap, \"mixScaleY\", mixScaleX2);\n                    let mixShearY2 = getValue(nextMap, \"mixShearY\", 1);\n                    let curve = keyMap.curve;\n                    if (curve) {\n                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, mixX, mixX2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, mixY, mixY2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n                    }\n                    time = time2;\n                    mixRotate = mixRotate2;\n                    mixX = mixX2;\n                    mixY = mixY2;\n                    mixScaleX = mixScaleX2;\n                    mixScaleY = mixScaleY2;\n                    mixScaleX = mixScaleX2;\n                    keyMap = nextMap;\n                }\n                timelines.push(timeline);\n            }\n        }\n        // Path constraint timelines.\n        if (map.path) {\n            for (let constraintName in map.path) {\n                let constraintMap = map.path[constraintName];\n                let constraint = skeletonData.findPathConstraint(constraintName);\n                let constraintIndex = skeletonData.pathConstraints.indexOf(constraint);\n                for (let timelineName in constraintMap) {\n                    let timelineMap = constraintMap[timelineName];\n                    let keyMap = timelineMap[0];\n                    if (!keyMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName === \"position\") {\n                        let timeline = new PathConstraintPositionTimeline(frames, frames, constraintIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, constraint.positionMode == PositionMode.Fixed ? scale : 1));\n                    }\n                    else if (timelineName === \"spacing\") {\n                        let timeline = new PathConstraintSpacingTimeline(frames, frames, constraintIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, constraint.spacingMode == SpacingMode.Length || constraint.spacingMode == SpacingMode.Fixed ? scale : 1));\n                    }\n                    else if (timelineName === \"mix\") {\n                        let timeline = new PathConstraintMixTimeline(frames, frames * 3, constraintIndex);\n                        let time = getValue(keyMap, \"time\", 0);\n                        let mixRotate = getValue(keyMap, \"mixRotate\", 1);\n                        let mixX = getValue(keyMap, \"mixX\", 1);\n                        let mixY = getValue(keyMap, \"mixY\", mixX);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let mixRotate2 = getValue(nextMap, \"mixRotate\", 1);\n                            let mixX2 = getValue(nextMap, \"mixX\", 1);\n                            let mixY2 = getValue(nextMap, \"mixY\", mixX2);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, mixX, mixX2, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, mixY, mixY2, 1);\n                            }\n                            time = time2;\n                            mixRotate = mixRotate2;\n                            mixX = mixX2;\n                            mixY = mixY2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Deform timelines.\n        if (map.deform) {\n            for (let deformName in map.deform) {\n                let deformMap = map.deform[deformName];\n                let skin = skeletonData.findSkin(deformName);\n                for (let slotName in deformMap) {\n                    let slotMap = deformMap[slotName];\n                    let slotIndex = skeletonData.findSlot(slotName).index;\n                    for (let timelineName in slotMap) {\n                        let timelineMap = slotMap[timelineName];\n                        let keyMap = timelineMap[0];\n                        if (!keyMap)\n                            continue;\n                        let attachment = skin.getAttachment(slotIndex, timelineName);\n                        let weighted = attachment.bones;\n                        let vertices = attachment.vertices;\n                        let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                        let timeline = new DeformTimeline(timelineMap.length, timelineMap.length, slotIndex, attachment);\n                        let time = getValue(keyMap, \"time\", 0);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            let deform;\n                            let verticesValue = getValue(keyMap, \"vertices\", null);\n                            if (!verticesValue)\n                                deform = weighted ? Utils.newFloatArray(deformLength) : vertices;\n                            else {\n                                deform = Utils.newFloatArray(deformLength);\n                                let start = getValue(keyMap, \"offset\", 0);\n                                Utils.arrayCopy(verticesValue, 0, deform, start, verticesValue.length);\n                                if (scale != 1) {\n                                    for (let i = start, n = i + verticesValue.length; i < n; i++)\n                                        deform[i] *= scale;\n                                }\n                                if (!weighted) {\n                                    for (let i = 0; i < deformLength; i++)\n                                        deform[i] += vertices[i];\n                                }\n                            }\n                            timeline.setFrame(frame, time, deform);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let curve = keyMap.curve;\n                            if (curve)\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, 0, 1, 1);\n                            time = time2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Draw order timelines.\n        if (map.drawOrder) {\n            let timeline = new DrawOrderTimeline(map.drawOrder.length);\n            let slotCount = skeletonData.slots.length;\n            let frame = 0;\n            for (let i = 0; i < map.drawOrder.length; i++, frame++) {\n                let drawOrderMap = map.drawOrder[i];\n                let drawOrder = null;\n                let offsets = getValue(drawOrderMap, \"offsets\", null);\n                if (offsets) {\n                    drawOrder = Utils.newArray(slotCount, -1);\n                    let unchanged = Utils.newArray(slotCount - offsets.length, 0);\n                    let originalIndex = 0, unchangedIndex = 0;\n                    for (let ii = 0; ii < offsets.length; ii++) {\n                        let offsetMap = offsets[ii];\n                        let slotIndex = skeletonData.findSlot(offsetMap.slot).index;\n                        // Collect unchanged items.\n                        while (originalIndex != slotIndex)\n                            unchanged[unchangedIndex++] = originalIndex++;\n                        // Set changed items.\n                        drawOrder[originalIndex + offsetMap.offset] = originalIndex++;\n                    }\n                    // Collect remaining unchanged items.\n                    while (originalIndex < slotCount)\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    // Fill in unchanged items.\n                    for (let ii = slotCount - 1; ii >= 0; ii--)\n                        if (drawOrder[ii] == -1)\n                            drawOrder[ii] = unchanged[--unchangedIndex];\n                }\n                timeline.setFrame(frame, getValue(drawOrderMap, \"time\", 0), drawOrder);\n            }\n            timelines.push(timeline);\n        }\n        // Event timelines.\n        if (map.events) {\n            let timeline = new EventTimeline(map.events.length);\n            let frame = 0;\n            for (let i = 0; i < map.events.length; i++, frame++) {\n                let eventMap = map.events[i];\n                let eventData = skeletonData.findEvent(eventMap.name);\n                let event = new Event(Utils.toSinglePrecision(getValue(eventMap, \"time\", 0)), eventData);\n                event.intValue = getValue(eventMap, \"int\", eventData.intValue);\n                event.floatValue = getValue(eventMap, \"float\", eventData.floatValue);\n                event.stringValue = getValue(eventMap, \"string\", eventData.stringValue);\n                if (event.data.audioPath) {\n                    event.volume = getValue(eventMap, \"volume\", 1);\n                    event.balance = getValue(eventMap, \"balance\", 0);\n                }\n                timeline.setFrame(frame, event);\n            }\n            timelines.push(timeline);\n        }\n        let duration = 0;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            duration = Math.max(duration, timelines[i].getDuration());\n        skeletonData.animations.push(new Animation(name, timelines, duration));\n    }\n}\nclass LinkedMesh {\n    constructor(mesh, skin, slotIndex, parent, inheritDeform) {\n        this.mesh = mesh;\n        this.skin = skin;\n        this.slotIndex = slotIndex;\n        this.parent = parent;\n        this.inheritDeform = inheritDeform;\n    }\n}\nfunction readTimeline1(keys, timeline, defaultValue, scale) {\n    let keyMap = keys[0];\n    let time = getValue(keyMap, \"time\", 0);\n    let value = getValue(keyMap, \"value\", defaultValue) * scale;\n    let bezier = 0;\n    for (let frame = 0;; frame++) {\n        timeline.setFrame(frame, time, value);\n        let nextMap = keys[frame + 1];\n        if (!nextMap) {\n            timeline.shrink(bezier);\n            return timeline;\n        }\n        let time2 = getValue(nextMap, \"time\", 0);\n        let value2 = getValue(nextMap, \"value\", defaultValue) * scale;\n        if (keyMap.curve)\n            bezier = readCurve(keyMap.curve, timeline, bezier, frame, 0, time, time2, value, value2, scale);\n        time = time2;\n        value = value2;\n        keyMap = nextMap;\n    }\n}\nfunction readTimeline2(keys, timeline, name1, name2, defaultValue, scale) {\n    let keyMap = keys[0];\n    let time = getValue(keyMap, \"time\", 0);\n    let value1 = getValue(keyMap, name1, defaultValue) * scale;\n    let value2 = getValue(keyMap, name2, defaultValue) * scale;\n    let bezier = 0;\n    for (let frame = 0;; frame++) {\n        timeline.setFrame(frame, time, value1, value2);\n        let nextMap = keys[frame + 1];\n        if (!nextMap) {\n            timeline.shrink(bezier);\n            return timeline;\n        }\n        let time2 = getValue(nextMap, \"time\", 0);\n        let nvalue1 = getValue(nextMap, name1, defaultValue) * scale;\n        let nvalue2 = getValue(nextMap, name2, defaultValue) * scale;\n        let curve = keyMap.curve;\n        if (curve) {\n            bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, value1, nvalue1, scale);\n            bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, value2, nvalue2, scale);\n        }\n        time = time2;\n        value1 = nvalue1;\n        value2 = nvalue2;\n        keyMap = nextMap;\n    }\n}\nfunction readCurve(curve, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n    if (curve == \"stepped\") {\n        timeline.setStepped(frame);\n        return bezier;\n    }\n    let i = value << 2;\n    let cx1 = curve[i];\n    let cy1 = curve[i + 1] * scale;\n    let cx2 = curve[i + 2];\n    let cy2 = curve[i + 3] * scale;\n    timeline.setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2);\n    return bezier + 1;\n}\nfunction getValue(map, property, defaultValue) {\n    return map[property] !== undefined ? map[property] : defaultValue;\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n(() => {\n    if (typeof Math.fround === \"undefined\") {\n        Math.fround = (function (array) {\n            return function (x) {\n                return array[0] = x, array[0];\n            };\n        })(new Float32Array(1));\n    }\n})();\nexport {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWZpbGxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3BvbHlmaWxscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsQ0FBQyxHQUFHLEVBQUU7SUFDTCxJQUFJLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxXQUFXLEVBQUU7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLFVBQVUsS0FBSztZQUM3QixPQUFPLFVBQVUsQ0FBUztnQkFDekIsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQixDQUFDLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQyxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3hCO0FBQ0YsQ0FBQyxDQUFDLEVBQUUsQ0FBQyJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { MathUtils } from \"../Utils\";\nexport class JitterEffect {\n    constructor(jitterX, jitterY) {\n        this.jitterX = 0;\n        this.jitterY = 0;\n        this.jitterX = jitterX;\n        this.jitterY = jitterY;\n    }\n    begin(skeleton) {\n    }\n    transform(position, uv, light, dark) {\n        position.x += MathUtils.randomTriangular(-this.jitterX, this.jitterY);\n        position.y += MathUtils.randomTriangular(-this.jitterX, this.jitterY);\n    }\n    end() {\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSml0dGVyRWZmZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZlcnRleGVmZmVjdHMvSml0dGVyRWZmZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQWtCLFNBQVMsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUdyRCxNQUFNLE9BQU8sWUFBWTtJQUl4QixZQUFhLE9BQWUsRUFBRSxPQUFlO1FBSDdDLFlBQU8sR0FBRyxDQUFDLENBQUM7UUFDWixZQUFPLEdBQUcsQ0FBQyxDQUFDO1FBR1gsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDeEIsQ0FBQztJQUVELEtBQUssQ0FBRSxRQUFrQjtJQUN6QixDQUFDO0lBRUQsU0FBUyxDQUFFLFFBQWlCLEVBQUUsRUFBVyxFQUFFLEtBQVksRUFBRSxJQUFXO1FBQ25FLFFBQVEsQ0FBQyxDQUFDLElBQUksU0FBUyxDQUFDLGdCQUFnQixDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdEUsUUFBUSxDQUFDLENBQUMsSUFBSSxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsR0FBRztJQUNILENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { PowOut, MathUtils } from \"../Utils\";\nexport class SwirlEffect {\n    constructor(radius) {\n        this.centerX = 0;\n        this.centerY = 0;\n        this.radius = 0;\n        this.angle = 0;\n        this.worldX = 0;\n        this.worldY = 0;\n        this.radius = radius;\n    }\n    begin(skeleton) {\n        this.worldX = skeleton.x + this.centerX;\n        this.worldY = skeleton.y + this.centerY;\n    }\n    transform(position, uv, light, dark) {\n        let radAngle = this.angle * MathUtils.degreesToRadians;\n        let x = position.x - this.worldX;\n        let y = position.y - this.worldY;\n        let dist = Math.sqrt(x * x + y * y);\n        if (dist < this.radius) {\n            let theta = SwirlEffect.interpolation.apply(0, radAngle, (this.radius - dist) / this.radius);\n            let cos = Math.cos(theta);\n            let sin = Math.sin(theta);\n            position.x = cos * x - sin * y + this.worldX;\n            position.y = sin * x + cos * y + this.worldY;\n        }\n    }\n    end() {\n    }\n}\nSwirlEffect.interpolation = new PowOut(2);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3dpcmxFZmZlY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdmVydGV4ZWZmZWN0cy9Td2lybEVmZmVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLE1BQU0sRUFBa0IsU0FBUyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRzdELE1BQU0sT0FBTyxXQUFXO0lBU3ZCLFlBQWEsTUFBYztRQVAzQixZQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ1osWUFBTyxHQUFHLENBQUMsQ0FBQztRQUNaLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFDWCxVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ0YsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUNYLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFHbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdEIsQ0FBQztJQUVELEtBQUssQ0FBRSxRQUFrQjtRQUN4QixJQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QyxJQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN6QyxDQUFDO0lBRUQsU0FBUyxDQUFFLFFBQWlCLEVBQUUsRUFBVyxFQUFFLEtBQVksRUFBRSxJQUFXO1FBQ25FLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLGdCQUFnQixDQUFDO1FBQ3ZELElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNqQyxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDakMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNwQyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ3ZCLElBQUksS0FBSyxHQUFHLFdBQVcsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM3RixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzFCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUIsUUFBUSxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUM3QyxRQUFRLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1NBQzdDO0lBQ0YsQ0FBQztJQUVELEdBQUc7SUFDSCxDQUFDOztBQWhDTSx5QkFBYSxHQUFHLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlas } from \"@esotericsoftware/spine-core\";\nimport { AssetsResource, imageDecoder, resourceLoader } from \"doric\";\nexport class AssetManagerBase {\n    constructor(doricContext, textureLoader, pathPrefix = \"\", downloader = null) {\n        this.pathPrefix = null;\n        this.assets = {};\n        this.errors = {};\n        this.toLoad = 0;\n        this.loaded = 0;\n        this.doricContext = doricContext;\n        this.textureLoader = textureLoader;\n        this.pathPrefix = pathPrefix;\n        this.downloader = downloader || new Downloader(doricContext);\n    }\n    start(path) {\n        this.toLoad++;\n        return this.pathPrefix + path;\n    }\n    success(callback, path, asset) {\n        this.toLoad--;\n        this.loaded++;\n        this.assets[path] = asset;\n        if (callback)\n            callback(path, asset);\n    }\n    error(callback, path, message) {\n        this.toLoad--;\n        this.loaded++;\n        this.errors[path] = message;\n        if (callback)\n            callback(path, message);\n    }\n    setRawDataURI(path, data) {\n        this.downloader.rawDataUris[this.pathPrefix + path] = data;\n    }\n    loadBinary(path, success = null, error = null) {\n        path = this.start(path);\n        this.downloader.downloadBinary(path, (data) => {\n            //@ts-ignore\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            //@ts-ignore\n            this.error(error, path, `Couldn't load binary ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadText(path, success = null, error = null) {\n        path = this.start(path);\n        this.downloader.downloadText(path, (data) => {\n            //@ts-ignore\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            //@ts-ignore\n            this.error(error, path, `Couldn't load text ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadJson(path, success = null, error = null) {\n        path = this.start(path);\n        this.downloader.downloadJson(path, (data) => {\n            //@ts-ignore\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            //@ts-ignore\n            this.error(error, path, `Couldn't load JSON ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadTexture(path, success = null, error = null) {\n        path = this.start(path);\n        const assetsResource = new AssetsResource(path);\n        imageDecoder(this.doricContext).getImageInfo(assetsResource)\n            .then(({ width, height }) => {\n            imageDecoder(this.doricContext).decodeToPixels(assetsResource)\n                .then((imagePixels) => {\n                //@ts-ignore\n                this.success(success, path, this.textureLoader(imagePixels, width, height));\n            });\n        });\n    }\n    loadTextureAtlas(path, success = null, error = null, fileAlias = null) {\n        let index = path.lastIndexOf(\"/\");\n        let parent = index >= 0 ? path.substring(0, index + 1) : \"\";\n        path = this.start(path);\n        this.downloader.downloadText(path, (atlasText) => {\n            try {\n                let atlas = new TextureAtlas(atlasText);\n                let toLoad = atlas.pages.length, abort = false;\n                for (let page of atlas.pages) {\n                    this.loadTexture(fileAlias == null ? parent + page.name : fileAlias[page.name], (imagePath, texture) => {\n                        if (!abort) {\n                            page.setTexture(texture);\n                            //@ts-ignore\n                            if (--toLoad == 0)\n                                this.success(success, path, atlas);\n                        }\n                    }, (imagePath, message) => {\n                        //@ts-ignore\n                        if (!abort)\n                            this.error(error, path, `Couldn't load texture atlas ${path} page image: ${imagePath}`);\n                        abort = true;\n                    });\n                }\n            }\n            catch (e) {\n                //@ts-ignore\n                this.error(error, path, `Couldn't parse texture atlas ${path}: ${e.message}`);\n            }\n        }, (status, responseText) => {\n            //@ts-ignore\n            this.error(error, path, `Couldn't load texture atlas ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    get(path) {\n        return this.assets[this.pathPrefix + path];\n    }\n    require(path) {\n        path = this.pathPrefix + path;\n        let asset = this.assets[path];\n        if (asset)\n            return asset;\n        let error = this.errors[path];\n        throw Error(\"Asset not found: \" + path + (error ? \"\\n\" + error : \"\"));\n    }\n    remove(path) {\n        path = this.pathPrefix + path;\n        let asset = this.assets[path];\n        if (asset.dispose)\n            asset.dispose();\n        delete this.assets[path];\n        return asset;\n    }\n    removeAll() {\n        for (let key in this.assets) {\n            let asset = this.assets[key];\n            if (asset.dispose)\n                asset.dispose();\n        }\n        this.assets = {};\n    }\n    isLoadingComplete() {\n        return this.toLoad == 0;\n    }\n    getToLoad() {\n        return this.toLoad;\n    }\n    getLoaded() {\n        return this.loaded;\n    }\n    dispose() {\n        this.removeAll();\n    }\n    hasErrors() {\n        return Object.keys(this.errors).length > 0;\n    }\n    getErrors() {\n        return this.errors;\n    }\n}\nexport class Downloader {\n    constructor(doricContext) {\n        this.callbacks = {};\n        this.rawDataUris = {};\n        this.doricContext = doricContext;\n    }\n    dataUriToString(dataUri) {\n        if (!dataUri.startsWith(\"data:\")) {\n            throw new Error(\"Not a data URI.\");\n        }\n        let base64Idx = dataUri.indexOf(\"base64,\");\n        if (base64Idx != -1) {\n            base64Idx += \"base64,\".length;\n            return atob(dataUri.substr(base64Idx));\n        }\n        else {\n            return dataUri.substr(dataUri.indexOf(\",\") + 1);\n        }\n    }\n    base64ToUint8Array(base64) {\n        var binary_string = window.atob(base64);\n        var len = binary_string.length;\n        var bytes = new Uint8Array(len);\n        for (var i = 0; i < len; i++) {\n            bytes[i] = binary_string.charCodeAt(i);\n        }\n        return bytes;\n    }\n    dataUriToUint8Array(dataUri) {\n        if (!dataUri.startsWith(\"data:\")) {\n            throw new Error(\"Not a data URI.\");\n        }\n        let base64Idx = dataUri.indexOf(\"base64,\");\n        if (base64Idx == -1)\n            throw new Error(\"Not a binary data URI.\");\n        base64Idx += \"base64,\".length;\n        return this.base64ToUint8Array(dataUri.substr(base64Idx));\n    }\n    downloadText(url, success, error) {\n        if (this.start(url, success, error))\n            return;\n        if (this.rawDataUris[url]) {\n            try {\n                let dataUri = this.rawDataUris[url];\n                this.finish(url, 200, this.dataUriToString(dataUri));\n            }\n            catch (e) {\n                this.finish(url, 400, JSON.stringify(e));\n            }\n            return;\n        }\n        const assetsResource = new AssetsResource(url);\n        resourceLoader(this.doricContext).load(assetsResource).then((value) => {\n            const array = new Uint8Array(value);\n            let text = \"\";\n            for (let index = 0; index < array.length; index++) {\n                text += String.fromCharCode(array[index]);\n            }\n            this.finish(url, 200, text);\n        });\n    }\n    downloadJson(url, success, error) {\n        this.downloadText(url, (data) => {\n            success(JSON.parse(data));\n        }, error);\n    }\n    downloadBinary(url, success, error) {\n        if (this.start(url, success, error))\n            return;\n        if (this.rawDataUris[url]) {\n            try {\n                let dataUri = this.rawDataUris[url];\n                this.finish(url, 200, this.dataUriToUint8Array(dataUri));\n            }\n            catch (e) {\n                this.finish(url, 400, JSON.stringify(e));\n            }\n            return;\n        }\n        const assetsResource = new AssetsResource(url);\n        resourceLoader(this.doricContext).load(assetsResource).then((value) => {\n            this.finish(url, 200, new Uint8Array(value));\n        });\n    }\n    start(url, success, error) {\n        let callbacks = this.callbacks[url];\n        try {\n            if (callbacks)\n                return true;\n            this.callbacks[url] = callbacks = [];\n        }\n        finally {\n            callbacks.push(success, error);\n        }\n    }\n    finish(url, status, data) {\n        let callbacks = this.callbacks[url];\n        delete this.callbacks[url];\n        let args = status == 200 || status == 0 ? [data] : [status, data];\n        for (let i = args.length - 1, n = callbacks.length; i < n; i += 2)\n            callbacks[i].apply(null, args);\n    }\n}\n//# sourceMappingURL=AssetManagerBase.js.map","//@ts-nocheck\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BlendMode } from \"@esotericsoftware/spine-core\";\nexport class ManagedWebGLRenderingContext {\n    constructor(canvasOrContext, contextConfig = { alpha: \"true\" }) {\n        this.restorables = new Array();\n        if (!((canvasOrContext instanceof WebGLRenderingContext) || (typeof WebGL2RenderingContext !== 'undefined' && canvasOrContext instanceof WebGL2RenderingContext)))\n            this.setupCanvas(canvasOrContext, contextConfig);\n        else {\n            this.gl = canvasOrContext;\n            this.canvas = this.gl.canvas;\n        }\n    }\n    setupCanvas(canvas, contextConfig) {\n        this.gl = (canvas.getContext(\"webgl2\", contextConfig) || canvas.getContext(\"webgl\", contextConfig));\n        this.canvas = canvas;\n        canvas.addEventListener(\"webglcontextlost\", (e) => {\n            let event = e;\n            if (e)\n                e.preventDefault();\n        });\n        canvas.addEventListener(\"webglcontextrestored\", (e) => {\n            for (let i = 0, n = this.restorables.length; i < n; i++)\n                this.restorables[i].restore();\n        });\n    }\n    addRestorable(restorable) {\n        this.restorables.push(restorable);\n    }\n    removeRestorable(restorable) {\n        let index = this.restorables.indexOf(restorable);\n        if (index > -1)\n            this.restorables.splice(index, 1);\n    }\n}\nconst ONE = 1;\nconst ONE_MINUS_SRC_COLOR = 0x0301;\nconst SRC_ALPHA = 0x0302;\nconst ONE_MINUS_SRC_ALPHA = 0x0303;\nconst ONE_MINUS_DST_ALPHA = 0x0305;\nconst DST_COLOR = 0x0306;\nexport class WebGLBlendModeConverter {\n    static getDestGLBlendMode(blendMode) {\n        switch (blendMode) {\n            case BlendMode.Normal: return ONE_MINUS_SRC_ALPHA;\n            case BlendMode.Additive: return ONE;\n            case BlendMode.Multiply: return ONE_MINUS_SRC_ALPHA;\n            case BlendMode.Screen: return ONE_MINUS_SRC_ALPHA;\n            default: throw new Error(\"Unknown blend mode: \" + blendMode);\n        }\n    }\n    static getSourceColorGLBlendMode(blendMode, premultipliedAlpha = false) {\n        switch (blendMode) {\n            case BlendMode.Normal: return premultipliedAlpha ? ONE : SRC_ALPHA;\n            case BlendMode.Additive: return premultipliedAlpha ? ONE : SRC_ALPHA;\n            case BlendMode.Multiply: return DST_COLOR;\n            case BlendMode.Screen: return ONE;\n            default: throw new Error(\"Unknown blend mode: \" + blendMode);\n        }\n    }\n    static getSourceAlphaGLBlendMode(blendMode) {\n        switch (blendMode) {\n            case BlendMode.Normal: return ONE;\n            case BlendMode.Additive: return ONE;\n            case BlendMode.Multiply: return ONE_MINUS_SRC_ALPHA;\n            case BlendMode.Screen: return ONE_MINUS_SRC_COLOR;\n            default: throw new Error(\"Unknown blend mode: \" + blendMode);\n        }\n    }\n}\n//# sourceMappingURL=WebGL.js.map","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Texture, TextureFilter } from \"@esotericsoftware/spine-core\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class GLTexture extends Texture {\n    constructor(context, image, useMipMaps = false, imagePixels) {\n        super(image);\n        this.texture = null;\n        this.boundUnit = 0;\n        this.useMipMaps = false;\n        this.imagePixels = imagePixels;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.useMipMaps = useMipMaps;\n        this.restore();\n        this.context.addRestorable(this);\n    }\n    setFilters(minFilter, magFilter) {\n        let gl = this.context.gl;\n        this.bind();\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GLTexture.validateMagFilter(magFilter));\n    }\n    static validateMagFilter(magFilter) {\n        switch (magFilter) {\n            case TextureFilter.MipMap:\n            case TextureFilter.MipMapLinearLinear:\n            case TextureFilter.MipMapLinearNearest:\n            case TextureFilter.MipMapNearestLinear:\n            case TextureFilter.MipMapNearestNearest:\n                return TextureFilter.Linear;\n            default:\n                return magFilter;\n        }\n    }\n    setWraps(uWrap, vWrap) {\n        let gl = this.context.gl;\n        this.bind();\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, uWrap);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, vWrap);\n    }\n    update(useMipMaps) {\n        let gl = this.context.gl;\n        if (!this.texture)\n            this.texture = this.context.gl.createTexture();\n        this.bind();\n        if (GLTexture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL)\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        // gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this._image.width, this._image.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.imagePixels));\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, useMipMaps ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        if (useMipMaps)\n            gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    restore() {\n        this.texture = null;\n        this.update(this.useMipMaps);\n    }\n    bind(unit = 0) {\n        let gl = this.context.gl;\n        this.boundUnit = unit;\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    }\n    unbind() {\n        let gl = this.context.gl;\n        gl.activeTexture(gl.TEXTURE0 + this.boundUnit);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        gl.deleteTexture(this.texture);\n    }\n}\nGLTexture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL = false;\n//# sourceMappingURL=GLTexture.js.map","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { AssetManagerBase } from \"./AssetManagerBase\";\nimport { GLTexture } from \"./GLTexture\";\nexport class AssetManager extends AssetManagerBase {\n    constructor(doricContext, context, pathPrefix = \"\", downloader = null) {\n        super(doricContext, (imagePixels, width, height) => {\n            return new GLTexture(context, { width: width, height: height }, false, imagePixels);\n        }, pathPrefix, downloader);\n    }\n}\n//# sourceMappingURL=AssetManager.js.map","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class Input {\n    constructor(element) {\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.buttonDown = false;\n        this.touch0 = null;\n        this.touch1 = null;\n        this.initialPinchDistance = 0;\n        this.listeners = new Array();\n        this.eventListeners = [];\n        this.element = element;\n        this.setupCallbacks(element);\n    }\n    setupCallbacks(element) {\n        let mouseDown = (ev) => {\n            if (ev instanceof MouseEvent) {\n                let rect = element.getBoundingClientRect();\n                this.mouseX = ev.clientX - rect.left;\n                ;\n                this.mouseY = ev.clientY - rect.top;\n                this.buttonDown = true;\n                this.listeners.map((listener) => { if (listener.down)\n                    listener.down(this.mouseX, this.mouseY); });\n                document.addEventListener(\"mousemove\", mouseMove);\n                document.addEventListener(\"mouseup\", mouseUp);\n            }\n        };\n        let mouseMove = (ev) => {\n            if (ev instanceof MouseEvent) {\n                let rect = element.getBoundingClientRect();\n                this.mouseX = ev.clientX - rect.left;\n                ;\n                this.mouseY = ev.clientY - rect.top;\n                this.listeners.map((listener) => {\n                    if (this.buttonDown) {\n                        if (listener.dragged)\n                            listener.dragged(this.mouseX, this.mouseY);\n                    }\n                    else {\n                        if (listener.moved)\n                            listener.moved(this.mouseX, this.mouseY);\n                    }\n                });\n            }\n        };\n        let mouseUp = (ev) => {\n            if (ev instanceof MouseEvent) {\n                let rect = element.getBoundingClientRect();\n                this.mouseX = ev.clientX - rect.left;\n                ;\n                this.mouseY = ev.clientY - rect.top;\n                this.buttonDown = false;\n                this.listeners.map((listener) => { if (listener.up)\n                    listener.up(this.mouseX, this.mouseY); });\n                document.removeEventListener(\"mousemove\", mouseMove);\n                document.removeEventListener(\"mouseup\", mouseUp);\n            }\n        };\n        let mouseWheel = (e) => {\n            e.preventDefault();\n            let deltaY = e.deltaY;\n            if (e.deltaMode == WheelEvent.DOM_DELTA_LINE)\n                deltaY *= 8;\n            if (e.deltaMode == WheelEvent.DOM_DELTA_PAGE)\n                deltaY *= 24;\n            this.listeners.map((listener) => { if (listener.wheel)\n                listener.wheel(e.deltaY); });\n        };\n        element.addEventListener(\"mousedown\", mouseDown, true);\n        element.addEventListener(\"mousemove\", mouseMove, true);\n        element.addEventListener(\"mouseup\", mouseUp, true);\n        element.addEventListener(\"wheel\", mouseWheel, true);\n        element.addEventListener(\"touchstart\", (ev) => {\n            if (!this.touch0 || !this.touch1) {\n                var touches = ev.changedTouches;\n                let nativeTouch = touches.item(0);\n                let rect = element.getBoundingClientRect();\n                let x = nativeTouch.clientX - rect.left;\n                let y = nativeTouch.clientY - rect.top;\n                let touch = new Touch(nativeTouch.identifier, x, y);\n                this.mouseX = x;\n                this.mouseY = y;\n                this.buttonDown = true;\n                if (!this.touch0) {\n                    this.touch0 = touch;\n                    this.listeners.map((listener) => { if (listener.down)\n                        listener.down(touch.x, touch.y); });\n                }\n                else if (!this.touch1) {\n                    this.touch1 = touch;\n                    let dx = this.touch1.x - this.touch0.x;\n                    let dy = this.touch1.x - this.touch0.x;\n                    this.initialPinchDistance = Math.sqrt(dx * dx + dy * dy);\n                    this.listeners.map((listener) => { if (listener.zoom)\n                        listener.zoom(this.initialPinchDistance, this.initialPinchDistance); });\n                }\n            }\n            ev.preventDefault();\n        }, false);\n        element.addEventListener(\"touchmove\", (ev) => {\n            if (this.touch0) {\n                var touches = ev.changedTouches;\n                let rect = element.getBoundingClientRect();\n                for (var i = 0; i < touches.length; i++) {\n                    var nativeTouch = touches[i];\n                    let x = nativeTouch.clientX - rect.left;\n                    let y = nativeTouch.clientY - rect.top;\n                    if (this.touch0.identifier === nativeTouch.identifier) {\n                        this.touch0.x = this.mouseX = x;\n                        this.touch0.y = this.mouseY = y;\n                        this.listeners.map((listener) => { if (listener.dragged)\n                            listener.dragged(x, y); });\n                    }\n                    if (this.touch1 && this.touch1.identifier === nativeTouch.identifier) {\n                        this.touch1.x = this.mouseX = x;\n                        this.touch1.y = this.mouseY = y;\n                    }\n                }\n                if (this.touch0 && this.touch1) {\n                    let dx = this.touch1.x - this.touch0.x;\n                    let dy = this.touch1.x - this.touch0.x;\n                    let distance = Math.sqrt(dx * dx + dy * dy);\n                    this.listeners.map((listener) => { if (listener.zoom)\n                        listener.zoom(this.initialPinchDistance, distance); });\n                }\n            }\n            ev.preventDefault();\n        }, false);\n        let touchEnd = (ev) => {\n            if (this.touch0) {\n                var touches = ev.changedTouches;\n                let rect = element.getBoundingClientRect();\n                for (var i = 0; i < touches.length; i++) {\n                    var nativeTouch = touches[i];\n                    let x = nativeTouch.clientX - rect.left;\n                    let y = nativeTouch.clientY - rect.top;\n                    if (this.touch0.identifier === nativeTouch.identifier) {\n                        this.touch0 = null;\n                        this.mouseX = x;\n                        this.mouseY = y;\n                        this.listeners.map((listener) => { if (listener.up)\n                            listener.up(x, y); });\n                        if (!this.touch1) {\n                            this.buttonDown = false;\n                            break;\n                        }\n                        else {\n                            this.touch0 = this.touch1;\n                            this.touch1 = null;\n                            this.mouseX = this.touch0.x;\n                            this.mouseX = this.touch0.x;\n                            this.buttonDown = true;\n                            this.listeners.map((listener) => { if (listener.down)\n                                listener.down(this.touch0.x, this.touch0.y); });\n                        }\n                    }\n                    if (this.touch1 && this.touch1.identifier) {\n                        this.touch1 = null;\n                    }\n                }\n            }\n            ev.preventDefault();\n        };\n        element.addEventListener(\"touchend\", touchEnd, false);\n        element.addEventListener(\"touchcancel\", touchEnd);\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n    }\n    removeListener(listener) {\n        let idx = this.listeners.indexOf(listener);\n        if (idx > -1) {\n            this.listeners.splice(idx, 1);\n        }\n    }\n}\nexport class Touch {\n    constructor(identifier, x, y) {\n        this.identifier = identifier;\n        this.x = x;\n        this.y = y;\n    }\n}\n//# sourceMappingURL=Input.js.map","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { M00, M01, M02, M03, M10, M11, M12, M13, M20, M21, M22, M23, M30, M31, M32, M33 } from \"./Matrix4\";\nexport class Vector3 {\n    constructor(x = 0, y = 0, z = 0) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    setFrom(v) {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        return this;\n    }\n    set(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return this;\n    }\n    sub(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return this;\n    }\n    scale(s) {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n        return this;\n    }\n    normalize() {\n        let len = this.length();\n        if (len == 0)\n            return this;\n        len = 1 / len;\n        this.x *= len;\n        this.y *= len;\n        this.z *= len;\n        return this;\n    }\n    cross(v) {\n        return this.set(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\n    }\n    multiply(matrix) {\n        let l_mat = matrix.values;\n        return this.set(this.x * l_mat[M00] + this.y * l_mat[M01] + this.z * l_mat[M02] + l_mat[M03], this.x * l_mat[M10] + this.y * l_mat[M11] + this.z * l_mat[M12] + l_mat[M13], this.x * l_mat[M20] + this.y * l_mat[M21] + this.z * l_mat[M22] + l_mat[M23]);\n    }\n    project(matrix) {\n        let l_mat = matrix.values;\n        let l_w = 1 / (this.x * l_mat[M30] + this.y * l_mat[M31] + this.z * l_mat[M32] + l_mat[M33]);\n        return this.set((this.x * l_mat[M00] + this.y * l_mat[M01] + this.z * l_mat[M02] + l_mat[M03]) * l_w, (this.x * l_mat[M10] + this.y * l_mat[M11] + this.z * l_mat[M12] + l_mat[M13]) * l_w, (this.x * l_mat[M20] + this.y * l_mat[M21] + this.z * l_mat[M22] + l_mat[M23]) * l_w);\n    }\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    distance(v) {\n        let a = v.x - this.x;\n        let b = v.y - this.y;\n        let c = v.z - this.z;\n        return Math.sqrt(a * a + b * b + c * c);\n    }\n}\n//# sourceMappingURL=Vector3.js.map","//@ts-nocheck\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Vector3 } from \"./Vector3\";\nexport const M00 = 0;\nexport const M01 = 4;\nexport const M02 = 8;\nexport const M03 = 12;\nexport const M10 = 1;\nexport const M11 = 5;\nexport const M12 = 9;\nexport const M13 = 13;\nexport const M20 = 2;\nexport const M21 = 6;\nexport const M22 = 10;\nexport const M23 = 14;\nexport const M30 = 3;\nexport const M31 = 7;\nexport const M32 = 11;\nexport const M33 = 15;\nexport class Matrix4 {\n    constructor() {\n        this.temp = new Float32Array(16);\n        this.values = new Float32Array(16);\n        let v = this.values;\n        v[M00] = 1;\n        v[M11] = 1;\n        v[M22] = 1;\n        v[M33] = 1;\n    }\n    set(values) {\n        this.values.set(values);\n        return this;\n    }\n    transpose() {\n        let t = this.temp;\n        let v = this.values;\n        t[M00] = v[M00];\n        t[M01] = v[M10];\n        t[M02] = v[M20];\n        t[M03] = v[M30];\n        t[M10] = v[M01];\n        t[M11] = v[M11];\n        t[M12] = v[M21];\n        t[M13] = v[M31];\n        t[M20] = v[M02];\n        t[M21] = v[M12];\n        t[M22] = v[M22];\n        t[M23] = v[M32];\n        t[M30] = v[M03];\n        t[M31] = v[M13];\n        t[M32] = v[M23];\n        t[M33] = v[M33];\n        return this.set(t);\n    }\n    identity() {\n        let v = this.values;\n        v[M00] = 1;\n        v[M01] = 0;\n        v[M02] = 0;\n        v[M03] = 0;\n        v[M10] = 0;\n        v[M11] = 1;\n        v[M12] = 0;\n        v[M13] = 0;\n        v[M20] = 0;\n        v[M21] = 0;\n        v[M22] = 1;\n        v[M23] = 0;\n        v[M30] = 0;\n        v[M31] = 0;\n        v[M32] = 0;\n        v[M33] = 1;\n        return this;\n    }\n    invert() {\n        let v = this.values;\n        let t = this.temp;\n        let l_det = v[M30] * v[M21] * v[M12] * v[M03] - v[M20] * v[M31] * v[M12] * v[M03] - v[M30] * v[M11] * v[M22] * v[M03]\n            + v[M10] * v[M31] * v[M22] * v[M03] + v[M20] * v[M11] * v[M32] * v[M03] - v[M10] * v[M21] * v[M32] * v[M03]\n            - v[M30] * v[M21] * v[M02] * v[M13] + v[M20] * v[M31] * v[M02] * v[M13] + v[M30] * v[M01] * v[M22] * v[M13]\n            - v[M00] * v[M31] * v[M22] * v[M13] - v[M20] * v[M01] * v[M32] * v[M13] + v[M00] * v[M21] * v[M32] * v[M13]\n            + v[M30] * v[M11] * v[M02] * v[M23] - v[M10] * v[M31] * v[M02] * v[M23] - v[M30] * v[M01] * v[M12] * v[M23]\n            + v[M00] * v[M31] * v[M12] * v[M23] + v[M10] * v[M01] * v[M32] * v[M23] - v[M00] * v[M11] * v[M32] * v[M23]\n            - v[M20] * v[M11] * v[M02] * v[M33] + v[M10] * v[M21] * v[M02] * v[M33] + v[M20] * v[M01] * v[M12] * v[M33]\n            - v[M00] * v[M21] * v[M12] * v[M33] - v[M10] * v[M01] * v[M22] * v[M33] + v[M00] * v[M11] * v[M22] * v[M33];\n        if (l_det == 0)\n            throw new Error(\"non-invertible matrix\");\n        let inv_det = 1.0 / l_det;\n        t[M00] = v[M12] * v[M23] * v[M31] - v[M13] * v[M22] * v[M31] + v[M13] * v[M21] * v[M32]\n            - v[M11] * v[M23] * v[M32] - v[M12] * v[M21] * v[M33] + v[M11] * v[M22] * v[M33];\n        t[M01] = v[M03] * v[M22] * v[M31] - v[M02] * v[M23] * v[M31] - v[M03] * v[M21] * v[M32]\n            + v[M01] * v[M23] * v[M32] + v[M02] * v[M21] * v[M33] - v[M01] * v[M22] * v[M33];\n        t[M02] = v[M02] * v[M13] * v[M31] - v[M03] * v[M12] * v[M31] + v[M03] * v[M11] * v[M32]\n            - v[M01] * v[M13] * v[M32] - v[M02] * v[M11] * v[M33] + v[M01] * v[M12] * v[M33];\n        t[M03] = v[M03] * v[M12] * v[M21] - v[M02] * v[M13] * v[M21] - v[M03] * v[M11] * v[M22]\n            + v[M01] * v[M13] * v[M22] + v[M02] * v[M11] * v[M23] - v[M01] * v[M12] * v[M23];\n        t[M10] = v[M13] * v[M22] * v[M30] - v[M12] * v[M23] * v[M30] - v[M13] * v[M20] * v[M32]\n            + v[M10] * v[M23] * v[M32] + v[M12] * v[M20] * v[M33] - v[M10] * v[M22] * v[M33];\n        t[M11] = v[M02] * v[M23] * v[M30] - v[M03] * v[M22] * v[M30] + v[M03] * v[M20] * v[M32]\n            - v[M00] * v[M23] * v[M32] - v[M02] * v[M20] * v[M33] + v[M00] * v[M22] * v[M33];\n        t[M12] = v[M03] * v[M12] * v[M30] - v[M02] * v[M13] * v[M30] - v[M03] * v[M10] * v[M32]\n            + v[M00] * v[M13] * v[M32] + v[M02] * v[M10] * v[M33] - v[M00] * v[M12] * v[M33];\n        t[M13] = v[M02] * v[M13] * v[M20] - v[M03] * v[M12] * v[M20] + v[M03] * v[M10] * v[M22]\n            - v[M00] * v[M13] * v[M22] - v[M02] * v[M10] * v[M23] + v[M00] * v[M12] * v[M23];\n        t[M20] = v[M11] * v[M23] * v[M30] - v[M13] * v[M21] * v[M30] + v[M13] * v[M20] * v[M31]\n            - v[M10] * v[M23] * v[M31] - v[M11] * v[M20] * v[M33] + v[M10] * v[M21] * v[M33];\n        t[M21] = v[M03] * v[M21] * v[M30] - v[M01] * v[M23] * v[M30] - v[M03] * v[M20] * v[M31]\n            + v[M00] * v[M23] * v[M31] + v[M01] * v[M20] * v[M33] - v[M00] * v[M21] * v[M33];\n        t[M22] = v[M01] * v[M13] * v[M30] - v[M03] * v[M11] * v[M30] + v[M03] * v[M10] * v[M31]\n            - v[M00] * v[M13] * v[M31] - v[M01] * v[M10] * v[M33] + v[M00] * v[M11] * v[M33];\n        t[M23] = v[M03] * v[M11] * v[M20] - v[M01] * v[M13] * v[M20] - v[M03] * v[M10] * v[M21]\n            + v[M00] * v[M13] * v[M21] + v[M01] * v[M10] * v[M23] - v[M00] * v[M11] * v[M23];\n        t[M30] = v[M12] * v[M21] * v[M30] - v[M11] * v[M22] * v[M30] - v[M12] * v[M20] * v[M31]\n            + v[M10] * v[M22] * v[M31] + v[M11] * v[M20] * v[M32] - v[M10] * v[M21] * v[M32];\n        t[M31] = v[M01] * v[M22] * v[M30] - v[M02] * v[M21] * v[M30] + v[M02] * v[M20] * v[M31]\n            - v[M00] * v[M22] * v[M31] - v[M01] * v[M20] * v[M32] + v[M00] * v[M21] * v[M32];\n        t[M32] = v[M02] * v[M11] * v[M30] - v[M01] * v[M12] * v[M30] - v[M02] * v[M10] * v[M31]\n            + v[M00] * v[M12] * v[M31] + v[M01] * v[M10] * v[M32] - v[M00] * v[M11] * v[M32];\n        t[M33] = v[M01] * v[M12] * v[M20] - v[M02] * v[M11] * v[M20] + v[M02] * v[M10] * v[M21]\n            - v[M00] * v[M12] * v[M21] - v[M01] * v[M10] * v[M22] + v[M00] * v[M11] * v[M22];\n        v[M00] = t[M00] * inv_det;\n        v[M01] = t[M01] * inv_det;\n        v[M02] = t[M02] * inv_det;\n        v[M03] = t[M03] * inv_det;\n        v[M10] = t[M10] * inv_det;\n        v[M11] = t[M11] * inv_det;\n        v[M12] = t[M12] * inv_det;\n        v[M13] = t[M13] * inv_det;\n        v[M20] = t[M20] * inv_det;\n        v[M21] = t[M21] * inv_det;\n        v[M22] = t[M22] * inv_det;\n        v[M23] = t[M23] * inv_det;\n        v[M30] = t[M30] * inv_det;\n        v[M31] = t[M31] * inv_det;\n        v[M32] = t[M32] * inv_det;\n        v[M33] = t[M33] * inv_det;\n        return this;\n    }\n    determinant() {\n        let v = this.values;\n        return v[M30] * v[M21] * v[M12] * v[M03] - v[M20] * v[M31] * v[M12] * v[M03] - v[M30] * v[M11] * v[M22] * v[M03]\n            + v[M10] * v[M31] * v[M22] * v[M03] + v[M20] * v[M11] * v[M32] * v[M03] - v[M10] * v[M21] * v[M32] * v[M03]\n            - v[M30] * v[M21] * v[M02] * v[M13] + v[M20] * v[M31] * v[M02] * v[M13] + v[M30] * v[M01] * v[M22] * v[M13]\n            - v[M00] * v[M31] * v[M22] * v[M13] - v[M20] * v[M01] * v[M32] * v[M13] + v[M00] * v[M21] * v[M32] * v[M13]\n            + v[M30] * v[M11] * v[M02] * v[M23] - v[M10] * v[M31] * v[M02] * v[M23] - v[M30] * v[M01] * v[M12] * v[M23]\n            + v[M00] * v[M31] * v[M12] * v[M23] + v[M10] * v[M01] * v[M32] * v[M23] - v[M00] * v[M11] * v[M32] * v[M23]\n            - v[M20] * v[M11] * v[M02] * v[M33] + v[M10] * v[M21] * v[M02] * v[M33] + v[M20] * v[M01] * v[M12] * v[M33]\n            - v[M00] * v[M21] * v[M12] * v[M33] - v[M10] * v[M01] * v[M22] * v[M33] + v[M00] * v[M11] * v[M22] * v[M33];\n    }\n    translate(x, y, z) {\n        let v = this.values;\n        v[M03] += x;\n        v[M13] += y;\n        v[M23] += z;\n        return this;\n    }\n    copy() {\n        return new Matrix4().set(this.values);\n    }\n    projection(near, far, fovy, aspectRatio) {\n        this.identity();\n        let l_fd = (1.0 / Math.tan((fovy * (Math.PI / 180)) / 2.0));\n        let l_a1 = (far + near) / (near - far);\n        let l_a2 = (2 * far * near) / (near - far);\n        let v = this.values;\n        v[M00] = l_fd / aspectRatio;\n        v[M10] = 0;\n        v[M20] = 0;\n        v[M30] = 0;\n        v[M01] = 0;\n        v[M11] = l_fd;\n        v[M21] = 0;\n        v[M31] = 0;\n        v[M02] = 0;\n        v[M12] = 0;\n        v[M22] = l_a1;\n        v[M32] = -1;\n        v[M03] = 0;\n        v[M13] = 0;\n        v[M23] = l_a2;\n        v[M33] = 0;\n        return this;\n    }\n    ortho2d(x, y, width, height) {\n        return this.ortho(x, x + width, y, y + height, 0, 1);\n    }\n    ortho(left, right, bottom, top, near, far) {\n        this.identity();\n        let x_orth = 2 / (right - left);\n        let y_orth = 2 / (top - bottom);\n        let z_orth = -2 / (far - near);\n        let tx = -(right + left) / (right - left);\n        let ty = -(top + bottom) / (top - bottom);\n        let tz = -(far + near) / (far - near);\n        let v = this.values;\n        v[M00] = x_orth;\n        v[M10] = 0;\n        v[M20] = 0;\n        v[M30] = 0;\n        v[M01] = 0;\n        v[M11] = y_orth;\n        v[M21] = 0;\n        v[M31] = 0;\n        v[M02] = 0;\n        v[M12] = 0;\n        v[M22] = z_orth;\n        v[M32] = 0;\n        v[M03] = tx;\n        v[M13] = ty;\n        v[M23] = tz;\n        v[M33] = 1;\n        return this;\n    }\n    multiply(matrix) {\n        let t = this.temp;\n        let v = this.values;\n        let m = matrix.values;\n        t[M00] = v[M00] * m[M00] + v[M01] * m[M10] + v[M02] * m[M20] + v[M03] * m[M30];\n        t[M01] = v[M00] * m[M01] + v[M01] * m[M11] + v[M02] * m[M21] + v[M03] * m[M31];\n        t[M02] = v[M00] * m[M02] + v[M01] * m[M12] + v[M02] * m[M22] + v[M03] * m[M32];\n        t[M03] = v[M00] * m[M03] + v[M01] * m[M13] + v[M02] * m[M23] + v[M03] * m[M33];\n        t[M10] = v[M10] * m[M00] + v[M11] * m[M10] + v[M12] * m[M20] + v[M13] * m[M30];\n        t[M11] = v[M10] * m[M01] + v[M11] * m[M11] + v[M12] * m[M21] + v[M13] * m[M31];\n        t[M12] = v[M10] * m[M02] + v[M11] * m[M12] + v[M12] * m[M22] + v[M13] * m[M32];\n        t[M13] = v[M10] * m[M03] + v[M11] * m[M13] + v[M12] * m[M23] + v[M13] * m[M33];\n        t[M20] = v[M20] * m[M00] + v[M21] * m[M10] + v[M22] * m[M20] + v[M23] * m[M30];\n        t[M21] = v[M20] * m[M01] + v[M21] * m[M11] + v[M22] * m[M21] + v[M23] * m[M31];\n        t[M22] = v[M20] * m[M02] + v[M21] * m[M12] + v[M22] * m[M22] + v[M23] * m[M32];\n        t[M23] = v[M20] * m[M03] + v[M21] * m[M13] + v[M22] * m[M23] + v[M23] * m[M33];\n        t[M30] = v[M30] * m[M00] + v[M31] * m[M10] + v[M32] * m[M20] + v[M33] * m[M30];\n        t[M31] = v[M30] * m[M01] + v[M31] * m[M11] + v[M32] * m[M21] + v[M33] * m[M31];\n        t[M32] = v[M30] * m[M02] + v[M31] * m[M12] + v[M32] * m[M22] + v[M33] * m[M32];\n        t[M33] = v[M30] * m[M03] + v[M31] * m[M13] + v[M32] * m[M23] + v[M33] * m[M33];\n        return this.set(this.temp);\n    }\n    multiplyLeft(matrix) {\n        let t = this.temp;\n        let v = this.values;\n        let m = matrix.values;\n        t[M00] = m[M00] * v[M00] + m[M01] * v[M10] + m[M02] * v[M20] + m[M03] * v[M30];\n        t[M01] = m[M00] * v[M01] + m[M01] * v[M11] + m[M02] * v[M21] + m[M03] * v[M31];\n        t[M02] = m[M00] * v[M02] + m[M01] * v[M12] + m[M02] * v[M22] + m[M03] * v[M32];\n        t[M03] = m[M00] * v[M03] + m[M01] * v[M13] + m[M02] * v[M23] + m[M03] * v[M33];\n        t[M10] = m[M10] * v[M00] + m[M11] * v[M10] + m[M12] * v[M20] + m[M13] * v[M30];\n        t[M11] = m[M10] * v[M01] + m[M11] * v[M11] + m[M12] * v[M21] + m[M13] * v[M31];\n        t[M12] = m[M10] * v[M02] + m[M11] * v[M12] + m[M12] * v[M22] + m[M13] * v[M32];\n        t[M13] = m[M10] * v[M03] + m[M11] * v[M13] + m[M12] * v[M23] + m[M13] * v[M33];\n        t[M20] = m[M20] * v[M00] + m[M21] * v[M10] + m[M22] * v[M20] + m[M23] * v[M30];\n        t[M21] = m[M20] * v[M01] + m[M21] * v[M11] + m[M22] * v[M21] + m[M23] * v[M31];\n        t[M22] = m[M20] * v[M02] + m[M21] * v[M12] + m[M22] * v[M22] + m[M23] * v[M32];\n        t[M23] = m[M20] * v[M03] + m[M21] * v[M13] + m[M22] * v[M23] + m[M23] * v[M33];\n        t[M30] = m[M30] * v[M00] + m[M31] * v[M10] + m[M32] * v[M20] + m[M33] * v[M30];\n        t[M31] = m[M30] * v[M01] + m[M31] * v[M11] + m[M32] * v[M21] + m[M33] * v[M31];\n        t[M32] = m[M30] * v[M02] + m[M31] * v[M12] + m[M32] * v[M22] + m[M33] * v[M32];\n        t[M33] = m[M30] * v[M03] + m[M31] * v[M13] + m[M32] * v[M23] + m[M33] * v[M33];\n        return this.set(this.temp);\n    }\n    lookAt(position, direction, up) {\n        Matrix4.initTemps();\n        let xAxis = Matrix4.xAxis, yAxis = Matrix4.yAxis, zAxis = Matrix4.zAxis;\n        zAxis.setFrom(direction).normalize();\n        xAxis.setFrom(direction).normalize();\n        xAxis.cross(up).normalize();\n        yAxis.setFrom(xAxis).cross(zAxis).normalize();\n        this.identity();\n        let val = this.values;\n        val[M00] = xAxis.x;\n        val[M01] = xAxis.y;\n        val[M02] = xAxis.z;\n        val[M10] = yAxis.x;\n        val[M11] = yAxis.y;\n        val[M12] = yAxis.z;\n        val[M20] = -zAxis.x;\n        val[M21] = -zAxis.y;\n        val[M22] = -zAxis.z;\n        Matrix4.tmpMatrix.identity();\n        Matrix4.tmpMatrix.values[M03] = -position.x;\n        Matrix4.tmpMatrix.values[M13] = -position.y;\n        Matrix4.tmpMatrix.values[M23] = -position.z;\n        this.multiply(Matrix4.tmpMatrix);\n        return this;\n    }\n    static initTemps() {\n        if (Matrix4.xAxis === null)\n            Matrix4.xAxis = new Vector3();\n        if (Matrix4.yAxis === null)\n            Matrix4.yAxis = new Vector3();\n        if (Matrix4.zAxis === null)\n            Matrix4.zAxis = new Vector3();\n    }\n}\nMatrix4.xAxis = null;\nMatrix4.yAxis = null;\nMatrix4.zAxis = null;\nMatrix4.tmpMatrix = new Matrix4();\n//# sourceMappingURL=Matrix4.js.map","//@ts-nocheck\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class Shader {\n    constructor(context, vertexShader, fragmentShader) {\n        this.vertexShader = vertexShader;\n        this.fragmentShader = fragmentShader;\n        this.vs = null;\n        this.fs = null;\n        this.program = null;\n        this.tmp2x2 = new Float32Array(2 * 2);\n        this.tmp3x3 = new Float32Array(3 * 3);\n        this.tmp4x4 = new Float32Array(4 * 4);\n        this.vsSource = vertexShader;\n        this.fsSource = fragmentShader;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.context.addRestorable(this);\n        this.compile();\n    }\n    getProgram() { return this.program; }\n    getVertexShader() { return this.vertexShader; }\n    getFragmentShader() { return this.fragmentShader; }\n    getVertexShaderSource() { return this.vsSource; }\n    getFragmentSource() { return this.fsSource; }\n    compile() {\n        let gl = this.context.gl;\n        try {\n            this.vs = this.compileShader(gl.VERTEX_SHADER, this.vertexShader);\n            this.fs = this.compileShader(gl.FRAGMENT_SHADER, this.fragmentShader);\n            this.program = this.compileProgram(this.vs, this.fs);\n        }\n        catch (e) {\n            this.dispose();\n            throw e;\n        }\n    }\n    compileShader(type, source) {\n        let gl = this.context.gl;\n        let shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            let error = \"Couldn't compile shader: \" + gl.getShaderInfoLog(shader);\n            gl.deleteShader(shader);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return shader;\n    }\n    compileProgram(vs, fs) {\n        let gl = this.context.gl;\n        let program = gl.createProgram();\n        gl.attachShader(program, vs);\n        gl.attachShader(program, fs);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            let error = \"Couldn't compile shader program: \" + gl.getProgramInfoLog(program);\n            gl.deleteProgram(program);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return program;\n    }\n    restore() {\n        this.compile();\n    }\n    bind() {\n        this.context.gl.useProgram(this.program);\n    }\n    unbind() {\n        this.context.gl.useProgram(null);\n    }\n    setUniformi(uniform, value) {\n        this.context.gl.uniform1i(this.getUniformLocation(uniform), value);\n    }\n    setUniformf(uniform, value) {\n        this.context.gl.uniform1f(this.getUniformLocation(uniform), value);\n    }\n    setUniform2f(uniform, value, value2) {\n        this.context.gl.uniform2f(this.getUniformLocation(uniform), value, value2);\n    }\n    setUniform3f(uniform, value, value2, value3) {\n        this.context.gl.uniform3f(this.getUniformLocation(uniform), value, value2, value3);\n    }\n    setUniform4f(uniform, value, value2, value3, value4) {\n        this.context.gl.uniform4f(this.getUniformLocation(uniform), value, value2, value3, value4);\n    }\n    setUniform2x2f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp2x2.set(value);\n        gl.uniformMatrix2fv(this.getUniformLocation(uniform), false, this.tmp2x2);\n    }\n    setUniform3x3f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp3x3.set(value);\n        gl.uniformMatrix3fv(this.getUniformLocation(uniform), false, this.tmp3x3);\n    }\n    setUniform4x4f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp4x4.set(value);\n        gl.uniformMatrix4fv(this.getUniformLocation(uniform), false, this.tmp4x4);\n    }\n    getUniformLocation(uniform) {\n        let gl = this.context.gl;\n        let location = gl.getUniformLocation(this.program, uniform);\n        if (!location && !gl.isContextLost())\n            throw new Error(`Couldn't find location for uniform ${uniform}`);\n        return location;\n    }\n    getAttributeLocation(attribute) {\n        let gl = this.context.gl;\n        let location = gl.getAttribLocation(this.program, attribute);\n        if (location == -1 && !gl.isContextLost())\n            throw new Error(`Couldn't find location for attribute ${attribute}`);\n        return location;\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        if (this.vs) {\n            gl.deleteShader(this.vs);\n            this.vs = null;\n        }\n        if (this.fs) {\n            gl.deleteShader(this.fs);\n            this.fs = null;\n        }\n        if (this.program) {\n            gl.deleteProgram(this.program);\n            this.program = null;\n        }\n    }\n    static newColoredTextured(context) {\n        let vs = `\n\t\t\t\tattribute vec4 ${Shader.POSITION};\n\t\t\t\tattribute vec4 ${Shader.COLOR};\n\t\t\t\tattribute vec2 ${Shader.TEXCOORDS};\n\t\t\t\tuniform mat4 ${Shader.MVP_MATRIX};\n\t\t\t\tvarying vec4 v_color;\n\t\t\t\tvarying vec2 v_texCoords;\n\n\t\t\t\tvoid main () {\n\t\t\t\t\tv_color = ${Shader.COLOR};\n\t\t\t\t\tv_texCoords = ${Shader.TEXCOORDS};\n\t\t\t\t\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n\t\t\t\t}\n\t\t\t`;\n        let fs = `\n\t\t\t\t#ifdef GL_ES\n\t\t\t\t\t#define LOWP lowp\n\t\t\t\t\tprecision mediump float;\n\t\t\t\t#else\n\t\t\t\t\t#define LOWP\n\t\t\t\t#endif\n\t\t\t\tvarying LOWP vec4 v_color;\n\t\t\t\tvarying vec2 v_texCoords;\n\t\t\t\tuniform sampler2D u_texture;\n\n\t\t\t\tvoid main () {\n\t\t\t\t\tgl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n\t\t\t\t}\n\t\t\t`;\n        return new Shader(context, vs, fs);\n    }\n    static newTwoColoredTextured(context) {\n        let vs = `\n\t\t\t\tattribute vec4 ${Shader.POSITION};\n\t\t\t\tattribute vec4 ${Shader.COLOR};\n\t\t\t\tattribute vec4 ${Shader.COLOR2};\n\t\t\t\tattribute vec2 ${Shader.TEXCOORDS};\n\t\t\t\tuniform mat4 ${Shader.MVP_MATRIX};\n\t\t\t\tvarying vec4 v_light;\n\t\t\t\tvarying vec4 v_dark;\n\t\t\t\tvarying vec2 v_texCoords;\n\n\t\t\t\tvoid main () {\n\t\t\t\t\tv_light = ${Shader.COLOR};\n\t\t\t\t\tv_dark = ${Shader.COLOR2};\n\t\t\t\t\tv_texCoords = ${Shader.TEXCOORDS};\n\t\t\t\t\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n\t\t\t\t}\n\t\t\t`;\n        let fs = `\n\t\t\t\t#ifdef GL_ES\n\t\t\t\t\t#define LOWP lowp\n\t\t\t\t\tprecision mediump float;\n\t\t\t\t#else\n\t\t\t\t\t#define LOWP\n\t\t\t\t#endif\n\t\t\t\tvarying LOWP vec4 v_light;\n\t\t\t\tvarying LOWP vec4 v_dark;\n\t\t\t\tvarying vec2 v_texCoords;\n\t\t\t\tuniform sampler2D u_texture;\n\n\t\t\t\tvoid main () {\n\t\t\t\t\tvec4 texColor = texture2D(u_texture, v_texCoords);\n\t\t\t\t\tgl_FragColor.a = texColor.a * v_light.a;\n\t\t\t\t\tgl_FragColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n\t\t\t\t}\n\t\t\t`;\n        return new Shader(context, vs, fs);\n    }\n    static newColored(context) {\n        let vs = `\n\t\t\t\tattribute vec4 ${Shader.POSITION};\n\t\t\t\tattribute vec4 ${Shader.COLOR};\n\t\t\t\tuniform mat4 ${Shader.MVP_MATRIX};\n\t\t\t\tvarying vec4 v_color;\n\n\t\t\t\tvoid main () {\n\t\t\t\t\tv_color = ${Shader.COLOR};\n\t\t\t\t\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n\t\t\t\t}\n\t\t\t`;\n        let fs = `\n\t\t\t\t#ifdef GL_ES\n\t\t\t\t\t#define LOWP lowp\n\t\t\t\t\tprecision mediump float;\n\t\t\t\t#else\n\t\t\t\t\t#define LOWP\n\t\t\t\t#endif\n\t\t\t\tvarying LOWP vec4 v_color;\n\n\t\t\t\tvoid main () {\n\t\t\t\t\tgl_FragColor = v_color;\n\t\t\t\t}\n\t\t\t`;\n        return new Shader(context, vs, fs);\n    }\n}\nShader.MVP_MATRIX = \"u_projTrans\";\nShader.POSITION = \"a_position\";\nShader.COLOR = \"a_color\";\nShader.COLOR2 = \"a_color2\";\nShader.TEXCOORDS = \"a_texCoords\";\nShader.SAMPLER = \"u_texture\";\n//# sourceMappingURL=Shader.js.map","//@ts-nocheck\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Shader } from \"./Shader\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class Mesh {\n    constructor(context, attributes, maxVertices, maxIndices) {\n        this.attributes = attributes;\n        this.verticesLength = 0;\n        this.dirtyVertices = false;\n        this.indicesLength = 0;\n        this.dirtyIndices = false;\n        this.elementsPerVertex = 0;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.elementsPerVertex = 0;\n        for (let i = 0; i < attributes.length; i++) {\n            this.elementsPerVertex += attributes[i].numElements;\n        }\n        this.vertices = new Float32Array(maxVertices * this.elementsPerVertex);\n        this.indices = new Uint16Array(maxIndices);\n        this.context.addRestorable(this);\n    }\n    getAttributes() { return this.attributes; }\n    maxVertices() { return this.vertices.length / this.elementsPerVertex; }\n    numVertices() { return this.verticesLength / this.elementsPerVertex; }\n    setVerticesLength(length) {\n        this.dirtyVertices = true;\n        this.verticesLength = length;\n    }\n    getVertices() { return this.vertices; }\n    maxIndices() { return this.indices.length; }\n    numIndices() { return this.indicesLength; }\n    setIndicesLength(length) {\n        this.dirtyIndices = true;\n        this.indicesLength = length;\n    }\n    getIndices() { return this.indices; }\n    ;\n    getVertexSizeInFloats() {\n        let size = 0;\n        for (var i = 0; i < this.attributes.length; i++) {\n            let attribute = this.attributes[i];\n            size += attribute.numElements;\n        }\n        return size;\n    }\n    setVertices(vertices) {\n        this.dirtyVertices = true;\n        if (vertices.length > this.vertices.length)\n            throw Error(\"Mesh can't store more than \" + this.maxVertices() + \" vertices\");\n        this.vertices.set(vertices, 0);\n        this.verticesLength = vertices.length;\n    }\n    setIndices(indices) {\n        this.dirtyIndices = true;\n        if (indices.length > this.indices.length)\n            throw Error(\"Mesh can't store more than \" + this.maxIndices() + \" indices\");\n        this.indices.set(indices, 0);\n        this.indicesLength = indices.length;\n    }\n    draw(shader, primitiveType) {\n        this.drawWithOffset(shader, primitiveType, 0, this.indicesLength > 0 ? this.indicesLength : this.verticesLength / this.elementsPerVertex);\n    }\n    drawWithOffset(shader, primitiveType, offset, count) {\n        let gl = this.context.gl;\n        if (this.dirtyVertices || this.dirtyIndices)\n            this.update();\n        this.bind(shader);\n        if (this.indicesLength > 0) {\n            gl.drawElements(primitiveType, count, gl.UNSIGNED_SHORT, offset * 2);\n        }\n        else {\n            gl.drawArrays(primitiveType, offset, count);\n        }\n        this.unbind(shader);\n    }\n    bind(shader) {\n        let gl = this.context.gl;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.verticesBuffer);\n        let offset = 0;\n        for (let i = 0; i < this.attributes.length; i++) {\n            let attrib = this.attributes[i];\n            let location = shader.getAttributeLocation(attrib.name);\n            gl.enableVertexAttribArray(location);\n            gl.vertexAttribPointer(location, attrib.numElements, gl.FLOAT, false, this.elementsPerVertex * 4, offset * 4);\n            offset += attrib.numElements;\n        }\n        if (this.indicesLength > 0)\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n    }\n    unbind(shader) {\n        let gl = this.context.gl;\n        for (let i = 0; i < this.attributes.length; i++) {\n            let attrib = this.attributes[i];\n            let location = shader.getAttributeLocation(attrib.name);\n            gl.disableVertexAttribArray(location);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        if (this.indicesLength > 0)\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    update() {\n        let gl = this.context.gl;\n        if (this.dirtyVertices) {\n            if (!this.verticesBuffer) {\n                this.verticesBuffer = gl.createBuffer();\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.verticesBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this.vertices.subarray(0, this.verticesLength), gl.DYNAMIC_DRAW);\n            this.dirtyVertices = false;\n        }\n        if (this.dirtyIndices) {\n            if (!this.indicesBuffer) {\n                this.indicesBuffer = gl.createBuffer();\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices.subarray(0, this.indicesLength), gl.DYNAMIC_DRAW);\n            this.dirtyIndices = false;\n        }\n    }\n    restore() {\n        this.verticesBuffer = null;\n        this.indicesBuffer = null;\n        this.update();\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        gl.deleteBuffer(this.verticesBuffer);\n        gl.deleteBuffer(this.indicesBuffer);\n    }\n}\nexport class VertexAttribute {\n    constructor(name, type, numElements) {\n        this.name = name;\n        this.type = type;\n        this.numElements = numElements;\n    }\n}\nexport class Position2Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.POSITION, VertexAttributeType.Float, 2);\n    }\n}\nexport class Position3Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.POSITION, VertexAttributeType.Float, 3);\n    }\n}\nexport class TexCoordAttribute extends VertexAttribute {\n    constructor(unit = 0) {\n        super(Shader.TEXCOORDS + (unit == 0 ? \"\" : unit), VertexAttributeType.Float, 2);\n    }\n}\nexport class ColorAttribute extends VertexAttribute {\n    constructor() {\n        super(Shader.COLOR, VertexAttributeType.Float, 4);\n    }\n}\nexport class Color2Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.COLOR2, VertexAttributeType.Float, 4);\n    }\n}\nexport var VertexAttributeType;\n(function (VertexAttributeType) {\n    VertexAttributeType[VertexAttributeType[\"Float\"] = 0] = \"Float\";\n})(VertexAttributeType || (VertexAttributeType = {}));\n//# sourceMappingURL=Mesh.js.map","//@ts-nocheck\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Mesh, Position2Attribute, ColorAttribute, TexCoordAttribute, Color2Attribute } from \"./Mesh\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class PolygonBatcher {\n    constructor(context, twoColorTint = true, maxVertices = 10920) {\n        this.isDrawing = false;\n        this.shader = null;\n        this.lastTexture = null;\n        this.verticesLength = 0;\n        this.indicesLength = 0;\n        if (maxVertices > 10920)\n            throw new Error(\"Can't have more than 10920 triangles per batch: \" + maxVertices);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        let attributes = twoColorTint ?\n            [new Position2Attribute(), new ColorAttribute(), new TexCoordAttribute(), new Color2Attribute()] :\n            [new Position2Attribute(), new ColorAttribute(), new TexCoordAttribute()];\n        this.mesh = new Mesh(context, attributes, maxVertices, maxVertices * 3);\n        let gl = this.context.gl;\n        this.srcColorBlend = gl.SRC_ALPHA;\n        this.srcAlphaBlend = gl.ONE;\n        this.dstBlend = gl.ONE_MINUS_SRC_ALPHA;\n    }\n    begin(shader) {\n        if (this.isDrawing)\n            throw new Error(\"PolygonBatch is already drawing. Call PolygonBatch.end() before calling PolygonBatch.begin()\");\n        this.drawCalls = 0;\n        this.shader = shader;\n        this.lastTexture = null;\n        this.isDrawing = true;\n        let gl = this.context.gl;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(this.srcColorBlend, this.dstBlend, this.srcAlphaBlend, this.dstBlend);\n    }\n    setBlendMode(srcColorBlend, srcAlphaBlend, dstBlend) {\n        if (this.srcColorBlend == srcColorBlend && this.srcAlphaBlend == srcAlphaBlend && this.dstBlend == dstBlend)\n            return;\n        this.srcColorBlend = srcColorBlend;\n        this.srcAlphaBlend = srcAlphaBlend;\n        this.dstBlend = dstBlend;\n        if (this.isDrawing) {\n            this.flush();\n            let gl = this.context.gl;\n            gl.blendFuncSeparate(srcColorBlend, dstBlend, srcAlphaBlend, dstBlend);\n        }\n    }\n    draw(texture, vertices, indices) {\n        if (texture != this.lastTexture) {\n            this.flush();\n            this.lastTexture = texture;\n        }\n        else if (this.verticesLength + vertices.length > this.mesh.getVertices().length ||\n            this.indicesLength + indices.length > this.mesh.getIndices().length) {\n            this.flush();\n        }\n        let indexStart = this.mesh.numVertices();\n        this.mesh.getVertices().set(vertices, this.verticesLength);\n        this.verticesLength += vertices.length;\n        this.mesh.setVerticesLength(this.verticesLength);\n        let indicesArray = this.mesh.getIndices();\n        for (let i = this.indicesLength, j = 0; j < indices.length; i++, j++)\n            indicesArray[i] = indices[j] + indexStart;\n        this.indicesLength += indices.length;\n        this.mesh.setIndicesLength(this.indicesLength);\n    }\n    flush() {\n        if (this.verticesLength == 0)\n            return;\n        this.lastTexture.bind();\n        this.mesh.draw(this.shader, this.context.gl.TRIANGLES);\n        this.verticesLength = 0;\n        this.indicesLength = 0;\n        this.mesh.setVerticesLength(0);\n        this.mesh.setIndicesLength(0);\n        this.drawCalls++;\n    }\n    end() {\n        if (!this.isDrawing)\n            throw new Error(\"PolygonBatch is not drawing. Call PolygonBatch.begin() before calling PolygonBatch.end()\");\n        if (this.verticesLength > 0 || this.indicesLength > 0)\n            this.flush();\n        this.shader = null;\n        this.lastTexture = null;\n        this.isDrawing = false;\n        let gl = this.context.gl;\n        gl.disable(gl.BLEND);\n    }\n    getDrawCalls() {\n        return this.drawCalls;\n    }\n    dispose() {\n        this.mesh.dispose();\n    }\n}\n//# sourceMappingURL=PolygonBatcher.js.map","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Matrix4 } from \"./Matrix4\";\nimport { Vector3 } from \"./Vector3\";\nexport class OrthoCamera {\n    constructor(viewportWidth, viewportHeight) {\n        this.position = new Vector3(0, 0, 0);\n        this.direction = new Vector3(0, 0, -1);\n        this.up = new Vector3(0, 1, 0);\n        this.near = 0;\n        this.far = 100;\n        this.zoom = 1;\n        this.viewportWidth = 0;\n        this.viewportHeight = 0;\n        this.projectionView = new Matrix4();\n        this.inverseProjectionView = new Matrix4();\n        this.projection = new Matrix4();\n        this.view = new Matrix4();\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n        this.update();\n    }\n    update() {\n        let projection = this.projection;\n        let view = this.view;\n        let projectionView = this.projectionView;\n        let inverseProjectionView = this.inverseProjectionView;\n        let zoom = this.zoom, viewportWidth = this.viewportWidth, viewportHeight = this.viewportHeight;\n        projection.ortho(zoom * (-viewportWidth / 2), zoom * (viewportWidth / 2), zoom * (-viewportHeight / 2), zoom * (viewportHeight / 2), this.near, this.far);\n        view.lookAt(this.position, this.direction, this.up);\n        projectionView.set(projection.values);\n        projectionView.multiply(view);\n        inverseProjectionView.set(projectionView.values).invert();\n    }\n    screenToWorld(screenCoords, screenWidth, screenHeight) {\n        let x = screenCoords.x, y = screenHeight - screenCoords.y - 1;\n        screenCoords.x = (2 * x) / screenWidth - 1;\n        screenCoords.y = (2 * y) / screenHeight - 1;\n        screenCoords.z = (2 * screenCoords.z) - 1;\n        screenCoords.project(this.inverseProjectionView);\n        return screenCoords;\n    }\n    worldToScreen(worldCoords, screenWidth, screenHeight) {\n        worldCoords.project(this.projectionView);\n        worldCoords.x = screenWidth * (worldCoords.x + 1) / 2;\n        worldCoords.y = screenHeight * (worldCoords.y + 1) / 2;\n        worldCoords.z = (worldCoords.z + 1) / 2;\n        return worldCoords;\n    }\n    setViewport(viewportWidth, viewportHeight) {\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n    }\n}\n//# sourceMappingURL=Camera.js.map","//@ts-nocheck\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Vector2, MathUtils } from \"@esotericsoftware/spine-core\";\nimport { Mesh, Position2Attribute, ColorAttribute } from \"./Mesh\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class ShapeRenderer {\n    constructor(context, maxVertices = 10920) {\n        this.isDrawing = false;\n        this.shapeType = ShapeType.Filled;\n        this.color = new Color(1, 1, 1, 1);\n        this.vertexIndex = 0;\n        this.tmp = new Vector2();\n        if (maxVertices > 10920)\n            throw new Error(\"Can't have more than 10920 triangles per batch: \" + maxVertices);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.mesh = new Mesh(context, [new Position2Attribute(), new ColorAttribute()], maxVertices, 0);\n        let gl = this.context.gl;\n        this.srcColorBlend = gl.SRC_ALPHA;\n        this.srcAlphaBlend = gl.ONE;\n        this.dstBlend = gl.ONE_MINUS_SRC_ALPHA;\n    }\n    begin(shader) {\n        if (this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has already been called\");\n        this.shader = shader;\n        this.vertexIndex = 0;\n        this.isDrawing = true;\n        let gl = this.context.gl;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(this.srcColorBlend, this.dstBlend, this.srcAlphaBlend, this.dstBlend);\n    }\n    setBlendMode(srcColorBlend, srcAlphaBlend, dstBlend) {\n        this.srcColorBlend = srcColorBlend;\n        this.srcAlphaBlend = srcAlphaBlend;\n        this.dstBlend = dstBlend;\n        if (this.isDrawing) {\n            this.flush();\n            let gl = this.context.gl;\n            gl.blendFuncSeparate(srcColorBlend, dstBlend, srcAlphaBlend, dstBlend);\n        }\n    }\n    setColor(color) {\n        this.color.setFromColor(color);\n    }\n    setColorWith(r, g, b, a) {\n        this.color.set(r, g, b, a);\n    }\n    point(x, y, color = null) {\n        this.check(ShapeType.Point, 1);\n        if (color === null)\n            color = this.color;\n        this.vertex(x, y, color);\n    }\n    line(x, y, x2, y2, color = null) {\n        this.check(ShapeType.Line, 2);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (color === null)\n            color = this.color;\n        this.vertex(x, y, color);\n        this.vertex(x2, y2, color);\n    }\n    triangle(filled, x, y, x2, y2, x3, y3, color = null, color2 = null, color3 = null) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 3);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (color === null)\n            color = this.color;\n        if (color2 === null)\n            color2 = this.color;\n        if (color3 === null)\n            color3 = this.color;\n        if (filled) {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n        }\n        else {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x2, y2, color);\n            this.vertex(x3, y3, color2);\n            this.vertex(x3, y3, color);\n            this.vertex(x, y, color2);\n        }\n    }\n    quad(filled, x, y, x2, y2, x3, y3, x4, y4, color = null, color2 = null, color3 = null, color4 = null) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 3);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (color === null)\n            color = this.color;\n        if (color2 === null)\n            color2 = this.color;\n        if (color3 === null)\n            color3 = this.color;\n        if (color4 === null)\n            color4 = this.color;\n        if (filled) {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n            this.vertex(x3, y3, color3);\n            this.vertex(x4, y4, color4);\n            this.vertex(x, y, color);\n        }\n        else {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n            this.vertex(x3, y3, color3);\n            this.vertex(x4, y4, color4);\n            this.vertex(x4, y4, color4);\n            this.vertex(x, y, color);\n        }\n    }\n    rect(filled, x, y, width, height, color = null) {\n        this.quad(filled, x, y, x + width, y, x + width, y + height, x, y + height, color, color, color, color);\n    }\n    rectLine(filled, x1, y1, x2, y2, width, color = null) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 8);\n        if (color === null)\n            color = this.color;\n        let t = this.tmp.set(y2 - y1, x1 - x2);\n        t.normalize();\n        width *= 0.5;\n        let tx = t.x * width;\n        let ty = t.y * width;\n        if (!filled) {\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n        }\n        else {\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n        }\n    }\n    x(x, y, size) {\n        this.line(x - size, y - size, x + size, y + size);\n        this.line(x - size, y + size, x + size, y - size);\n    }\n    polygon(polygonVertices, offset, count, color = null) {\n        if (count < 3)\n            throw new Error(\"Polygon must contain at least 3 vertices\");\n        this.check(ShapeType.Line, count * 2);\n        if (color === null)\n            color = this.color;\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        offset <<= 1;\n        count <<= 1;\n        let firstX = polygonVertices[offset];\n        let firstY = polygonVertices[offset + 1];\n        let last = offset + count;\n        for (let i = offset, n = offset + count - 2; i < n; i += 2) {\n            let x1 = polygonVertices[i];\n            let y1 = polygonVertices[i + 1];\n            let x2 = 0;\n            let y2 = 0;\n            if (i + 2 >= last) {\n                x2 = firstX;\n                y2 = firstY;\n            }\n            else {\n                x2 = polygonVertices[i + 2];\n                y2 = polygonVertices[i + 3];\n            }\n            this.vertex(x1, y1, color);\n            this.vertex(x2, y2, color);\n        }\n    }\n    circle(filled, x, y, radius, color = null, segments = 0) {\n        if (segments === 0)\n            segments = Math.max(1, (6 * MathUtils.cbrt(radius)) | 0);\n        if (segments <= 0)\n            throw new Error(\"segments must be > 0.\");\n        if (color === null)\n            color = this.color;\n        let angle = 2 * MathUtils.PI / segments;\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        let cx = radius, cy = 0;\n        if (!filled) {\n            this.check(ShapeType.Line, segments * 2 + 2);\n            for (let i = 0; i < segments; i++) {\n                this.vertex(x + cx, y + cy, color);\n                let temp = cx;\n                cx = cos * cx - sin * cy;\n                cy = sin * temp + cos * cy;\n                this.vertex(x + cx, y + cy, color);\n            }\n            // Ensure the last segment is identical to the first.\n            this.vertex(x + cx, y + cy, color);\n        }\n        else {\n            this.check(ShapeType.Filled, segments * 3 + 3);\n            segments--;\n            for (let i = 0; i < segments; i++) {\n                this.vertex(x, y, color);\n                this.vertex(x + cx, y + cy, color);\n                let temp = cx;\n                cx = cos * cx - sin * cy;\n                cy = sin * temp + cos * cy;\n                this.vertex(x + cx, y + cy, color);\n            }\n            // Ensure the last segment is identical to the first.\n            this.vertex(x, y, color);\n            this.vertex(x + cx, y + cy, color);\n        }\n        let temp = cx;\n        cx = radius;\n        cy = 0;\n        this.vertex(x + cx, y + cy, color);\n    }\n    curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color = null) {\n        this.check(ShapeType.Line, segments * 2 + 2);\n        if (color === null)\n            color = this.color;\n        // Algorithm from: http://www.antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION\n        let subdiv_step = 1 / segments;\n        let subdiv_step2 = subdiv_step * subdiv_step;\n        let subdiv_step3 = subdiv_step * subdiv_step * subdiv_step;\n        let pre1 = 3 * subdiv_step;\n        let pre2 = 3 * subdiv_step2;\n        let pre4 = 6 * subdiv_step2;\n        let pre5 = 6 * subdiv_step3;\n        let tmp1x = x1 - cx1 * 2 + cx2;\n        let tmp1y = y1 - cy1 * 2 + cy2;\n        let tmp2x = (cx1 - cx2) * 3 - x1 + x2;\n        let tmp2y = (cy1 - cy2) * 3 - y1 + y2;\n        let fx = x1;\n        let fy = y1;\n        let dfx = (cx1 - x1) * pre1 + tmp1x * pre2 + tmp2x * subdiv_step3;\n        let dfy = (cy1 - y1) * pre1 + tmp1y * pre2 + tmp2y * subdiv_step3;\n        let ddfx = tmp1x * pre4 + tmp2x * pre5;\n        let ddfy = tmp1y * pre4 + tmp2y * pre5;\n        let dddfx = tmp2x * pre5;\n        let dddfy = tmp2y * pre5;\n        while (segments-- > 0) {\n            this.vertex(fx, fy, color);\n            fx += dfx;\n            fy += dfy;\n            dfx += ddfx;\n            dfy += ddfy;\n            ddfx += dddfx;\n            ddfy += dddfy;\n            this.vertex(fx, fy, color);\n        }\n        this.vertex(fx, fy, color);\n        this.vertex(x2, y2, color);\n    }\n    vertex(x, y, color) {\n        let idx = this.vertexIndex;\n        let vertices = this.mesh.getVertices();\n        vertices[idx++] = x;\n        vertices[idx++] = y;\n        vertices[idx++] = color.r;\n        vertices[idx++] = color.g;\n        vertices[idx++] = color.b;\n        vertices[idx++] = color.a;\n        this.vertexIndex = idx;\n    }\n    end() {\n        if (!this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has not been called\");\n        this.flush();\n        let gl = this.context.gl;\n        gl.disable(gl.BLEND);\n        this.isDrawing = false;\n    }\n    flush() {\n        if (this.vertexIndex == 0)\n            return;\n        this.mesh.setVerticesLength(this.vertexIndex);\n        this.mesh.draw(this.shader, this.shapeType);\n        this.vertexIndex = 0;\n    }\n    check(shapeType, numVertices) {\n        if (!this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has not been called\");\n        if (this.shapeType == shapeType) {\n            if (this.mesh.maxVertices() - this.mesh.numVertices() < numVertices)\n                this.flush();\n            else\n                return;\n        }\n        else {\n            this.flush();\n            this.shapeType = shapeType;\n        }\n    }\n    dispose() {\n        this.mesh.dispose();\n    }\n}\nexport var ShapeType;\n(function (ShapeType) {\n    ShapeType[ShapeType[\"Point\"] = 0] = \"Point\";\n    ShapeType[ShapeType[\"Line\"] = 1] = \"Line\";\n    ShapeType[ShapeType[\"Filled\"] = 4] = \"Filled\";\n})(ShapeType || (ShapeType = {}));\n//# sourceMappingURL=ShapeRenderer.js.map","//@ts-nocheck\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, SkeletonBounds, Utils, RegionAttachment, MeshAttachment, PathAttachment, ClippingAttachment } from \"@esotericsoftware/spine-core\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class SkeletonDebugRenderer {\n    constructor(context) {\n        this.boneLineColor = new Color(1, 0, 0, 1);\n        this.boneOriginColor = new Color(0, 1, 0, 1);\n        this.attachmentLineColor = new Color(0, 0, 1, 0.5);\n        this.triangleLineColor = new Color(1, 0.64, 0, 0.5);\n        this.pathColor = new Color().setFromString(\"FF7F00\");\n        this.clipColor = new Color(0.8, 0, 0, 2);\n        this.aabbColor = new Color(0, 1, 0, 0.5);\n        this.drawBones = true;\n        this.drawRegionAttachments = true;\n        this.drawBoundingBoxes = true;\n        this.drawMeshHull = true;\n        this.drawMeshTriangles = true;\n        this.drawPaths = true;\n        this.drawSkeletonXY = false;\n        this.drawClipping = true;\n        this.premultipliedAlpha = false;\n        this.scale = 1;\n        this.boneWidth = 2;\n        this.bounds = new SkeletonBounds();\n        this.temp = new Array();\n        this.vertices = Utils.newFloatArray(2 * 1024);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n    }\n    draw(shapes, skeleton, ignoredBones = null) {\n        let skeletonX = skeleton.x;\n        let skeletonY = skeleton.y;\n        let gl = this.context.gl;\n        let srcFunc = this.premultipliedAlpha ? gl.ONE : gl.SRC_ALPHA;\n        shapes.setBlendMode(srcFunc, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        let bones = skeleton.bones;\n        if (this.drawBones) {\n            shapes.setColor(this.boneLineColor);\n            for (let i = 0, n = bones.length; i < n; i++) {\n                let bone = bones[i];\n                if (ignoredBones && ignoredBones.indexOf(bone.data.name) > -1)\n                    continue;\n                if (!bone.parent)\n                    continue;\n                let x = skeletonX + bone.data.length * bone.a + bone.worldX;\n                let y = skeletonY + bone.data.length * bone.c + bone.worldY;\n                shapes.rectLine(true, skeletonX + bone.worldX, skeletonY + bone.worldY, x, y, this.boneWidth * this.scale);\n            }\n            if (this.drawSkeletonXY)\n                shapes.x(skeletonX, skeletonY, 4 * this.scale);\n        }\n        if (this.drawRegionAttachments) {\n            shapes.setColor(this.attachmentLineColor);\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                let attachment = slot.getAttachment();\n                if (attachment instanceof RegionAttachment) {\n                    let regionAttachment = attachment;\n                    let vertices = this.vertices;\n                    regionAttachment.computeWorldVertices(slot.bone, vertices, 0, 2);\n                    shapes.line(vertices[0], vertices[1], vertices[2], vertices[3]);\n                    shapes.line(vertices[2], vertices[3], vertices[4], vertices[5]);\n                    shapes.line(vertices[4], vertices[5], vertices[6], vertices[7]);\n                    shapes.line(vertices[6], vertices[7], vertices[0], vertices[1]);\n                }\n            }\n        }\n        if (this.drawMeshHull || this.drawMeshTriangles) {\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof MeshAttachment))\n                    continue;\n                let mesh = attachment;\n                let vertices = this.vertices;\n                mesh.computeWorldVertices(slot, 0, mesh.worldVerticesLength, vertices, 0, 2);\n                let triangles = mesh.triangles;\n                let hullLength = mesh.hullLength;\n                if (this.drawMeshTriangles) {\n                    shapes.setColor(this.triangleLineColor);\n                    for (let ii = 0, nn = triangles.length; ii < nn; ii += 3) {\n                        let v1 = triangles[ii] * 2, v2 = triangles[ii + 1] * 2, v3 = triangles[ii + 2] * 2;\n                        shapes.triangle(false, vertices[v1], vertices[v1 + 1], //\n                        vertices[v2], vertices[v2 + 1], //\n                        vertices[v3], vertices[v3 + 1] //\n                        );\n                    }\n                }\n                if (this.drawMeshHull && hullLength > 0) {\n                    shapes.setColor(this.attachmentLineColor);\n                    hullLength = (hullLength >> 1) * 2;\n                    let lastX = vertices[hullLength - 2], lastY = vertices[hullLength - 1];\n                    for (let ii = 0, nn = hullLength; ii < nn; ii += 2) {\n                        let x = vertices[ii], y = vertices[ii + 1];\n                        shapes.line(x, y, lastX, lastY);\n                        lastX = x;\n                        lastY = y;\n                    }\n                }\n            }\n        }\n        if (this.drawBoundingBoxes) {\n            let bounds = this.bounds;\n            bounds.update(skeleton, true);\n            shapes.setColor(this.aabbColor);\n            shapes.rect(false, bounds.minX, bounds.minY, bounds.getWidth(), bounds.getHeight());\n            let polygons = bounds.polygons;\n            let boxes = bounds.boundingBoxes;\n            for (let i = 0, n = polygons.length; i < n; i++) {\n                let polygon = polygons[i];\n                shapes.setColor(boxes[i].color);\n                shapes.polygon(polygon, 0, polygon.length);\n            }\n        }\n        if (this.drawPaths) {\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof PathAttachment))\n                    continue;\n                let path = attachment;\n                let nn = path.worldVerticesLength;\n                let world = this.temp = Utils.setArraySize(this.temp, nn, 0);\n                path.computeWorldVertices(slot, 0, nn, world, 0, 2);\n                let color = this.pathColor;\n                let x1 = world[2], y1 = world[3], x2 = 0, y2 = 0;\n                if (path.closed) {\n                    shapes.setColor(color);\n                    let cx1 = world[0], cy1 = world[1], cx2 = world[nn - 2], cy2 = world[nn - 1];\n                    x2 = world[nn - 4];\n                    y2 = world[nn - 3];\n                    shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, 32);\n                    shapes.setColor(SkeletonDebugRenderer.LIGHT_GRAY);\n                    shapes.line(x1, y1, cx1, cy1);\n                    shapes.line(x2, y2, cx2, cy2);\n                }\n                nn -= 4;\n                for (let ii = 4; ii < nn; ii += 6) {\n                    let cx1 = world[ii], cy1 = world[ii + 1], cx2 = world[ii + 2], cy2 = world[ii + 3];\n                    x2 = world[ii + 4];\n                    y2 = world[ii + 5];\n                    shapes.setColor(color);\n                    shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, 32);\n                    shapes.setColor(SkeletonDebugRenderer.LIGHT_GRAY);\n                    shapes.line(x1, y1, cx1, cy1);\n                    shapes.line(x2, y2, cx2, cy2);\n                    x1 = x2;\n                    y1 = y2;\n                }\n            }\n        }\n        if (this.drawBones) {\n            shapes.setColor(this.boneOriginColor);\n            for (let i = 0, n = bones.length; i < n; i++) {\n                let bone = bones[i];\n                if (ignoredBones && ignoredBones.indexOf(bone.data.name) > -1)\n                    continue;\n                shapes.circle(true, skeletonX + bone.worldX, skeletonY + bone.worldY, 3 * this.scale, SkeletonDebugRenderer.GREEN, 8);\n            }\n        }\n        if (this.drawClipping) {\n            let slots = skeleton.slots;\n            shapes.setColor(this.clipColor);\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof ClippingAttachment))\n                    continue;\n                let clip = attachment;\n                let nn = clip.worldVerticesLength;\n                let world = this.temp = Utils.setArraySize(this.temp, nn, 0);\n                clip.computeWorldVertices(slot, 0, nn, world, 0, 2);\n                for (let i = 0, n = world.length; i < n; i += 2) {\n                    let x = world[i];\n                    let y = world[i + 1];\n                    let x2 = world[(i + 2) % world.length];\n                    let y2 = world[(i + 3) % world.length];\n                    shapes.line(x, y, x2, y2);\n                }\n            }\n        }\n    }\n    dispose() {\n    }\n}\nSkeletonDebugRenderer.LIGHT_GRAY = new Color(192 / 255, 192 / 255, 192 / 255, 1);\nSkeletonDebugRenderer.GREEN = new Color(0, 1, 0, 1);\n//# sourceMappingURL=SkeletonDebugRenderer.js.map","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, SkeletonClipping, Vector2, Utils, RegionAttachment, MeshAttachment, ClippingAttachment } from \"@esotericsoftware/spine-core\";\nimport { WebGLBlendModeConverter } from \"./WebGL\";\nclass Renderable {\n    constructor(vertices, numVertices, numFloats) {\n        this.vertices = vertices;\n        this.numVertices = numVertices;\n        this.numFloats = numFloats;\n    }\n}\n;\nexport class SkeletonRenderer {\n    constructor(context, twoColorTint = true) {\n        this.premultipliedAlpha = false;\n        //@ts-ignore\n        this.vertexEffect = null;\n        this.tempColor = new Color();\n        this.tempColor2 = new Color();\n        this.vertexSize = 2 + 2 + 4;\n        this.twoColorTint = false;\n        //@ts-ignore\n        this.renderable = new Renderable(null, 0, 0);\n        this.clipper = new SkeletonClipping();\n        this.temp = new Vector2();\n        this.temp2 = new Vector2();\n        this.temp3 = new Color();\n        this.temp4 = new Color();\n        this.twoColorTint = twoColorTint;\n        if (twoColorTint)\n            this.vertexSize += 4;\n        this.vertices = Utils.newFloatArray(this.vertexSize * 1024);\n    }\n    draw(batcher, skeleton, slotRangeStart = -1, slotRangeEnd = -1) {\n        let clipper = this.clipper;\n        let premultipliedAlpha = this.premultipliedAlpha;\n        let twoColorTint = this.twoColorTint;\n        //@ts-ignore\n        let blendMode = null;\n        let tempPos = this.temp;\n        let tempUv = this.temp2;\n        let tempLight = this.temp3;\n        let tempDark = this.temp4;\n        let renderable = this.renderable;\n        //@ts-ignore\n        let uvs = null;\n        //@ts-ignore\n        let triangles = null;\n        let drawOrder = skeleton.drawOrder;\n        //@ts-ignore\n        let attachmentColor = null;\n        let skeletonColor = skeleton.color;\n        let vertexSize = twoColorTint ? 12 : 8;\n        let inRange = false;\n        if (slotRangeStart == -1)\n            inRange = true;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let clippedVertexSize = clipper.isClipping() ? 2 : vertexSize;\n            let slot = drawOrder[i];\n            if (!slot.bone.active) {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (slotRangeStart >= 0 && slotRangeStart == slot.data.index) {\n                inRange = true;\n            }\n            if (!inRange) {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (slotRangeEnd >= 0 && slotRangeEnd == slot.data.index) {\n                inRange = false;\n            }\n            let attachment = slot.getAttachment();\n            //@ts-ignore\n            let texture = null;\n            if (attachment instanceof RegionAttachment) {\n                let region = attachment;\n                renderable.vertices = this.vertices;\n                renderable.numVertices = 4;\n                renderable.numFloats = clippedVertexSize << 2;\n                region.computeWorldVertices(slot.bone, renderable.vertices, 0, clippedVertexSize);\n                triangles = SkeletonRenderer.QUAD_TRIANGLES;\n                uvs = region.uvs;\n                texture = region.region.renderObject.page.texture;\n                attachmentColor = region.color;\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                renderable.vertices = this.vertices;\n                renderable.numVertices = (mesh.worldVerticesLength >> 1);\n                renderable.numFloats = renderable.numVertices * clippedVertexSize;\n                if (renderable.numFloats > renderable.vertices.length) {\n                    renderable.vertices = this.vertices = Utils.newFloatArray(renderable.numFloats);\n                }\n                mesh.computeWorldVertices(slot, 0, mesh.worldVerticesLength, renderable.vertices, 0, clippedVertexSize);\n                triangles = mesh.triangles;\n                texture = mesh.region.renderObject.page.texture;\n                uvs = mesh.uvs;\n                attachmentColor = mesh.color;\n            }\n            else if (attachment instanceof ClippingAttachment) {\n                let clip = (attachment);\n                clipper.clipStart(slot, clip);\n                continue;\n            }\n            else {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (texture) {\n                let slotColor = slot.color;\n                let finalColor = this.tempColor;\n                finalColor.r = skeletonColor.r * slotColor.r * attachmentColor.r;\n                finalColor.g = skeletonColor.g * slotColor.g * attachmentColor.g;\n                finalColor.b = skeletonColor.b * slotColor.b * attachmentColor.b;\n                finalColor.a = skeletonColor.a * slotColor.a * attachmentColor.a;\n                if (premultipliedAlpha) {\n                    finalColor.r *= finalColor.a;\n                    finalColor.g *= finalColor.a;\n                    finalColor.b *= finalColor.a;\n                }\n                let darkColor = this.tempColor2;\n                if (!slot.darkColor)\n                    darkColor.set(0, 0, 0, 1.0);\n                else {\n                    if (premultipliedAlpha) {\n                        darkColor.r = slot.darkColor.r * finalColor.a;\n                        darkColor.g = slot.darkColor.g * finalColor.a;\n                        darkColor.b = slot.darkColor.b * finalColor.a;\n                    }\n                    else {\n                        darkColor.setFromColor(slot.darkColor);\n                    }\n                    darkColor.a = premultipliedAlpha ? 1.0 : 0.0;\n                }\n                let slotBlendMode = slot.data.blendMode;\n                if (slotBlendMode != blendMode) {\n                    blendMode = slotBlendMode;\n                    batcher.setBlendMode(WebGLBlendModeConverter.getSourceColorGLBlendMode(blendMode, premultipliedAlpha), WebGLBlendModeConverter.getSourceAlphaGLBlendMode(blendMode), WebGLBlendModeConverter.getDestGLBlendMode(blendMode));\n                }\n                if (clipper.isClipping()) {\n                    clipper.clipTriangles(renderable.vertices, renderable.numFloats, triangles, triangles.length, uvs, finalColor, darkColor, twoColorTint);\n                    let clippedVertices = new Float32Array(clipper.clippedVertices);\n                    let clippedTriangles = clipper.clippedTriangles;\n                    if (this.vertexEffect) {\n                        let vertexEffect = this.vertexEffect;\n                        let verts = clippedVertices;\n                        if (!twoColorTint) {\n                            for (let v = 0, n = clippedVertices.length; v < n; v += vertexSize) {\n                                tempPos.x = verts[v];\n                                tempPos.y = verts[v + 1];\n                                tempLight.set(verts[v + 2], verts[v + 3], verts[v + 4], verts[v + 5]);\n                                tempUv.x = verts[v + 6];\n                                tempUv.y = verts[v + 7];\n                                tempDark.set(0, 0, 0, 0);\n                                vertexEffect.transform(tempPos, tempUv, tempLight, tempDark);\n                                verts[v] = tempPos.x;\n                                verts[v + 1] = tempPos.y;\n                                verts[v + 2] = tempLight.r;\n                                verts[v + 3] = tempLight.g;\n                                verts[v + 4] = tempLight.b;\n                                verts[v + 5] = tempLight.a;\n                                verts[v + 6] = tempUv.x;\n                                verts[v + 7] = tempUv.y;\n                            }\n                        }\n                        else {\n                            for (let v = 0, n = clippedVertices.length; v < n; v += vertexSize) {\n                                tempPos.x = verts[v];\n                                tempPos.y = verts[v + 1];\n                                tempLight.set(verts[v + 2], verts[v + 3], verts[v + 4], verts[v + 5]);\n                                tempUv.x = verts[v + 6];\n                                tempUv.y = verts[v + 7];\n                                tempDark.set(verts[v + 8], verts[v + 9], verts[v + 10], verts[v + 11]);\n                                vertexEffect.transform(tempPos, tempUv, tempLight, tempDark);\n                                verts[v] = tempPos.x;\n                                verts[v + 1] = tempPos.y;\n                                verts[v + 2] = tempLight.r;\n                                verts[v + 3] = tempLight.g;\n                                verts[v + 4] = tempLight.b;\n                                verts[v + 5] = tempLight.a;\n                                verts[v + 6] = tempUv.x;\n                                verts[v + 7] = tempUv.y;\n                                verts[v + 8] = tempDark.r;\n                                verts[v + 9] = tempDark.g;\n                                verts[v + 10] = tempDark.b;\n                                verts[v + 11] = tempDark.a;\n                            }\n                        }\n                    }\n                    batcher.draw(texture, clippedVertices, clippedTriangles);\n                }\n                else {\n                    let verts = renderable.vertices;\n                    if (this.vertexEffect) {\n                        let vertexEffect = this.vertexEffect;\n                        if (!twoColorTint) {\n                            for (let v = 0, u = 0, n = renderable.numFloats; v < n; v += vertexSize, u += 2) {\n                                tempPos.x = verts[v];\n                                tempPos.y = verts[v + 1];\n                                tempUv.x = uvs[u];\n                                tempUv.y = uvs[u + 1];\n                                tempLight.setFromColor(finalColor);\n                                tempDark.set(0, 0, 0, 0);\n                                vertexEffect.transform(tempPos, tempUv, tempLight, tempDark);\n                                verts[v] = tempPos.x;\n                                verts[v + 1] = tempPos.y;\n                                verts[v + 2] = tempLight.r;\n                                verts[v + 3] = tempLight.g;\n                                verts[v + 4] = tempLight.b;\n                                verts[v + 5] = tempLight.a;\n                                verts[v + 6] = tempUv.x;\n                                verts[v + 7] = tempUv.y;\n                            }\n                        }\n                        else {\n                            for (let v = 0, u = 0, n = renderable.numFloats; v < n; v += vertexSize, u += 2) {\n                                tempPos.x = verts[v];\n                                tempPos.y = verts[v + 1];\n                                tempUv.x = uvs[u];\n                                tempUv.y = uvs[u + 1];\n                                tempLight.setFromColor(finalColor);\n                                tempDark.setFromColor(darkColor);\n                                vertexEffect.transform(tempPos, tempUv, tempLight, tempDark);\n                                verts[v] = tempPos.x;\n                                verts[v + 1] = tempPos.y;\n                                verts[v + 2] = tempLight.r;\n                                verts[v + 3] = tempLight.g;\n                                verts[v + 4] = tempLight.b;\n                                verts[v + 5] = tempLight.a;\n                                verts[v + 6] = tempUv.x;\n                                verts[v + 7] = tempUv.y;\n                                verts[v + 8] = tempDark.r;\n                                verts[v + 9] = tempDark.g;\n                                verts[v + 10] = tempDark.b;\n                                verts[v + 11] = tempDark.a;\n                            }\n                        }\n                    }\n                    else {\n                        if (!twoColorTint) {\n                            for (let v = 2, u = 0, n = renderable.numFloats; v < n; v += vertexSize, u += 2) {\n                                verts[v] = finalColor.r;\n                                verts[v + 1] = finalColor.g;\n                                verts[v + 2] = finalColor.b;\n                                verts[v + 3] = finalColor.a;\n                                verts[v + 4] = uvs[u];\n                                verts[v + 5] = uvs[u + 1];\n                            }\n                        }\n                        else {\n                            for (let v = 2, u = 0, n = renderable.numFloats; v < n; v += vertexSize, u += 2) {\n                                verts[v] = finalColor.r;\n                                verts[v + 1] = finalColor.g;\n                                verts[v + 2] = finalColor.b;\n                                verts[v + 3] = finalColor.a;\n                                verts[v + 4] = uvs[u];\n                                verts[v + 5] = uvs[u + 1];\n                                verts[v + 6] = darkColor.r;\n                                verts[v + 7] = darkColor.g;\n                                verts[v + 8] = darkColor.b;\n                                verts[v + 9] = darkColor.a;\n                            }\n                        }\n                    }\n                    let view = renderable.vertices.subarray(0, renderable.numFloats);\n                    batcher.draw(texture, view, triangles);\n                }\n            }\n            clipper.clipEndWithSlot(slot);\n        }\n        clipper.clipEnd();\n    }\n}\nSkeletonRenderer.QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\n//# sourceMappingURL=SkeletonRenderer.js.map","//@ts-nocheck\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, MathUtils } from \"@esotericsoftware/spine-core\";\nimport { OrthoCamera } from \"./Camera\";\nimport { PolygonBatcher } from \"./PolygonBatcher\";\nimport { Shader } from \"./Shader\";\nimport { ShapeRenderer } from \"./ShapeRenderer\";\nimport { SkeletonDebugRenderer } from \"./SkeletonDebugRenderer\";\nimport { SkeletonRenderer } from \"./SkeletonRenderer\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\n;\nconst quad = [\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n];\nconst QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\nconst WHITE = new Color(1, 1, 1, 1);\nexport class SceneRenderer {\n    constructor(canvas, context, twoColorTint = true, window) {\n        this.twoColorTint = false;\n        this.canvas = canvas;\n        this.window = window;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.twoColorTint = twoColorTint;\n        this.camera = new OrthoCamera(canvas.width, canvas.height);\n        this.batcherShader = twoColorTint ? Shader.newTwoColoredTextured(this.context) : Shader.newColoredTextured(this.context);\n        this.batcher = new PolygonBatcher(this.context, twoColorTint);\n        this.shapesShader = Shader.newColored(this.context);\n        this.shapes = new ShapeRenderer(this.context);\n        this.skeletonRenderer = new SkeletonRenderer(this.context, twoColorTint);\n        this.skeletonDebugRenderer = new SkeletonDebugRenderer(this.context);\n    }\n    dispose() {\n        this.batcher.dispose();\n        this.batcherShader.dispose();\n        this.shapes.dispose();\n        this.shapesShader.dispose();\n        this.skeletonDebugRenderer.dispose();\n    }\n    begin() {\n        this.camera.update();\n        this.enableRenderer(this.batcher);\n    }\n    drawSkeleton(skeleton, premultipliedAlpha = false, slotRangeStart = -1, slotRangeEnd = -1) {\n        this.enableRenderer(this.batcher);\n        this.skeletonRenderer.premultipliedAlpha = premultipliedAlpha;\n        this.skeletonRenderer.draw(this.batcher, skeleton, slotRangeStart, slotRangeEnd);\n    }\n    drawSkeletonDebug(skeleton, premultipliedAlpha = false, ignoredBones = null) {\n        this.enableRenderer(this.shapes);\n        this.skeletonDebugRenderer.premultipliedAlpha = premultipliedAlpha;\n        this.skeletonDebugRenderer.draw(this.shapes, skeleton, ignoredBones);\n    }\n    drawTexture(texture, x, y, width, height, color = null) {\n        this.enableRenderer(this.batcher);\n        if (color === null)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawTextureUV(texture, x, y, width, height, u, v, u2, v2, color = null) {\n        this.enableRenderer(this.batcher);\n        if (color === null)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u;\n        quad[i++] = v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u2;\n        quad[i++] = v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u2;\n        quad[i++] = v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u;\n        quad[i++] = v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawTextureRotated(texture, x, y, width, height, pivotX, pivotY, angle, color = null) {\n        this.enableRenderer(this.batcher);\n        if (color === null)\n            color = WHITE;\n        // bottom left and top right corner points relative to origin\n        let worldOriginX = x + pivotX;\n        let worldOriginY = y + pivotY;\n        let fx = -pivotX;\n        let fy = -pivotY;\n        let fx2 = width - pivotX;\n        let fy2 = height - pivotY;\n        // construct corner points, start from top left and go counter clockwise\n        let p1x = fx;\n        let p1y = fy;\n        let p2x = fx;\n        let p2y = fy2;\n        let p3x = fx2;\n        let p3y = fy2;\n        let p4x = fx2;\n        let p4y = fy;\n        let x1 = 0;\n        let y1 = 0;\n        let x2 = 0;\n        let y2 = 0;\n        let x3 = 0;\n        let y3 = 0;\n        let x4 = 0;\n        let y4 = 0;\n        // rotate\n        if (angle != 0) {\n            let cos = MathUtils.cosDeg(angle);\n            let sin = MathUtils.sinDeg(angle);\n            x1 = cos * p1x - sin * p1y;\n            y1 = sin * p1x + cos * p1y;\n            x4 = cos * p2x - sin * p2y;\n            y4 = sin * p2x + cos * p2y;\n            x3 = cos * p3x - sin * p3y;\n            y3 = sin * p3x + cos * p3y;\n            x2 = x3 + (x1 - x4);\n            y2 = y3 + (y1 - y4);\n        }\n        else {\n            x1 = p1x;\n            y1 = p1y;\n            x4 = p2x;\n            y4 = p2y;\n            x3 = p3x;\n            y3 = p3y;\n            x2 = p4x;\n            y2 = p4y;\n        }\n        x1 += worldOriginX;\n        y1 += worldOriginY;\n        x2 += worldOriginX;\n        y2 += worldOriginY;\n        x3 += worldOriginX;\n        y3 += worldOriginY;\n        x4 += worldOriginX;\n        y4 += worldOriginY;\n        var i = 0;\n        quad[i++] = x1;\n        quad[i++] = y1;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x2;\n        quad[i++] = y2;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x3;\n        quad[i++] = y3;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x4;\n        quad[i++] = y4;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawRegion(region, x, y, width, height, color = null) {\n        this.enableRenderer(this.batcher);\n        if (color === null)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u;\n        quad[i++] = region.v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u2;\n        quad[i++] = region.v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u2;\n        quad[i++] = region.v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u;\n        quad[i++] = region.v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(region.page.texture, quad, QUAD_TRIANGLES);\n    }\n    line(x, y, x2, y2, color = null, color2 = null) {\n        this.enableRenderer(this.shapes);\n        this.shapes.line(x, y, x2, y2, color);\n    }\n    triangle(filled, x, y, x2, y2, x3, y3, color = null, color2 = null, color3 = null) {\n        this.enableRenderer(this.shapes);\n        this.shapes.triangle(filled, x, y, x2, y2, x3, y3, color, color2, color3);\n    }\n    quad(filled, x, y, x2, y2, x3, y3, x4, y4, color = null, color2 = null, color3 = null, color4 = null) {\n        this.enableRenderer(this.shapes);\n        this.shapes.quad(filled, x, y, x2, y2, x3, y3, x4, y4, color, color2, color3, color4);\n    }\n    rect(filled, x, y, width, height, color = null) {\n        this.enableRenderer(this.shapes);\n        this.shapes.rect(filled, x, y, width, height, color);\n    }\n    rectLine(filled, x1, y1, x2, y2, width, color = null) {\n        this.enableRenderer(this.shapes);\n        this.shapes.rectLine(filled, x1, y1, x2, y2, width, color);\n    }\n    polygon(polygonVertices, offset, count, color = null) {\n        this.enableRenderer(this.shapes);\n        this.shapes.polygon(polygonVertices, offset, count, color);\n    }\n    circle(filled, x, y, radius, color = null, segments = 0) {\n        this.enableRenderer(this.shapes);\n        this.shapes.circle(filled, x, y, radius, color, segments);\n    }\n    curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color = null) {\n        this.enableRenderer(this.shapes);\n        this.shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color);\n    }\n    end() {\n        if (this.activeRenderer === this.batcher)\n            this.batcher.end();\n        else if (this.activeRenderer === this.shapes)\n            this.shapes.end();\n        this.activeRenderer = null;\n    }\n    resize(resizeMode) {\n        let canvas = this.canvas;\n        var dpr = this.window.devicePixelRatio || 1;\n        var w = Math.round(canvas.clientWidth * dpr);\n        var h = Math.round(canvas.clientHeight * dpr);\n        if (canvas.width != w || canvas.height != h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n        this.context.gl.viewport(0, 0, canvas.width, canvas.height);\n        // Nothing to do for stretch, we simply apply the viewport size of the camera.\n        if (resizeMode === ResizeMode.Expand)\n            this.camera.setViewport(w, h);\n        else if (resizeMode === ResizeMode.Fit) {\n            let sourceWidth = canvas.width, sourceHeight = canvas.height;\n            let targetWidth = this.camera.viewportWidth, targetHeight = this.camera.viewportHeight;\n            let targetRatio = targetHeight / targetWidth;\n            let sourceRatio = sourceHeight / sourceWidth;\n            let scale = targetRatio < sourceRatio ? targetWidth / sourceWidth : targetHeight / sourceHeight;\n            this.camera.setViewport(sourceWidth * scale, sourceHeight * scale);\n        }\n        this.camera.update();\n    }\n    enableRenderer(renderer) {\n        if (this.activeRenderer === renderer)\n            return;\n        this.end();\n        if (renderer instanceof PolygonBatcher) {\n            this.batcherShader.bind();\n            this.batcherShader.setUniform4x4f(Shader.MVP_MATRIX, this.camera.projectionView.values);\n            this.batcherShader.setUniformi(\"u_texture\", 0);\n            this.batcher.begin(this.batcherShader);\n            this.activeRenderer = this.batcher;\n        }\n        else if (renderer instanceof ShapeRenderer) {\n            this.shapesShader.bind();\n            this.shapesShader.setUniform4x4f(Shader.MVP_MATRIX, this.camera.projectionView.values);\n            this.shapes.begin(this.shapesShader);\n            this.activeRenderer = this.shapes;\n        }\n        else\n            this.activeRenderer = this.skeletonDebugRenderer;\n    }\n}\nexport var ResizeMode;\n(function (ResizeMode) {\n    ResizeMode[ResizeMode[\"Stretch\"] = 0] = \"Stretch\";\n    ResizeMode[ResizeMode[\"Expand\"] = 1] = \"Expand\";\n    ResizeMode[ResizeMode[\"Fit\"] = 2] = \"Fit\";\n})(ResizeMode || (ResizeMode = {}));\n//# sourceMappingURL=SceneRenderer.js.map","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar doric = require('doric');\n\nvar GLErrors = {\n    1280: 'INVALID ENUM: An unacceptable value has been specified for an enumerated argument.',\n    1281: 'INVALID_VALUE: A numeric argument is out of range.',\n    1282: 'INVALID_OPERATION: The specified command is not allowed for the current state.',\n    1285: 'OUT_OF_MEMORY: Not enough memory is left to execute the command.',\n    1286: 'INVALID_FRAMEBUFFER_OPERATION: The currently bound framebuffer is not complete when trying to render to or to read from it.',\n    37442: 'CONTEXT_LOST_WEBGL: The WebGL context is lost.',\n};\n\nexports.GLLoggingOption = void 0;\n(function (GLLoggingOption) {\n    /**\n     * Disables logging entirely.\n     */\n    GLLoggingOption[GLLoggingOption[\"DISABLED\"] = 0] = \"DISABLED\";\n    /**\n     * Logs method calls, their parameters and results.\n     */\n    GLLoggingOption[GLLoggingOption[\"METHOD_CALLS\"] = 1] = \"METHOD_CALLS\";\n    /**\n     * Calls `gl.getError()` after each other method call and prints an error if any is returned.\n     * This option has a significant impact on the performance as this method is blocking.\n     */\n    GLLoggingOption[GLLoggingOption[\"GET_ERRORS\"] = 2] = \"GET_ERRORS\";\n    /**\n     * Resolves parameters of type `number` to their constant names.\n     */\n    GLLoggingOption[GLLoggingOption[\"RESOLVE_CONSTANTS\"] = 4] = \"RESOLVE_CONSTANTS\";\n    /**\n     * When this option is enabled, long strings will be truncated.\n     * It's useful if your shaders are really big and logging them significantly reduces performance.\n     */\n    GLLoggingOption[GLLoggingOption[\"TRUNCATE_STRINGS\"] = 8] = \"TRUNCATE_STRINGS\";\n    /**\n     * Enables all other options. It implies `GET_ERRORS` so be aware of the slowdown.\n     */\n    GLLoggingOption[GLLoggingOption[\"ALL\"] = 15] = \"ALL\";\n})(exports.GLLoggingOption || (exports.GLLoggingOption = {}));\n\n/**\n * Maximum length of the strings printed to the console.\n */\nconst MAX_STRING_LENGTH = 20;\n/**\n * Sets up `__dangleSetLogging` method providing some logging options useful when debugging GL calls.\n */\nfunction configureLogging(gl) {\n    // Enable/disable logging of all GL function calls\n    let loggingOption = exports.GLLoggingOption.DISABLED;\n    gl.__dangleSetLogging = (option) => {\n        // If boolean values are the same, just change the internal value,\n        // there is no need to wrap/unwrap functions in this case.\n        if (!loggingOption === !option) {\n            loggingOption = option;\n            return;\n        }\n        // Turn off logging.\n        if (!option || option === exports.GLLoggingOption.DISABLED) {\n            Object.entries(gl).forEach(([key, value]) => {\n                if (typeof value === 'function' && value.original) {\n                    gl[key] = value.original;\n                }\n            });\n            loggingOption = option;\n            return;\n        }\n        // Turn on logging.\n        Object.entries(gl).forEach(([key, originalValue]) => {\n            if (typeof originalValue !== 'function' || key === '__dangleSetLogging') {\n                return;\n            }\n            gl[key] = (...args) => {\n                if (loggingOption & exports.GLLoggingOption.METHOD_CALLS) {\n                    const params = args.map(arg => {\n                        // If the type is `number`, then try to find name of the constant that has such value,\n                        // so it's easier to read these logs. In some cases it might be misleading\n                        // if the parameter is for example a width or height, so the number is still logged.\n                        if (loggingOption & exports.GLLoggingOption.RESOLVE_CONSTANTS && typeof arg === 'number') {\n                            for (const prop in gl) {\n                                if (gl[prop] === arg) {\n                                    return `${arg} (${prop})`;\n                                }\n                            }\n                        }\n                        // Truncate strings so they don't produce too much output and don't block the bridge.\n                        // It mostly applies to shaders which might be very long...\n                        if (loggingOption & exports.GLLoggingOption.TRUNCATE_STRINGS && typeof arg === 'string') {\n                            if (arg.length > MAX_STRING_LENGTH) {\n                                const lastIndex = arg.lastIndexOf(' ', MAX_STRING_LENGTH);\n                                return arg.substr(0, lastIndex >= 0 ? lastIndex : MAX_STRING_LENGTH) + '...';\n                            }\n                        }\n                        // Just return the parameter as a string.\n                        return '' + arg;\n                    });\n                    console.log(`Dangle: ${key}(${params.join(', ')})`);\n                }\n                const result = originalValue.apply(gl, args);\n                if (loggingOption & exports.GLLoggingOption.METHOD_CALLS) {\n                    console.log(`Dangle:   = ${result}`);\n                }\n                if (loggingOption & exports.GLLoggingOption.GET_ERRORS && key !== 'getError') {\n                    // @ts-ignore We need to call into the original `getError`.\n                    const error = gl.getError.original.call(gl);\n                    if (error) { //  && error !== gl.NO_ERROR\n                        // `console.error` would cause a red screen, so let's just log with red color.\n                        console.log(`Dangle: Error ${GLErrors[error]}`);\n                    }\n                }\n                return result;\n            };\n            gl[key].original = originalValue;\n        });\n        loggingOption = option;\n    };\n}\n\nconst global = new Function('return this')();\n// JavaScript WebGL types to wrap around native objects\nclass WebGLRenderingContext {\n}\nclass WebGL2RenderingContext extends WebGLRenderingContext {\n}\nconst idToObject = {};\nclass WebGLObject {\n    constructor(id) {\n        if (idToObject[id]) {\n            throw new Error(`WebGL object with underlying DangleObjectId '${id}' already exists!`);\n        }\n        this.id = id; // Native GL object id\n    }\n    toString() {\n        return `[${this.constructor.name} ${this.id}]`;\n    }\n}\nconst wrapObject = (type, id) => {\n    const found = idToObject[id];\n    if (found) {\n        return found;\n    }\n    return (idToObject[id] = new type(id));\n};\nconst objectId = (obj) => obj && obj.id;\nclass WebGLBuffer extends WebGLObject {\n}\nclass WebGLFramebuffer extends WebGLObject {\n}\nclass WebGLProgram extends WebGLObject {\n}\nclass WebGLRenderbuffer extends WebGLObject {\n}\nclass WebGLShader extends WebGLObject {\n}\nclass WebGLTexture extends WebGLObject {\n}\nclass WebGLUniformLocation {\n    constructor(id) {\n        this.id = id; // Native GL object id\n    }\n    toString() {\n        return `[${this.constructor.name} ${this.id}]`;\n    }\n}\nclass WebGLActiveInfo {\n    constructor(obj) {\n        Object.assign(this, obj);\n    }\n    toString() {\n        return `[${this.constructor.name} ${JSON.stringify(this)}]`;\n    }\n}\nclass WebGLShaderPrecisionFormat {\n    constructor(obj) {\n        Object.assign(this, obj);\n    }\n    toString() {\n        return `[${this.constructor.name} ${JSON.stringify(this)}]`;\n    }\n}\n// WebGL2 classes\nclass WebGLQuery extends WebGLObject {\n}\nclass WebGLSampler extends WebGLObject {\n}\nclass WebGLSync extends WebGLObject {\n}\nclass WebGLTransformFeedback extends WebGLObject {\n}\nclass WebGLVertexArrayObject extends WebGLObject {\n}\n// Many functions need wrapping/unwrapping of arguments and return value. We handle each case\n// specifically so we can write the tightest code for better performance.\nconst wrapMethods = gl => {\n    const wrap = (methodNames, wrapper) => (Array.isArray(methodNames) ? methodNames : [methodNames]).forEach(methodName => (gl[methodName] = wrapper(gl[methodName])));\n    // We can be slow in `gl.getParameter(...)` since it's a blocking call anyways\n    const getParameterTypes = {\n        [gl.ARRAY_BUFFER_BINDING]: WebGLBuffer,\n        [gl.COPY_READ_BUFFER_BINDING]: WebGLBuffer,\n        [gl.COPY_WRITE_BUFFER_BINDING]: WebGLBuffer,\n        [gl.CURRENT_PROGRAM]: WebGLProgram,\n        [gl.DRAW_FRAMEBUFFER_BINDING]: WebGLFramebuffer,\n        [gl.ELEMENT_ARRAY_BUFFER_BINDING]: WebGLBuffer,\n        [gl.READ_FRAMEBUFFER_BINDING]: WebGLFramebuffer,\n        [gl.RENDERBUFFER_BINDING]: WebGLRenderbuffer,\n        [gl.SAMPLER_BINDING]: WebGLSampler,\n        [gl.TEXTURE_BINDING_2D_ARRAY]: WebGLTexture,\n        [gl.TEXTURE_BINDING_2D]: WebGLTexture,\n        [gl.TEXTURE_BINDING_3D]: WebGLTexture,\n        [gl.TEXTURE_BINDING_CUBE_MAP]: WebGLTexture,\n        [gl.TRANSFORM_FEEDBACK_BINDING]: WebGLTransformFeedback,\n        [gl.TRANSFORM_FEEDBACK_BUFFER_BINDING]: WebGLBuffer,\n        [gl.UNIFORM_BUFFER_BINDING]: WebGLBuffer,\n        [gl.VERTEX_ARRAY_BINDING]: WebGLVertexArrayObject,\n    };\n    wrap('getParameter', orig => pname => {\n        let ret = Reflect.apply(orig, gl, [pname]);\n        if (pname === gl.VERSION) {\n            // Wrap native version name\n            ret = `WebGL 2.0 (Expo-${\"Dangle\"}-${'1.0.0'}) (${ret})`;\n        }\n        const type = getParameterTypes[pname];\n        return type ? wrapObject(type, ret) : ret;\n    });\n    // Buffers\n    wrap('bindBuffer', orig => (target, buffer) => Reflect.apply(orig, gl, [target, buffer && buffer.id]));\n    wrap('createBuffer', orig => () => wrapObject(WebGLBuffer, Reflect.apply(orig, gl, [])));\n    wrap('deleteBuffer', orig => buffer => Reflect.apply(orig, gl, [buffer && buffer.id]));\n    wrap('isBuffer', orig => buffer => buffer instanceof WebGLBuffer && Reflect.apply(orig, gl, [buffer.id]));\n    // Framebuffers\n    wrap('bindFramebuffer', orig => (target, framebuffer) => Reflect.apply(orig, gl, [target, framebuffer && framebuffer.id]));\n    wrap('createFramebuffer', orig => () => wrapObject(WebGLFramebuffer, Reflect.apply(orig, gl, [])));\n    wrap('deleteFramebuffer', orig => framebuffer => Reflect.apply(orig, gl, [framebuffer && framebuffer.id]));\n    wrap('framebufferRenderbuffer', orig => (target, attachment, rbtarget, rb) => Reflect.apply(orig, gl, [target, attachment, rbtarget, rb && rb.id]));\n    wrap('framebufferTexture2D', orig => (target, attachment, textarget, tex, level) => Reflect.apply(orig, gl, [target, attachment, textarget, tex && tex.id, level]));\n    wrap('isFramebuffer', orig => framebuffer => framebuffer instanceof WebGLFramebuffer && Reflect.apply(orig, gl, [framebuffer.id]));\n    wrap('framebufferTextureLayer', orig => (target, attachment, texture, level, layer) => {\n        return Reflect.apply(orig, gl, [target, attachment, objectId(texture), level, layer]);\n    });\n    // Renderbuffers\n    wrap('bindRenderbuffer', orig => (target, renderbuffer) => Reflect.apply(orig, gl, [target, renderbuffer && renderbuffer.id]));\n    wrap('createRenderbuffer', orig => () => wrapObject(WebGLRenderbuffer, Reflect.apply(orig, gl, [])));\n    wrap('deleteRenderbuffer', orig => renderbuffer => Reflect.apply(orig, gl, [renderbuffer && renderbuffer.id]));\n    wrap('isRenderbuffer', orig => renderbuffer => renderbuffer instanceof WebGLRenderbuffer && Reflect.apply(orig, gl, [renderbuffer.id]));\n    // Textures\n    wrap('bindTexture', orig => (target, texture) => Reflect.apply(orig, gl, [target, texture && texture.id]));\n    wrap('createTexture', orig => () => wrapObject(WebGLTexture, Reflect.apply(orig, gl, [])));\n    wrap('deleteTexture', orig => texture => Reflect.apply(orig, gl, [texture && texture.id]));\n    wrap('isTexture', orig => texture => texture instanceof WebGLTexture && Reflect.apply(orig, gl, [texture.id]));\n    // Programs and shaders\n    wrap('attachShader', orig => (program, shader) => Reflect.apply(orig, gl, [program && program.id, shader && shader.id]));\n    wrap('bindAttribLocation', orig => (program, index, name) => Reflect.apply(orig, gl, [program && program.id, index, name]));\n    wrap('compileShader', orig => shader => Reflect.apply(orig, gl, [shader && shader.id]));\n    wrap('createProgram', orig => () => wrapObject(WebGLProgram, Reflect.apply(orig, gl, [])));\n    wrap('createShader', orig => type => wrapObject(WebGLShader, Reflect.apply(orig, gl, [type])));\n    wrap('deleteProgram', orig => program => Reflect.apply(orig, gl, [program && program.id]));\n    wrap('deleteShader', orig => shader => Reflect.apply(orig, gl, [shader && shader.id]));\n    wrap('detachShader', orig => (program, shader) => Reflect.apply(orig, gl, [program && program.id, shader && shader.id]));\n    wrap('getAttachedShaders', orig => program => Reflect.apply(orig, gl, [program && program.id]).map(id => wrapObject(WebGLShader, id)));\n    wrap('getProgramParameter', orig => (program, pname) => Reflect.apply(orig, gl, [program && program.id, pname]));\n    wrap('getProgramInfoLog', orig => program => Reflect.apply(orig, gl, [program && program.id]));\n    wrap('getShaderParameter', orig => (shader, pname) => Reflect.apply(orig, gl, [shader && shader.id, pname]));\n    wrap('getShaderPrecisionFormat', orig => (shadertype, precisiontype) => new WebGLShaderPrecisionFormat(Reflect.apply(orig, gl, [shadertype, precisiontype])));\n    wrap('getShaderInfoLog', orig => shader => Reflect.apply(orig, gl, [shader && shader.id]));\n    wrap('getShaderSource', orig => shader => Reflect.apply(orig, gl, [shader && shader.id]));\n    wrap('linkProgram', orig => program => Reflect.apply(orig, gl, [program && program.id]));\n    wrap('shaderSource', orig => (shader, source) => Reflect.apply(orig, gl, [shader && shader.id, source]));\n    wrap('useProgram', orig => program => Reflect.apply(orig, gl, [program && program.id]));\n    wrap('validateProgram', orig => program => Reflect.apply(orig, gl, [program && program.id]));\n    wrap('isShader', orig => shader => shader instanceof WebGLShader && Reflect.apply(orig, gl, [shader.id]));\n    wrap('isProgram', orig => program => program instanceof WebGLProgram && Reflect.apply(orig, gl, [program.id]));\n    wrap('getFragDataLocation', orig => program => Reflect.apply(orig, gl, [objectId(program)]));\n    // Uniforms and attributes\n    wrap('getActiveAttrib', orig => (program, index) => new WebGLActiveInfo(Reflect.apply(orig, gl, [program && program.id, index])));\n    wrap('getActiveUniform', orig => (program, index) => new WebGLActiveInfo(Reflect.apply(orig, gl, [program && program.id, index])));\n    wrap('getAttribLocation', orig => (program, name) => Reflect.apply(orig, gl, [program && program.id, name]));\n    wrap('getUniform', orig => (program, location) => Reflect.apply(orig, gl, [program && program.id, location && location.id]));\n    wrap('getUniformLocation', orig => (program, name) => new WebGLUniformLocation(Reflect.apply(orig, gl, [program && program.id, name])));\n    wrap(['uniform1f', 'uniform1i', 'uniform1ui'], orig => (loc, x) => Reflect.apply(orig, gl, [objectId(loc), x]));\n    wrap(['uniform2f', 'uniform2i', 'uniform2ui'], orig => (loc, x, y) => Reflect.apply(orig, gl, [objectId(loc), x, y]));\n    wrap(['uniform3f', 'uniform3i', 'uniform3ui'], orig => (loc, x, y, z) => Reflect.apply(orig, gl, [objectId(loc), x, y, z]));\n    wrap(['uniform4f', 'uniform4i', 'uniform4ui'], orig => (loc, x, y, z, w) => Reflect.apply(orig, gl, [objectId(loc), x, y, z, w]));\n    wrap(['uniform1fv', 'uniform2fv', 'uniform3fv', 'uniform4fv'], orig => (loc, val) => Reflect.apply(orig, gl, [objectId(loc), new Float32Array(val)]));\n    wrap(['uniform1iv', 'uniform2iv', 'uniform3iv', 'uniform4iv'], orig => (loc, val) => Reflect.apply(orig, gl, [objectId(loc), new Int32Array(val)]));\n    wrap(['uniform1uiv', 'uniform2uiv', 'uniform3uiv', 'uniform4uiv'], orig => (loc, val) => Reflect.apply(orig, gl, [objectId(loc), new Uint32Array(val)]));\n    wrap([\n        'uniformMatrix2fv',\n        'uniformMatrix3fv',\n        'uniformMatrix4fv',\n        'uniformMatrix3x2fv',\n        'uniformMatrix4x2fv',\n        'uniformMatrix2x3fv',\n        'uniformMatrix4x3fv',\n        'uniformMatrix2x4fv',\n        'uniformMatrix3x4fv',\n    ], orig => (loc, transpose, val) => Reflect.apply(orig, gl, [loc && loc.id, transpose, new Float32Array(val)]));\n    wrap(['vertexAttrib1fv', 'vertexAttrib2fv', 'vertexAttrib3fv', 'vertexAttrib4fv'], orig => (index, val) => Reflect.apply(orig, gl, [index, new Float32Array(val)]));\n    wrap('vertexAttribI4iv', orig => (index, val) => Reflect.apply(orig, gl, [index, new Int32Array(val)]));\n    wrap('vertexAttribI4uiv', orig => (index, val) => Reflect.apply(orig, gl, [index, new Uint32Array(val)]));\n    // Query objects\n    wrap('createQuery', orig => () => wrapObject(WebGLQuery, Reflect.apply(orig, gl, [])));\n    wrap('deleteQuery', orig => query => Reflect.apply(orig, gl, [objectId(query)]));\n    wrap('beginQuery', orig => (target, query) => Reflect.apply(orig, gl, [target, objectId(query)]));\n    wrap('getQuery', orig => (target, pname) => {\n        const id = Reflect.apply(orig, gl, [target, pname]);\n        return id ? wrapObject(WebGLQuery, id) : id;\n    });\n    wrap('getQueryParameter', orig => (query, pname) => Reflect.apply(orig, gl, [objectId(query), pname]));\n    // Samplers\n    wrap('bindSampler', orig => (unit, sampler) => Reflect.apply(orig, gl, [unit, objectId(sampler)]));\n    wrap('createSampler', orig => () => wrapObject(WebGLSampler, Reflect.apply(orig, gl, [])));\n    wrap('deleteSampler', orig => sampler => Reflect.apply(orig, gl, [objectId(sampler)]));\n    wrap('isSampler', orig => sampler => sampler instanceof WebGLSampler && Reflect.apply(orig, gl, [sampler.id]));\n    wrap(['samplerParameteri', 'samplerParameterf'], orig => (sampler, pname, param) => {\n        return Reflect.apply(orig, gl, [objectId(sampler), pname, param]);\n    });\n    wrap('getSamplerParameter', orig => (sampler, pname) => {\n        return Reflect.apply(orig, gl, [objectId(sampler), pname]);\n    });\n    // Transform feedback\n    wrap('bindTransformFeedback', orig => (target, transformFeedback) => {\n        return Reflect.apply(orig, gl, [target, objectId(transformFeedback)]);\n    });\n    wrap('createTransformFeedback', orig => () => wrapObject(WebGLTransformFeedback, Reflect.apply(orig, gl, [])));\n    wrap('deleteTransformFeedback', orig => transformFeedback => {\n        return Reflect.apply(orig, gl, [objectId(transformFeedback)]);\n    });\n    wrap('transformFeedbackVaryings', orig => (program, varyings, bufferMode) => {\n        return Reflect.apply(orig, gl, [objectId(program), varyings, bufferMode]);\n    });\n    wrap('getTransformFeedbackVarying', orig => (program, index) => {\n        return new WebGLActiveInfo(Reflect.apply(orig, gl, [objectId(program), index]));\n    });\n    // Uniforms and attributes\n    wrap(['bindBufferBase', 'bindBufferRange'], orig => (target, index, buffer, ...rest) => {\n        return Reflect.apply(orig, gl, [target, index, objectId(buffer), ...rest]);\n    });\n    wrap('getUniformIndices', orig => (program, uniformNames) => {\n        // according to WebGL2 specs, it returns Array instead of Uint32Array\n        const uintArray = Reflect.apply(orig, gl, [objectId(program), uniformNames]);\n        return Array.from(uintArray);\n    });\n    wrap('getActiveUniforms', orig => (program, uniformIndices, pname) => {\n        // according to WebGL2 specs, it returns Array instead of Int32Array\n        const intArray = Reflect.apply(orig, gl, [objectId(program), new Uint32Array(uniformIndices), pname]);\n        const boolResult = pname === gl.UNIFORM_IS_ROW_MAJOR;\n        const arr = Array.from(intArray);\n        return boolResult ? arr.map(val => !!val) : arr;\n    });\n    wrap('getUniformBlockIndex', orig => (program, uniformBlockName) => Reflect.apply(orig, gl, [objectId(program), uniformBlockName]));\n    wrap('getActiveUniformBlockName', orig => (program, uniformBlockIndex) => Reflect.apply(orig, gl, [objectId(program), uniformBlockIndex]));\n    wrap('uniformBlockBinding', orig => (program, uniformBlockIndex, uniformBlockBinding) => {\n        return Reflect.apply(orig, gl, [objectId(program), uniformBlockIndex, uniformBlockBinding]);\n    });\n    // Vertex array objects\n    wrap('bindVertexArray', orig => vertexArray => Reflect.apply(orig, gl, [vertexArray && vertexArray.id]));\n    wrap('createVertexArray', orig => () => wrapObject(WebGLVertexArrayObject, Reflect.apply(orig, gl, [])));\n    wrap('deleteVertexArray', orig => vertexArray => Reflect.apply(orig, gl, [vertexArray && vertexArray.id]));\n    wrap('isVertexArray', orig => vertexArray => vertexArray instanceof WebGLVertexArrayObject && Reflect.apply(orig, gl, [vertexArray.id]));\n};\n// Get the GL interface from an DangleContextID and do JS-side setup\nconst getGl = (dangleCtxId) => {\n    if (!global.__DANGLEContexts) {\n        throw new Error('ERR_GL_NOT_AVAILABLE' + \" \" +\n            'GL is currently not available. (Have you enabled remote debugging? GL is not available while debugging remotely.)');\n    }\n    const gl = global.__DANGLEContexts[dangleCtxId];\n    gl.__dangleCtxId = dangleCtxId;\n    delete global.__DANGLEContexts[dangleCtxId];\n    // determine the prototype to use, depending on OpenGL ES version\n    const glesVersion = gl.getParameter(gl.VERSION);\n    const supportsWebGL2 = parseFloat(glesVersion.split(/[^\\d.]+/g).join(' ')) >= 3.0;\n    const prototype = supportsWebGL2\n        ? global.WebGL2RenderingContext.prototype\n        : global.WebGLRenderingContext.prototype;\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(gl, prototype);\n    }\n    else {\n        // Delete this path when we are competely sure we're using modern JSC on Android. iOS 9+\n        // supports Object.setPrototypeOf.\n        gl.__proto__ = prototype; // eslint-disable-line no-proto\n    }\n    wrapMethods(gl);\n    // No canvas yet...\n    gl.canvas = null;\n    // Drawing buffer width/height\n    // TODO(nikki): Make this dynamic\n    const viewport = gl.getParameter(gl.VIEWPORT);\n    gl.drawingBufferWidth = viewport[2];\n    gl.drawingBufferHeight = viewport[3];\n    configureLogging(gl);\n    return gl;\n};\nglobal.WebGLRenderingContext = WebGLRenderingContext;\nglobal.WebGL2RenderingContext = WebGL2RenderingContext;\nglobal.WebGLObject = WebGLObject;\nglobal.WebGLBuffer = WebGLBuffer;\nglobal.WebGLFramebuffer = WebGLFramebuffer;\nglobal.WebGLProgram = WebGLProgram;\nglobal.WebGLRenderbuffer = WebGLRenderbuffer;\nglobal.WebGLShader = WebGLShader;\nglobal.WebGLTexture = WebGLTexture;\nglobal.WebGLUniformLocation = WebGLUniformLocation;\nglobal.WebGLActiveInfo = WebGLActiveInfo;\nglobal.WebGLShaderPrecisionFormat = WebGLShaderPrecisionFormat;\nglobal.WebGLQuery = WebGLQuery;\nglobal.WebGLSampler = WebGLSampler;\nglobal.WebGLSync = WebGLSync;\nglobal.WebGLTransformFeedback = WebGLTransformFeedback;\nglobal.WebGLVertexArrayObject = WebGLVertexArrayObject;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nclass DangleView extends doric.View {\n    constructor() {\n        super(...arguments);\n        this.onPrepared = (contextId) => {\n            if (this.onReady) {\n                this.onReady(getGl(contextId));\n            }\n        };\n    }\n}\n__decorate([\n    doric.Property,\n    __metadata(\"design:type\", Object)\n], DangleView.prototype, \"onPrepared\", void 0);\nfunction dangleView(config) {\n    const ret = new DangleView();\n    ret.layoutConfig = doric.layoutConfig().fit();\n    for (let key in config) {\n        Reflect.set(ret, key, Reflect.get(config, key, config), ret);\n    }\n    return ret;\n}\nfunction vsync(context) {\n    return {\n        requestAnimationFrame: (fn) => {\n            return context.callNative(\"vsync\", \"requestAnimationFrame\", context.function2Id(fn));\n        },\n        cancelAnimationFrame: (requestID) => {\n            context.removeFuncById(requestID);\n            return context.callNative(\"vsync\", \"cancelAnimationFrame\", requestID);\n        },\n    };\n}\n\nexports.DangleView = DangleView;\nexports.WebGLObject = WebGLObject;\nexports.dangleView = dangleView;\nexports.getGl = getGl;\nexports.vsync = vsync;\n//# sourceMappingURL=bundle_dangle.js.map\n","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated January 1, 2020. Replaces all prior versions.\n *\n * Copyright (c) 2013-2020, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\n * or otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { vsync } from \"dangle\";\nimport { TimeKeeper, AssetManager, ManagedWebGLRenderingContext, SceneRenderer, Input } from \"./\";\n/** Manages the life-cycle and WebGL context of a {@link SpineCanvasApp}. The app loads\n * assets and initializes itself, then updates and renders its state at the screen refresh rate. */\nexport class SpineCanvas {\n    /** Constructs a new spine canvas, rendering to the provided HTML canvas. */\n    constructor(doricContext, canvas, config, window) {\n        /** Tracks the current time, delta, and other time related statistics. */\n        this.time = new TimeKeeper();\n        if (config.pathPrefix === undefined)\n            config.pathPrefix = \"\";\n        if (config.app === undefined)\n            config.app = {\n                loadAssets: () => { },\n                initialize: () => { },\n                update: () => { },\n                render: () => { },\n                error: () => { },\n            };\n        if (config.webglConfig === undefined)\n            config.webglConfig = { alpha: true };\n        this.htmlCanvas = canvas;\n        this.doricContext = doricContext;\n        this.context = new ManagedWebGLRenderingContext(canvas, config.webglConfig);\n        this.renderer = new SceneRenderer(canvas, this.context, undefined, window);\n        this.gl = this.context.gl;\n        this.assetManager = new AssetManager(this.doricContext, this.context, config.pathPrefix);\n        this.input = new Input(canvas);\n        const requestAnimationFrame = vsync(doricContext).requestAnimationFrame;\n        //@ts-ignore\n        config.app.loadAssets(this);\n        let loop = () => {\n            requestAnimationFrame(loop);\n            this.time.update();\n            //@ts-ignore\n            config.app.update(this, this.time.delta);\n            //@ts-ignore\n            config.app.render(this);\n            this.gl.endFrame();\n        };\n        let waitForAssets = () => {\n            if (this.assetManager.isLoadingComplete()) {\n                if (this.assetManager.hasErrors()) {\n                    //@ts-ignore\n                    config.app.error(this, this.assetManager.getErrors());\n                }\n                else {\n                    //@ts-ignore\n                    config.app.initialize(this);\n                    loop();\n                }\n                return;\n            }\n            requestAnimationFrame(waitForAssets);\n        };\n        requestAnimationFrame(waitForAssets);\n    }\n    /** Clears the canvas with the given color. The color values are given in the range [0,1]. */\n    clear(r, g, b, a) {\n        this.gl.clearColor(r, g, b, a);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n}\n//# sourceMappingURL=SpineCanvas.js.map"],"names":["MixBlend","MixDirection","EventType","TextureFilter","TextureWrap","TransformMode","AssetManagerBase","Downloader","PositionMode","SpacingMode","RotateMode","BlendMode","LinkedMesh","readTimeline1","readTimeline2","AssetsResource","imageDecoder","resourceLoader","VertexAttributeType","ShapeType","ResizeMode","require$$0","vsync"],"mappings":"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AAC,CAAC;AACzB,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC;AACzB,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC;AACzB,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC;AACzB,gBAAgB,CAAC,EAAE,GAAG,CAAC,CAAC;AACxB,gBAAgB,CAAC,EAAE,GAAG,CAAC,CAAC;AACxB,gBAAgB,CAAC,EAAE,GAAG,CAAC,CAAC;AACxB,gBAAgB,CAAC,EAAE,GAAG,CAAC,CAAC;AACxB,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,gBAAgB,CAAC,EAAE,GAAG,EAAE;;ACvMxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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G,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACxH,QAAQ,IAAI,KAAK,IAAI,CAAC;AACtB,YAAY,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AACrD,QAAQ,IAAI,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC;AAClC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC/F,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,C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G,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvH,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG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AAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,KAAK;AACL,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5B,QAAQ,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;AAC9B,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,C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"}